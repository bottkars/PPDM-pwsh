components:
  parameters:
    filter:
      allowEmptyValue: true
      description: The filter string that is expressed using PowerProtect Data Manager filter syntax. Under Tasks, see Filter the result.
      in: query
      name: filter
      schema:
        type: string
    forceUpgrade:
      allowEmptyValue: true
      description: Indicates whether to force upgrade the PowerProtect Data Manager.
      in: query
      name: forceUpgrade
      schema:
        default: 'true'
        type: string
    orderby:
      allowEmptyValue: true
      description: The attributes and fields to sort by. This parameter can combine with sort direction "ASC" or "DESC". Default direction is ASC. Under Tasks, see Sort the result.
      in: query
      name: orderby
      schema:
        type: string
    page:
      allowEmptyValue: true
      description: The page number to be returned. Must not be less than 1. Under Tasks, see Page the result.
      in: query
      name: page
      schema:
        default: 1
        maximum: 10000
        minimum: 1
        type: integer
    pageSize:
      allowEmptyValue: true
      description: The number of resources to be returned. Must not be less than 1. Under Tasks, see Page the result.
      in: query
      name: pageSize
      schema:
        default: 100
        maximum: 10000
        minimum: 1
        type: integer
    queryState:
      allowEmptyValue: true
      description: Token string to retrieve the next page of a result. The initial search request with queryState must be queryState=BEGIN and a pageSize. After a search begins, subsequent responses include a token string to pass as a parameter for the next page retrieval. When the query state in the response that is returned from the previous search is END, no further results can be retrieved from this query. For more details, under Tasks, see Page the result.
      in: query
      name: queryState
      schema:
        type: string
    upgradePackageId:
      description: The specified package ID for the upgrade.
      in: path
      name: id
      required: true
      schema:
        type: string
  schemas:
    APIFilter:
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      title: APIFilter
      type: object
    APIRule:
      properties:
        filters:
          items:
            $ref: '#/components/schemas/APIFilter'
          type: array
        uriPattern:
          type: string
      title: APIRule
      type: object
    AcceptDataManagerEULA:
      description: Accept PowerProtect Data Manager EULA request.
      properties:
        accepted:
          type: boolean
      type: object
    AcceptPPDMEULA:
      description: Accept PowerProtect Data Manager EULA request.
      properties:
        accepted:
          type: boolean
      type: object
    AcceptTelemetryEULA:
      description: Accept Telemetry EULA request.
      properties:
        accepted:
          type: boolean
      type: object
    AccessToken:
      description: Access token information provided from a successful user login. The information includes the access token, access token expiration time, and refresh token. The access token is used for subsequent authorized actions.
      properties:
        access_token:
          description: 'The access token issued by the authorization server

            as described in RFC 6749 Section 1.4.'
          pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
          type: string
        expires_in:
          description: 'The lifetime in seconds of the access token

            as described in RFC 6749 Section 4.2.2.'
          exclusiveMinimum: false
          format: int32
          minimum: 0
          type: integer
        jti:
          description: 'Unique ID of the access_token.

            It is also a reserved JWT claim and provides a unique identifier for the JWT (JWT ID)

            as described in RFC 7519 Section 4.1.7.

            The value is a case-sensitive string.'
          type: string
        refresh_token:
          description: 'The refresh token issued by the authorization server

            to obtain a new access token when the current

            access token becomes invalid or expires

            as described in RFC 6749 Section 1.5.'
          pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
          type: string
        scope:
          description: The scope of the access token as described by RFC 6749 Section 3.3.
          type: string
        token_type:
          description: 'The type of the token issued as described in RFC 6749 Section 7.1.

            Value is case insensitive.'
          type: string
      required:
      - access_token
      - token_type
      type: object
    AccountChangePasswordResponse:
      description: Account Change Password Response.
      properties:
        username:
          description: The local account name.
          type: string
      required:
      - username
      type: object
    ActionArg:
      description: Action argument (ActionArg) describes the arguments that are used when performing the rule action type (RuleActionType). For example, ActionArgType is set to RESOURCE_GROUP_ID when the RuleActionType is ASSIGN_RESOURCE_GROUP.
      properties:
        name:
          description: The argument name.
          enum:
          - RESOURCE_GROUP_ID
          type: string
        values:
          description: The list of resource group IDs.
          items:
            type: string
          type: array
      title: ActionArg
      type: object
    ActiveDirectoryIdentityProvider:
      description: Active Directory Identity Provider.
      properties:
        availableSince:
          description: Available Since Date.
          format: date-time
          type: string
        config:
          $ref: '#/components/schemas/IdentityProviderConfig'
        description:
          description: Active Directory identity provider description.
          type: string
        enabled:
          default: true
          description: Indicator whether the Active Directory identity provider service is enabled.
          type: boolean
        host:
          description: Host must not include protocol specification (ldap://, ldaps://, etc.)
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: Active Directory Identity Provider locator.
          type: string
        port:
          description: Port number
          type: integer
        secure:
          default: true
          description: Secure connection indicator, internally selects either ldap:// or ldaps://
          type: boolean
        selector:
          description: This parameter defines an LDAP domain in dot notation, e.g. new.exchdns.com instead of dc=new,dc=exchdns,dc=com as before.
          type: string
        serviceAccount:
          $ref: '#/components/schemas/IdentityProviderAccountInfo'
        serviceMarker:
          enum:
          - ldap
          - active-directory
          - local
          type: string
      required:
      - host
      - selector
      type: object
    ActiveDirectoryIdentityProviderResponse:
      description: Active Directory Identity Provider response.
      properties:
        availableSince:
          description: Available Since Date.
          format: date-time
          type: string
        config:
          $ref: '#/components/schemas/IdentityProviderConfig'
        description:
          description: Active Directory identity provider description
          type: string
        enabled:
          default: true
          description: Indicator whether the Active Directory identity provider service is enabled.
          type: boolean
        host:
          description: Host must not include protocol specification (ldap://, ldaps://, etc.)
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: Active Directory Identity Provider locator.
          type: string
        port:
          description: Port number
          type: integer
        secure:
          description: Secure connection indicator, internally selects either ldap:// or ldaps://
          type: boolean
        selector:
          description: This parameter defines an LDAP domain in dot notation, e.g. new.exchdns.com instead of dc=new,dc=exchdns,dc=com as before.
          type: string
        serviceAccount:
          $ref: '#/components/schemas/IdentityProviderAccountInfo'
        serviceMarker:
          description: Identity Provider service marker.
          enum:
          - local
          - ldap
          - active-directory
          type: string
      required:
      - availableSince
      - description
      - host
      - locator
      - secure
      - selector
      - serviceMarker
      type: object
    Activities:
      description: Get Activities.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Activity:
      description: An activity represents a long running asynchronous execution in the system. It can represent a group of jobs, a single job, or a single task.
      properties:
        actions:
          $ref: '#/components/schemas/ActivityActions'
        activityInitiatedType:
          $ref: '#/components/schemas/ActivityInitiatedType'
        asset:
          $ref: '#/components/schemas/Resource'
        averageBytesTransferred:
          description: This parameter is for running job group only. Average over the bytes transferred by completed jobs inside the job group. For activities that support detailed stats, the average for successfully completed activities over the number of protected assets.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        averageDuration:
          description: This parameter is for running job group only. Average over the completed jobs inside the job group.  For activities that support detailed stats, the average for successfully completed activities over the number of protected assets.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        category:
          $ref: '#/components/schemas/ActivityCategory'
        classType:
          description: The type of activity. JOB_GROUP is a group of jobs. JOB is an activity that can be monitored and managed. TASK is a step within a job that can be monitored.
          enum:
          - JOB_GROUP
          - JOB
          - TASK
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createTime:
          description: The create time of the activity. Follows ISO8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        destinationSystem:
          $ref: '#/components/schemas/Resource'
        displayId:
          description: The displayId of the activity. This is only assigned to JOB_GROUP and JOB activity type that do not have a parentId.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        duration:
          description: The total time taken for a running or completed activity.
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        endTime:
          description: The end time of the activity. Follows ISO8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        extendedData:
          $ref: '#/components/schemas/ExtendedData'
        externalId:
          description: If this activity belongs to an external system, the external ID points to the activity ID on that system.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        failedToRetrieveStats:
          items:
            $ref: '#/components/schemas/StatsNotAvailableInfo'
          type: array
        groupByOptions:
          description: This property represents a list of options by which asset-level protection activities can be grouped.
          items:
            type: string
          type: array
        hasChildren:
          description: This parameter is true if the activity has a child.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        hasLogs:
          description: This parameter is true if the activity or its child has a log file.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        host:
          $ref: '#/components/schemas/Resource'
        id:
          description: The ID of the activity.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        infrastructureSource:
          description: Information about the source of a virtual machine restore operation.
          type: string
        initiatedType:
          deprecated: true
          description: The activity initiation type. (Deprecated, use activityInitiatedType instead)
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        interventionGroupId:
          description: References the intervention group that this activity belongs to, or null if it does not belong to any group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySource:
          $ref: '#/components/schemas/Resource'
        logExport:
          $ref: '#/components/schemas/Resource'
        logInfo:
          $ref: '#/components/schemas/ActivityLogInfo'
        name:
          description: The name of the activity.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        nextScheduledTime:
          description: The next scheduled time of the activity. Follows ISO8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        owner:
          $ref: '#/components/schemas/Owner'
        parentId:
          description: The parent ID of activity.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        progress:
          description: Value between 0 and 100 representing % completion for activity.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        progressIssues:
          description: Issues that arise during the progress of the activity.
          enum:
          - NO_REPORTED_ISSUES
          - TIMEOUT_ISSUES
          - CONNECTION_ISSUES
          - STATS_STALL_ISSUES
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionPolicy:
          $ref: '#/components/schemas/Resource'
        restoreGroup:
          $ref: '#/components/schemas/Resource'
        restorePlan:
          $ref: '#/components/schemas/Resource'
        result:
          $ref: '#/components/schemas/ActivityResult'
        scheduleInfo:
          $ref: '#/components/schemas/ScheduleInfo'
        source:
          $ref: '#/components/schemas/ActivitySource'
        sourceCopy:
          $ref: '#/components/schemas/Resource'
        sourceStorageSystem:
          $ref: '#/components/schemas/Resource'
        sourceSystem:
          $ref: '#/components/schemas/Resource'
        startTime:
          description: The start time of the activity. Follows ISO8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          description: The state of the activity.
          enum:
          - QUEUED
          - RUNNING
          - PENDING_CANCELLATION
          - COMPLETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stateDetails:
          $ref: '#/components/schemas/StateDetails'
        stateSummaries:
          $ref: '#/components/schemas/ActivityStateSummaries'
        stats:
          $ref: '#/components/schemas/ActivityStats'
        statsNotSupportedByApp:
          items:
            $ref: '#/components/schemas/StatsNotAvailableInfo'
          type: array
        statsRequireAgentUpgrade:
          items:
            $ref: '#/components/schemas/StatsNotAvailableInfo'
          type: array
        steps:
          items:
            $ref: '#/components/schemas/ActivityStep'
          type: array
        storageSystem:
          $ref: '#/components/schemas/Resource'
        subcategory:
          description: The subcategory within a category.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        throttlingInfo:
          $ref: '#/components/schemas/ThrottlingInfo'
        updateTime:
          description: The update time of the activity. Follows ISO8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        username:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - category
      - classType
      - createTime
      - id
      - name
      - progress
      - state
      - updateTime
      type: object
    ActivityActions:
      description: The options for the activity actions.
      properties:
        cancelable:
          description: This parameter is true if the activity can be canceled.
          type: boolean
        retryable:
          description: This parameter is true if the activity can be retried.
          type: boolean
      type: object
    ActivityBody:
      properties:
        activityId:
          type: string
        error:
          $ref: '#/components/schemas/FlrErrorMessage'
      title: ActivityBody
      type: object
    ActivityCancelRequest:
      description: The cancel option to use.
      properties:
        cancelOption:
          enum:
          - ALL
          - SAME_INTERVENTION_GROUP
          type: string
      type: object
    ActivityCategory:
      description: The category of the activity.
      enum:
      - CLOUD_COPY_RECOVER
      - CLOUD_DR
      - CLOUD_PROTECT
      - CLOUD_TIER
      - CONFIG
      - DATA_MOVEMENT
      - DELETE
      - DISASTER_RECOVERY
      - DISCOVER
      - EXPORT_REUSE
      - GARBAGE_COLLECTION
      - HOST_CONFIGURATION
      - INDEX
      - INSTANT_ACCESS_ATTACH
      - INSTANT_ACCESS_DETACH
      - INSTANT_ACCESS_DELETE_SESSION
      - MANAGE
      - NOTIFY
      - PROTECT
      - PUSH_UPDATE
      - REPLICATE
      - RESTORE
      - SYSTEM
      - VALIDATE
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    ActivityInitiatedType:
      description: The activity initiation type.
      enum:
      - MANUAL
      - SCHEDULED
      - RETRIED
      - SELF_SERVICE
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    ActivityLogInfo:
      description: The error log information about the failure or warning that occurred for the activity. This can be a long description with some exceptions trace and other debug information.
      properties:
        fileName:
          description: The path to extended error information.
          type: string
        logText:
          description: The extended error information.
          items:
            type: string
          type: array
      type: object
    ActivityMetrics:
      description: An activity metric presents a list of status counts for a collection of activities.
      properties:
        aggregation:
          deprecated: true
          description: 'A list of name-value pairs representing the number of activities in each status or state.


            This object is deprecated, use `statusesAndStates` instead.'
          items:
            $ref: '#/components/schemas/NameValuePairInteger'
          type: array
        fromCreateTime:
          description: The oldest created activity in this time interval.
          format: date-time
          type: string
        statusesAndStates:
          description: A list of metrics for each state or status.
          items:
            $ref: '#/components/schemas/ActivityStateMetrics'
          type: array
        toCreateTime:
          description: The latest created activity in this time interval.
          format: date-time
          type: string
    ActivityResult:
      description: The result of the activity.
      properties:
        bytesTransferred:
          description: The total data transferred to a storage during an activity in bytes. If the value is 0, nothing was transferred. Deprecated.  Use stats.bytesTransferred.
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/ActivityResultError'
        status:
          description: The status of a completed activity.
          enum:
          - OK
          - CANCELED
          - FAILED
          - OK_WITH_ERRORS
          - UNKNOWN
          - SKIPPED
          type: string
        summaries:
          description: The summary of the activity.
          items:
            type: string
          type: array
      type: object
    ActivityResultError:
      description: The error code, reason, remediation, extendedReason, detailedDescription and arguments.
      properties:
        arguments:
          items:
            $ref: '#/components/schemas/NameValuePairString'
          type: array
        code:
          description: The error code or message id for message catalog.
          type: string
        detailedDescription:
          description: The detailed description from message catalog.
          type: string
        extendedReason:
          description: The extended reason not from the message catalog.
          type: string
        messageID:
          description: The EEMI message ID.
          type: string
        reason:
          description: The error reason or message from message catalog.
          type: string
        remediation:
          description: The remediation or remediation from message catalog.
          type: string
      type: object
    ActivityRetryBulkRequest:
      description: '### ID of job that needs to be retried.'
      properties:
        retryJobIds:
          description: Job ID to be retried.
          items:
            type: string
          type: array
      type: object
    ActivityRetryBulkResponse:
      description: Retry jobs response.
      properties:
        retryJobsInitiatedCount:
          format: int32
          type: integer
        retryJobsReceivedCount:
          format: int32
          type: integer
        retryResults:
          items:
            $ref: '#/components/schemas/RetryActivityResult'
          type: array
      type: object
    ActivitySource:
      description: The PowerProtect Data Manager where the activity is initiated from.
      properties:
        description:
          description: Origin resource description
          type: string
        id:
          description: Origin resource id
          type: string
        type:
          description: Originating source type
          enum:
          - DATA_MANAGER
          - OPERATING_ENVIRONMENT
          - PROTECTION_STORAGE
          type: string
      required:
      - type
      type: object
    ActivityStateBucket:
      description: A bucket the given state or status belongs to.
      enum:
      - OK
      - WARNING
      - ERROR
      - RUNNING
      - INTERRUPTED
      - TOTAL
      - 'NULL'
      title: ActivityStateBucket
      type: string
    ActivityStateMetrics:
      description: Metrics for the given activity state or status.
      properties:
        bucket:
          $ref: '#/components/schemas/ActivityStateBucket'
        count:
          description: The number of activities in the given state or status.
          format: int64
          type: integer
        name:
          $ref: '#/components/schemas/ActivityStateMetricsName'
        percentage:
          description: The percentage of activities at the given state or status, relative to the total amount of activities returned in this response.
          format: double
          type: number
      title: ActivityStateMetrics
      type: object
    ActivityStateMetricsName:
      description: The name of the metrics object.
      enum:
      - QUEUED
      - RUNNING
      - PENDING_CANCELLATION
      - COMPLETED
      - OK
      - CANCELED
      - FAILED
      - OK_WITH_ERRORS
      - UNKNOWN
      - SKIPPED
      - TOTAL
      title: ActivityStateMetricName
      type: string
    ActivityStateSummaries:
      description: The summary of the children activities. Includes state, completion status, and total counts for classType of JOB_GROUP.
      properties:
        canceled:
          description: The count of child activities in canceled state.
          format: int32
          type: integer
        completed:
          description: The count of child activities in completed state.
          format: int32
          type: integer
        criticalEvent:
          description: The count of child activities in the worst (critical/warning/canceled) state.
          format: int32
          type: integer
        failed:
          description: The count of child activities in failed state.
          format: int32
          type: integer
        ok:
          description: The count of child activities in OK state.
          format: int32
          type: integer
        okWithErrors:
          description: The count of child activities in OK with errors (okWithErrors) state.
          format: int32
          type: integer
        pendingCancellation:
          description: The count of child activities in pending cancellation state.
          format: int32
          type: integer
        queued:
          description: The count of child activities in queued state.
          format: int32
          type: integer
        running:
          description: The count of child activities in running state.
          format: int32
          type: integer
        skipped:
          description: The count of child activities in skipped state.
          format: int32
          type: integer
        total:
          description: The total count of the child activities.
          format: int32
          type: integer
        unknown:
          description: The count of child activities in unknown state.
          format: int32
          type: integer
      type: object
    ActivityStats:
      description: The activity statistics.
      properties:
        assetSizeInBytes:
          description: The asset size in bytes.
          format: int64
          type: integer
        bytesTransferred:
          description: The total data transferred to storage.
          format: int64
          type: integer
        bytesTransferredThroughput:
          description: 'The average bytes transferred for successfully completed activities over the number of protected assets.

            '
          format: double
          type: number
        bytesTransferredThroughputUnitOfTime:
          description: Time used to calculate the throughput.
          type: string
        dedupeRatio:
          description: Pre-compression bytes divided by post-compression bytes.
          format: double
          type: number
        numberOfAgents:
          description: Number of agents involved at the job group level.
          format: int32
          type: integer
        numberOfAssets:
          description: Total number of assets being processed.
          format: int32
          type: integer
        numberOfProtectedAssets:
          description: Total number of assets protected.
          format: int32
          type: integer
        postCompBytes:
          description: Size in bytes after client side compression. Data written to storage.
          format: int64
          type: integer
        preCompBytes:
          description: Data sent to Boost SDK to write while backup is running or when it is done. Data read from Boost SDK to restore. Size in bytes prior to client side compression.
          format: int64
          type: integer
        reductionPercentage:
          description: Calculated as  (1-postCompBytes/preCompBytes)*100.
          format: double
          type: number
        storageCompStats:
          $ref: '#/components/schemas/StorageCompStats'
      type: object
    ActivityStep:
      description: Data Model to support Job Steps Feature.
      properties:
        description:
          description: Additional Description
          type: string
        durationInMillis:
          description: Time taken to complete the step in milliseconds.
          format: int64
          type: integer
        endTime:
          description: End Time of the Step
          format: date-time
          type: string
        name:
          description: Name of the step. Unique within the list of steps.
          type: string
        startTime:
          description: Start time of the step.
          format: date-time
          type: string
        status:
          description: Status of the step
          enum:
          - QUEUED
          - RUNNING
          - SUCCESS
          - WARNING
          - FAILED
          - CANCELED
          - UNKNOWN
          - SKIPPED
          type: string
      required:
      - name
      - status
      title: ActivityStep
      type: object
    Address:
      description: Address object added for the ClusterInfo
      properties:
        type:
          type: string
        value:
          type: string
      title: Address
      type: object
    Addresses:
      properties:
        ipv4:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        ipv6:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        wwpn:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AdhocProtectionResult:
      description: Adhoc protection result for each stage of protection policy.
      properties:
        activityId:
          description: The activity job ID for each manual protection job.
          type: string
        reason:
          description: HTTP status reason for each manual protection job for the associated stage.
          type: string
        remediation:
          description: HTTP status remediation for each manual protection job for the associated stage.
          type: string
        stageId:
          description: ID of stage in the protection policy.
          type: string
        status:
          description: HTTP status code for each manual protection job for the associated stage.
          format: int32
          type: integer
      type: object
    AdhocProtectionStage:
      properties:
        extendedRetentions:
          description: Extended retentions for adhoc protection or adhoc replication.
          items:
            properties:
              backupType:
                description: Detailed backup type for adhoc protection or adhoc replication
                enum:
                - FULL
                - DIFFERENTIAL
                - LOG
                - INCREMENTAL
                - CUMULATIVE
                - AUTO_FULL
                - SYNTHETIC_FULL
                - GEN0
                type: string
              interval:
                type: integer
              unit:
                description: 'Extended retention interval unit. Valid values are the following:

                  - DAY

                  - WEEK

                  - MONTH

                  - YEAR'
                enum:
                - YEAR
                - MONTH
                - WEEK
                - DAY
                type: string
            type: object
          type: array
        id:
          type: string
        operation:
          $ref: '#/components/schemas/AdhocProtectionStageOperation'
        options:
          $ref: '#/components/schemas/AdhocProtectionStageOptions'
        retention:
          $ref: '#/components/schemas/ProtectionPolicyStageRetentionTime'
      type: object
    AdhocProtectionStageOperation:
      description: operation which include backup type info for adhoc protection
      properties:
        backupType:
          description: Detailed backup type for adhoc protection
          enum:
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          - AUTO_FULL
          - SYNTHETIC_FULL
          - GEN0
          type: string
      type: object
    AdhocProtectionStageOptions:
      description: Free-form adhoc protection stage options in JSON. If options is null, it means selecting all copies for the adhoc replication.
      properties:
        copyDirectives:
          description: Indicate to take some actions on the selected copies. E.g. Mark the selected copies as SKIPPED so the next replication process will ignore them.
          items:
            properties:
              type:
                description: Only support MARK_SKIPPED_COPIES by now.
                enum:
                - MARK_SKIPPED_COPIES
                type: string
              value:
                type: string
            title: copyDirective
            type: object
          title: copyDirectives
          type: array
        copySelectors:
          description: Indicate how to select copies for the adhoc replication.
          items:
            properties:
              type:
                description: Only support two types including LAST_N_DAYS and LAST_N_COPIES.
                enum:
                - LAST_N_DAYS
                - LAST_N_COPIES
                type: string
              value:
                description: The lower limit is 1 and there is no upper limit.
                items:
                  type: string
                type: array
            title: copySelector
            type: object
          title: copySelectors
          type: array
      title: options
      type: object
    Agent:
      properties:
        address:
          type: string
        certificateSigningRequest:
          type: string
        createdTime:
          description: Timestamp when the agent was created (ISO 8601 format).
          type: string
        id:
          type: string
        plugins:
          items:
            $ref: '#/components/schemas/Plugin'
          type: array
          uniqueItems: true
        port:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: int32
          maximum: 65535
          minimum: 0
          type: integer
        preferredAddress:
          $ref: '#/components/schemas/PreferredAddress'
        registeredTime:
          description: Timestamp when the agent was registered (ISO 8601 format).
          type: string
        version:
          type: string
      type: object
    AgentAddresses:
      properties:
        isPreferredAddress:
          type: boolean
        isTrusted:
          type: boolean
        type:
          $ref: '#/components/schemas/PreferredAddressType'
        value:
          type: string
      type: object
    AgentInfo:
      properties:
        Agent:
          type: string
        AgentName:
          type: string
        OsBits:
          format: int32
          type: integer
        OsType:
          type: string
        Version:
          type: string
      type: object
    AgentRegistrationStatus:
      properties:
        agent:
          $ref: '#/components/schemas/Agent'
        applications:
          items:
            $ref: '#/components/schemas/AgentRegistrationStatusApplication'
          type: array
          uniqueItems: true
        hostId:
          type: string
        hostname:
          type: string
        inventorySourceId:
          type: string
        lastUpdateStatus:
          enum:
          - OK
          - FAILED
          type: string
        os:
          enum:
          - WINDOWS
          - LINUX
          - AIX
          type: string
        status:
          enum:
          - WAITING
          - PENDING
          - REGISTERED
          - REJECTED
          - EXPIRED
          - ACCEPTINGCERTS
          - APPROVED
          type: string
        statusError:
          $ref: '#/components/schemas/StatusError'
        summary:
          items:
            $ref: '#/components/schemas/AgentRegistrationStatusSummary'
          type: array
        throttlingConfig:
          $ref: '#/components/schemas/throttlingConfig'
        updateState:
          enum:
          - AVAILABLE
          - SCHEDULED
          - IN_PROGRESS
          - UP_TO_DATE
          - NOT_SUPPORTED
          type: string
        updateStateDescription:
          description: It Contains description if update is not supported
          type: string
        updateVersionAvailable:
          items:
            type: string
          type: array
        whitelist:
          $ref: '#/components/schemas/Whitelist'
      type: object
    AgentRegistrationStatusApplication:
      properties:
        name:
          type: string
        packageId:
          type: string
        packageVersion:
          type: string
        type:
          enum:
          - MSSQL
          - ORACLE
          - FS
          - SAP_HANA_DATABASE_SYSTEM
          - STORAGEGROUP
          - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
          type: string
        version:
          type: string
      type: object
    AgentRegistrationStatusSummary:
      properties:
        pending:
          description: The number of agents in pending state for registration.
          type: integer
        registered:
          description: The number of agents in registered state.
          type: integer
        rejected:
          description: The number of agents in rejected state.
          type: integer
        updateFailed:
          type: integer
        updateInProgress:
          type: integer
        updateScheduled:
          type: integer
        updateUpToDate:
          type: integer
        updatesAvailable:
          type: integer
        waiting:
          description: The number of agents in waiting state for registration.
          type: integer
      type: object
    AgentRegistrationStatuses:
      description: Get Agent Registration Statuses response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/AgentRegistrationStatus'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    AgentsUpdateSessionList:
      description: All push update session
      properties:
        content:
          items:
            $ref: '#/components/schemas/AgentsUpdateSessionResponse'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      title: AgentsUpdateList
      type: object
    AgentsUpdateSessionRequest:
      description: Request for the push update
      properties:
        hosts:
          items:
            properties:
              appServerTypes:
                items:
                  enum:
                  - MSSQL
                  - ORACLE
                  - FS
                  - SAP_HANA_DATABASE_SYSTEM
                  - STORAGEGROUP
                  - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
                  type: string
                type: array
              id:
                type: string
            type: object
          type: array
          uniqueItems: true
        name:
          type: string
        precheckOnly:
          type: boolean
        scheduledAt:
          format: date-time
          type: string
      type: object
    AgentsUpdateSessionResponse:
      description: Push update session API response
      properties:
        hosts:
          items:
            properties:
              appServerTypes:
                items:
                  type: string
                type: array
              id:
                type: string
            type: object
          type: array
          uniqueItems: true
        id:
          type: string
        name:
          type: string
        precheckOnly:
          type: boolean
        scheduledAt:
          format: date-time
          type: string
        status:
          enum:
          - COMPLETED
          - IN_PROGRESS
          - SCHEDULED
          type: string
      type: object
    Alert:
      description: Represents a alert resource.
      properties:
        acknowledgement:
          $ref: '#/components/schemas/AlertAcknowledgement'
        activitiesCount:
          description: Number of related jobs.
          format: int32
          type: integer
        blockedActions:
          items:
            enum:
            - ACKNOWLEDGE
            - ACKNOWLEDGE_EXTERNAL
            - UNACKNOWLEDGE
            - UNACKNOWLEDGE_EXTERNAL
            - EDIT_NOTE
            - EDIT_NOTE_EXTERNAL
            type: string
          type: array
        category:
          description: The category of the alert message.
          enum:
          - AGENT
          - APPLIANCE_INFRASTRUCTURE_HARDWARE
          - APPLIANCE_INFRASTRUCTURE_SERVICES
          - APP_HOST_CONFIGURATION
          - CAPACITY
          - CLOUD_TIER
          - COMPLIANCE
          - DISCOVER
          - EXPORT_LOG
          - FILESYSTEM
          - FIRMWARE
          - LICENSE
          - NAS_SERVER_DR
          - NETWORK
          - PROTECTION
          - PROTECTION_COPY
          - PROTECTION_INFRASTRUCTURE
          - PROTECTION_POLICY
          - PROTECTION_RULE
          - PROTECTION_SOURCE
          - PUSH_UPDATE
          - REPLICATION
          - REPORTING
          - RESTORE
          - RESTORE_PLAN
          - SECURITY
          - SELF_SERVICE
          - SERVER_DR
          - STORAGE
          - SYSTEM
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        detailSummaries:
          deprecated: true
          description: The details from individual task. This field is deprecated. Use `activitiesCount` to get the number of associated activities, or query the activities API to get more information.
          items:
            $ref: '#/components/schemas/AlertDetailSummary'
          type: array
        detailedDescription:
          description: The detailed description of the alert message.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        email:
          description: This parameter is true if the alert message can generate an email.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: false
        esrs:
          description: This parameter is true if the alert message is sent by ESRS to  the support team.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        excluded:
          description: If the alert message is displayed in the Alert UI by default, the value of this property is false.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        externalId:
          description: If this alert belongs to an external system, the external ID points to the alert ID on that system.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        hardwareInfo:
          $ref: '#/components/schemas/HardwareInfo'
        id:
          description: ID of the alert.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        jobId:
          description: The job ID associated to the alert message.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastOccurrenceTime:
          description: The date and time when the most recent alert message is received.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        message:
          description: The message that the variable values are substituted with message arguments.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        messageArgs:
          description: The alert message arguments are the values for any substitution variables that are defined as part of the message.
          items:
            type: string
          type: array
          x-ppdm-filter: false
          x-ppdm-sort: false
        messageID:
          description: EEMI conformed message ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        postedTime:
          description: The created time of the alert message.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        responseAction:
          description: The response action for this alert message.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        severity:
          description: The severity of the alert message.
          enum:
          - CRITICAL
          - WARNING
          - INFORMATIONAL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        source:
          $ref: '#/components/schemas/MessageSource'
        supportDetails:
          description: Additional low level details for support.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        taskId:
          description: The task ID that is associated with the alert message.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        userNote:
          $ref: '#/components/schemas/UserNote'
        visibility:
          description: This is true if the alert message is visible for the users.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - id
      type: object
    AlertAcknowledgement:
      description: The acknowledgement details of an alert.
      properties:
        acknowledgeBy:
          description: The name of the user who acknowledged the alert message.
          type: string
        acknowledgeState:
          description: The acknowledgement state.
          enum:
          - ACKNOWLEDGED
          - UNACKNOWLEDGED
          type: string
        acknowledgeTime:
          description: The time the message was acknowledged. Follows ISO 8601.
          format: date-time
          type: string
      required:
      - acknowledgeState
      type: object
    AlertDetailSummary:
      deprecated: true
      description: The details from individual failed activities within the alert.
      properties:
        summary:
          description: The description of the failed activity.
          type: string
        taskId:
          description: The activity ID that failed.
          type: string
      type: object
    AlertMetrics:
      description: Alert metrics that include summaries of unacknowledged counts per severity.
      properties:
        acknowledgedCriticalCount:
          description: Number of acknowledged critical alerts.
          format: int32
          type: integer
        acknowledgedInformationalCount:
          description: Number of acknowledged informational alerts.
          format: int32
          type: integer
        acknowledgedWarningCount:
          description: Number of acknowledged warning alerts.
          format: int32
          type: integer
        allCriticalCount:
          description: Number of all critical alerts.
          format: int32
          type: integer
        allInformationalCount:
          description: Number of all informational alerts.
          format: int32
          type: integer
        allWarningCount:
          description: Number of all warning alerts.
          format: int32
          type: integer
        fromPostTime:
          description: The oldest alert posted in this time interval.
          format: date-time
          type: string
          x-ppdm-filter: true
        toPostTime:
          description: The latest alert posted in this time interval.
          format: date-time
          type: string
          x-ppdm-filter: true
        totalAcknowledgedCount:
          description: Total number of acknowledged alerts.
          format: int32
          type: integer
        totalAllCount:
          description: Total number of all alerts.
          format: int32
          type: integer
        totalUnacknowledgedCount:
          description: Total number of unacknowledged alerts.
          format: int32
          type: integer
        unacknowledgedCriticalCount:
          description: Number of unacknowledged critical alerts.
          format: int32
          type: integer
        unacknowledgedInformationalCount:
          description: Number of unacknowledged informational alerts.
          format: int32
          type: integer
        unacknowledgedWarningCount:
          description: Number of unacknowledged warning alerts.
          format: int32
          type: integer
      type: object
    Alerts:
      description: Get Alerts.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    AllottedModes:
      description: Includes the information about the session that has reserved the proxy and number of transport sessions are reserved for the session.
      properties:
        CapacityUnits:
          format: int32
          type: integer
        ControlUnits:
          format: int32
          type: integer
        ReservedBy:
          $ref: '#/components/schemas/ReservedBy'
        TotalControlSessions:
          format: int32
          type: integer
        TotalTransportSessions:
          format: int32
          type: integer
      type: object
    AppHost:
      properties:
        agent:
          properties:
            version:
              description: The release version the of the host.
              type: string
          type: object
        appServers:
          items:
            $ref: '#/components/schemas/AppHostAppServer'
          type: array
          uniqueItems: true
        applicationsOfInterest:
          items:
            $ref: '#/components/schemas/AppHostApplicationsOfInterest'
          type: array
          uniqueItems: true
        dbConnection:
          $ref: '#/components/schemas/ConnectionInfo'
        dbCredentialId:
          deprecated: true
          type: string
        oracleDBProperties:
          $ref: '#/components/schemas/OracleDBProperties'
        os:
          description: The operating system, including WINDOWS, LINUX and AIX.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        phase:
          enum:
          - NONE
          - NEEDSAPPROVAL
          - SENDCERT
          - UNAPPROVED
          - UNREGISTERED
          - UPDATEPLUGINS
          - PARTIALCREATE
          - NOAGENT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionEngineFlow:
          enum:
          - VMDIRECT
          - APPDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        rmanConnection:
          $ref: '#/components/schemas/ConnectionInfo'
        subTypes:
          items:
            enum:
            - MSSQL
            - ORACLE
            - FS
            - SAP_HANA_DATABASE_SYSTEM
            - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
            - STORAGEGROUP
            type: string
          readOnly: true
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        throttlingConfig:
          $ref: '#/components/schemas/throttlingConfig'
      type: object
    AppHostAppServer:
      properties:
        databaseCount:
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AppHostApplicationsOfInterest:
      properties:
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        pushHostCredential:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          enum:
          - MSSQL
          - ORACLE
          - FS
          - SAP_HANA_DATABASE_SYSTEM
          - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
          - STORAGEGROUP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        updateCapable:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        version:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AppServer:
      description: Information about the Application Servers.
      properties:
        attributes:
          $ref: '#/components/schemas/AppServerAttributes'
        clusterInfo:
          $ref: '#/components/schemas/ClusterInfo'
        clusterType:
          enum:
          - AAG
          - FCI
          - RAC
          - NONE
          - MULTI_NODE
          - DAG
          - GENERIC
          type: string
        createdBy:
          $ref: '#/components/schemas/CreatedByTypeEnum'
        createdTime:
          format: date-time
          type: string
        databaseCount:
          deprecated: true
          format: int32
          type: integer
        guid:
          deprecated: true
          type: string
        hostId:
          type: string
        id:
          type: string
        installLocation:
          deprecated: true
          type: string
        lastDiscovered:
          format: date-time
          type: string
        lastDiscoveryStatus:
          enum:
          - NEW
          - DETECTED
          - NOT_DETECTED
          - DELETED
          type: string
        lastTransactionId:
          deprecated: true
          type: string
        lastUpdated:
          format: date-time
          type: string
        name:
          type: string
        protectionEngineFlow:
          enum:
          - APPDIRECT
          - VMDIRECT
          - HYPERVISORDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - AVAILABLE
          - NOT_DETECTED
          - DELETED
          type: string
        supportedProtectionProtocols:
          description: An array of the type of PowerProtect DD system protection supported by the application server. Values are BOOSTFS and DDBOOST. DDBOOST is always included.
          items:
            enum:
            - DDBOOST
            - BOOSTFS
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        tenantId:
          type: string
        type:
          enum:
          - MSSQL
          - ORACLE
          - FS
          - SAP_HANA_DATABASE_SYSTEM
          - STORAGEGROUP
          - MICROSOFT_EXCHANGE_DATABASE_SYSTEM
          type: string
        userTags:
          deprecated: true
          items:
            type: string
          type: array
          uniqueItems: true
        version:
          type: string
      type: object
    AppServerAttributes:
      deprecated: true
      properties:
        mssqlAppServer:
          $ref: '#/components/schemas/MssqlAppServerAttribute'
        oracleAppServer:
          $ref: '#/components/schemas/OracleAppServerAttribute'
      type: object
    Asset:
      description: AssetRestModel
      properties:
        _embedded:
          $ref: '#/components/schemas/AssetEmbedded'
        aliasRefs:
          items:
            $ref: '#/components/schemas/AssetAliasRef'
          type: array
        assetGroupId:
          deprecated: true
          type: string
        backupBranch:
          description: A sequence number which when changed causes the promoteToFull field to be set to true.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupDetails:
          items:
            $ref: '#/components/schemas/AssetBackupDetails'
          type: array
        containerRef:
          description: Details about the asset container.
          properties:
            category:
              description: Category of the container.
              enum:
              - STORAGE_ARRAY
              - HOST
              - APPLICATION_SERVER
              type: string
            id:
              description: ID of the container.
              type: string
            name:
              description: Name of the container.
              type: string
            version:
              description: Version of the container.
              type: string
          type: object
        createdAt:
          description: Created time for the asset.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createdBy:
          $ref: '#/components/schemas/CreatedByTypeEnum'
        credentialId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        credentials:
          description: Credentials of Asset.
          items:
            $ref: '#/components/schemas/AssetCredentials'
          type: array
        dataTargetIds:
          description: IDs of data targets associated with this asset.
          items:
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        deleted:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        details:
          $ref: '#/components/schemas/AssetDetails'
        extendedData:
          $ref: '#/components/schemas/AssetExtendedData'
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceRef:
          description: Details about the inventory source to which the asset belongs.
          properties:
            id:
              description: ID of the inventory source.
              type: string
            name:
              description: Name of the inventory source.
              type: string
            primaryAddress:
              description: IP address of the inventory source.
              type: string
          type: object
        lastAvailableCopyTime:
          description: The date and time of the last available copy for this asset.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of an asset.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        networkLabel:
          description: Network label assigned to this asset.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        operatingSystem:
          $ref: '#/components/schemas/AssetOperatingSystem'
        originType:
          description: Denotes the type of asset based on how it was created.
          enum:
          - ORIGINAL
          - CLONE
          - REPLICA
          type: string
        parentRefs:
          description: Details about the parent assets.
          items:
            properties:
              id:
                description: ID of the parent asset.
                type: string
            type: object
          type: array
        preferredHostRef:
          $ref: '#/components/schemas/AssetPreferredHostRef'
        promoteToFull:
          description: If true, then the next time this asset is protected it must be with a full backup.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectable:
          description: Used for marking whether the asset can be added in the protection policy.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionCapacity:
          $ref: '#/components/schemas/AssetProtectionCapacity'
        protectionGroupRef:
          description: Protection group to which the asset is assigned.
          properties:
            backupStrategy:
              description: Backup strategy of the protection group.
              enum:
              - BACKUP_ALL
              - BACKUP_BY_RANK
              - BACKUP_PRIMARY_ONLY
              - BACKUP_STANDALONE
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            id:
              description: ID of the protection group.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            memberRole:
              description: The role that this asset plays in the protection group.
              enum:
              - GENERIC
              - LOGICAL_STANDBY
              - PHYSICAL_STANDBY
              - PRIMARY
              - SNAPSHOT_STANDBY
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            name:
              description: Name of the protection group.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            type:
              description: Type of the protection group.
              enum:
              - ORACLE_DATA_GUARD
              - STORAGE_DIRECT_APPLICATION
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
          type: object
        protectionLifeCycleId:
          deprecated: true
          description: Deprecated. Use protectionPolicyId instead.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionPolicy:
          $ref: '#/components/schemas/ParentProtectionPolicy'
        protectionPolicyId:
          description: ID of the protection policy that the asset belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionProtocol:
          description: The protection protocol supported by the asset.
          enum:
          - BOOSTFS
          - NFS
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionStatus:
          description: Used to indicate if the asset is assigned to a protection policy, and, if so, whether it is to be protected or excluded.
          enum:
          - UNPROTECTED
          - PROTECTED
          - EXCLUDED
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        replicaRefs:
          description: Details about the asset replication.
          items:
            properties:
              id:
                description: ID of the replicated asset.
                type: string
              inventorySourceRef:
                description: Details about the inventory source to which the replicated asset belongs.
                properties:
                  id:
                    description: ID of inventory source.
                    type: string
                  name:
                    description: Name of inventory source.
                    type: string
                  primaryAddress:
                    description: IP address of the inventory source.
                    type: string
                type: object
              mode:
                description: Mode of replication.
                enum:
                - SYNCHRONOUS
                - ASYNCHRONOUS
                type: string
              name:
                description: Name of the replicated asset.
                type: string
              status:
                description: Status of replication.
                enum:
                - ENABLED
                - SUSPENDED
                type: string
            type: object
          type: array
        resourceGroupIds:
          deprecated: true
          description: ID of resource groups.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        resourceGroups:
          description: Resource groups of the asset.
          items:
            $ref: '#/components/schemas/AssetResourceGroup'
          type: array
        ruleId:
          description: Dynamic filter ID that adds the asset in the protection policy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ruleName:
          description: Name of assets rule that adds the asset in the protection policy.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        size:
          description: The total size in bytes for this asset.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - NOT_DETECTED
          - DELETED
          - AVAILABLE
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        subtype:
          $ref: '#/components/schemas/AssetSubtypeEnum'
        type:
          description: The type of an asset
          enum:
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - NAS_SHARE
          - CLOUD_NATIVE_ENTITY
          - POWERSTORE_BLOCK
          - CLOUD_DIRECTOR_VAPP
          - DR
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        updatedAt:
          description: Update time for the asset.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        userTags:
          description: Only for VMware assets. The user can create tags for one VM at the vCenter side.
          items:
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        vendor:
          $ref: '#/components/schemas/VendorEnum'
      required:
      - details
      - name
      - type
      title: ''
      type: object
    AssetAliasRef:
      description: The aliases of the asset.
      properties:
        assetId:
          description: Asset id of aliases.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Asset name of aliases.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetBackupDetails:
      properties:
        backupType:
          $ref: '#/components/schemas/BackupTypeEnum'
        parallelism:
          type: integer
      type: object
    AssetCopies:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Copy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    AssetCredentials:
      properties:
        extraInfo:
          items:
            $ref: '#/components/schemas/AssetExtraInfo'
          type: array
        id:
          type: string
        type:
          $ref: '#/components/schemas/ConnectionTypeEnum'
      type: object
    AssetDatabase:
      properties:
        appServerId:
          deprecated: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        appServerName:
          description: DB server name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        appServerSupportedProtectionProtocols:
          description: A copy of the asset's associated application server's supportedProtectionProtocols field, if any.
          items:
            enum:
            - DDBOOST
            - BOOSTFS
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        appVersion:
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        asm:
          deprecated: true
          type: string
        clusterName:
          description: Name of DB cluster.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        clusterType:
          description: 'DB cluster type. For example: RAC.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dbId:
          deprecated: true
          type: string
        lastBackup:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        nfsShare:
          properties:
            name:
              description: Name of the NFS share.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            version:
              description: NFS version.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
          required:
          - name
          - version
          type: object
        protectionEngineFlow:
          enum:
          - VMDIRECT
          - APPDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionType:
          deprecated: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        relativeNFSDirectory:
          description: Folder path relative to the top level path where the NFS export is mounted.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        relativeWorkingDirectory:
          description: Folder path relative to the top level path where temporary files are stored.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        sid:
          deprecated: true
          type: string
      type: object
    AssetDetails:
      properties:
        database:
          $ref: '#/components/schemas/AssetDatabase'
        fileSystem:
          $ref: '#/components/schemas/AssetFileSystem'
        k8s:
          $ref: '#/components/schemas/AssetKubernetes'
        nasShare:
          $ref: '#/components/schemas/AssetNas'
        storage:
          $ref: '#/components/schemas/AssetStorage'
        vm:
          $ref: '#/components/schemas/AssetVm'
        vmaxStorageGroup:
          $ref: '#/components/schemas/AssetVmaxStorageGroup'
      type: object
    AssetEmbedded:
      properties:
        protectionPolicy:
          $ref: '#/components/schemas/EmbeddedProtectionPolicy'
        protectionlifeCycle:
          $ref: '#/components/schemas/EmbeddedProtectionPolicy'
        storageSystem:
          $ref: '#/components/schemas/EmbeddedIdName'
      readOnly: true
      type: object
    AssetExtendedData:
      properties:
        continueOnFileNameLenLimitReached:
          description: If true, continue with the backup of the file/folder when the file/folder name length exceeds 255 bytes.
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        depthLimit:
          description: Slice depth limit. It is used during the SnapshotSlice operation when creating a backup.
          format: int32
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        failedBackupRetryCount:
          description: Auto retry for slices that failed to complete during the backup session.
          format: int32
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        skipFilesWithNameLenLimitReached:
          description: If true then skip the folder/file during a backup when the length of the file/folder exceeds 255 bytes.
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        sliceFileCount:
          description: Slice file count limit. It is used during the SnapshotSlice operation when creating a backup.
          format: int32
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        sliceSize:
          description: Slice file size limit. It is used during the SnapshotSlice operation when creating a backup.
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        updateTimeOut:
          description: Timeout interval after which the backup session is canceled.
          format: int32
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    AssetExtraInfo:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    AssetFileSystem:
      properties:
        appServerId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        appServerName:
          description: File System application server name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        clusterName:
          description: Name of File System application server cluster.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        clusterType:
          description: 'File System application server cluster type. For example: FCI.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        fileSystemType:
          description: 'File system type of the file system. For example: NTFS.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        guid:
          deprecated: true
          description: Asset GUID of the file system.
          type: string
        hostName:
          description: Host name of the file system .
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostOS:
          description: Operation system name of the file system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastBackup:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionType:
          deprecated: true
          description: 'Protection type for file system. For example: DDBFS.'
          type: string
      type: object
    AssetKubernetes:
      description: The Kubernetes details for an asset.
      properties:
        externalCreatedAt:
          description: Date and time when resource is created (UTC).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceId:
          description: PowerProtect Data Manager inventory source ID (inventorySourceId).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceName:
          description: The Kubernetes cluster name this asset belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastBackup:
          description: The date and time of last copy for this Kubernetes asset. If no backup, this field is null.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        namespace:
          description: Kubernetes resource namespace.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        persistentVolumeClaim:
          $ref: '#/components/schemas/AssetKubernetesPersistentVolumeClaim'
        size:
          description: 'For namespace: Total capacity of all namespace member PVCs in bytes (asset size).

            For persistent volume claims (PVC): PVC capacity.'
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        subType:
          description: The subtype for this Kubernetes resource (K8S_NAMESPACE or K8S_PERSISTENT_VOLUME_CLAIM).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        uid:
          description: ID of Kubernetes resource.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetKubernetesPersistentVolumeClaim:
      description: Persistent volume claim (PVC) properties of the Kubernetes asset (for PVC only).
      properties:
        accessModes:
          description: Access mode of the mounted volume (ReadWriteOnce, ReadOnlyMany, or ReadWriteMany).
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        excluded:
          description: Excluded from its parent namespace
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          description: PVC phase/status (Available, Bound, Released, or Failed).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageClassName:
          description: Volume storage class name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        volumeMode:
          description: 'Volume mode: block (raw block device) or filesystem.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        volumeName:
          description: Persistent volume name for the PVC.
          type: string
      type: object
    AssetMetric:
      description: Metrics for the asset.
      properties:
        inComplianceAssetCount:
          description: The number of assets that are in compliance.
          format: int64
          type: integer
        outOfComplianceAssetCount:
          description: The number of assets that are out of compliance.
          format: int64
          type: integer
        type:
          description: The type of asset.
          enum:
          - VMAX_STORAGE_GROUP
          - POWERSTORE_BLOCK
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - SAP_HANA_DATABASE
          - MICROSOFT_EXCHANGE_DATABASE
          - NAS_SHARE
          type: string
      type: object
    AssetNas:
      properties:
        fileStubExists:
          description: Indicative if the NAS share has cloud tiered data
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        fileSystemName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        fileSystemPath:
          description: The local file system path of the nas share.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceId:
          description: The id of the inventory source this NAS asset belongs to
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceName:
          description: The name of the inventory source this NAS asset belongs to
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        nasServer:
          $ref: '#/components/schemas/AssetNasNasServer'
        protocol:
          enum:
          - NFS
          - CIFS
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protocolVersion:
          description: The protocol version of NAS share, e.g. "v1", "v2", "v3". Defaults to an empty string.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetNasNasServer:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/AssetNasNasServerAddresses'
          type: array
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetNasNasServerAddresses:
      properties:
        type:
          enum:
          - IPV4
          - IPV6
          - FQDN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        value:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetNetworksBatchRequest:
      description: Array of asset network assignment / unassignment request.
      properties:
        body:
          $ref: '#/components/schemas/AssetNetworksBatchRequestBody'
        id:
          description: Request id.
          type: string
      type: object
    AssetNetworksBatchRequestBody:
      description: Single request content.
      properties:
        id:
          description: Asset id.
          type: string
        networkLabel:
          description: Asset network to assign or unassign.
          type: string
      type: object
    AssetNetworksBatchRequests:
      description: Asset networks batch request body.
      properties:
        requests:
          items:
            $ref: '#/components/schemas/AssetNetworksBatchRequest'
          type: array
      type: object
    AssetOperatingSystem:
      description: The operating system information of assets.
      properties:
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        version:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetPreferredHostRef:
      description: The preferred Host information of assets in clustered ENV.
      properties:
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetProtectionCapacity:
      properties:
        size:
          description: The used size in bytes for this asset. It is the maximum size of all copies.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        time:
          description: The time when the copy with maximum size was made.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetProtectionMetrics:
      description: 'Response from asset protection metrics API : /api/v2/asset-protection-metrics'
      properties:
        contentSummary:
          description: Asset protection metrics aggregated across all of the asset types.
          properties:
            maximums:
              $ref: '#/components/schemas/AssetProtectionMetricsCollection'
            totals:
              $ref: '#/components/schemas/AssetProtectionMetricsCollection'
          type: object
        contents:
          description: Asset protection metrics collection for each asset type. The "bucketName" is the asset type, such as "FILE_SYSTEM", "NAS_SHARE", "MICROSOFT_SQL_DATABASE" or "VMWARE_VIRTUAL_MACHINE".
          items:
            $ref: '#/components/schemas/AssetProtectionMetricsCollection'
          type: array
    AssetProtectionMetricsCollection:
      description: 'The asset protection metrics count and size statistics as well as their relative percentages for a particular metrics collection. Each collection is broken down into the four groups: "protected", "unprotected", "excluded" and "total". The "protected" group contains the statistics for those assets whose "protectionStatus" property is "PROTECTED". The "unprotected" group contains the statistics for those assets whose "protectionStatus" property is "UNPROTECTED". The "excluded" group contains the statistics for those assets whose "protectionStatus" property is "EXCLUDED". The "total" group contains the sum of the count and size statistics of the other three groups, but does not include any percentage values. When used with the "totals" collection, this contains the sum of the associated metrics across all the asset types listed under "contents". The "bucketName" is always "TOTALS". When used with the "maximums" collection, this contains the maximum values of the associated metrics across all the asset types listed under "contents". The "bucketName" is always "MAXIMUMS" and the percentage values are not included in any of its groups.'
      properties:
        bucketName:
          description: Name of asset protection metrics collection.
          type: string
        excluded:
          $ref: '#/components/schemas/AssetProtectionMetricsGroup'
        protected:
          $ref: '#/components/schemas/AssetProtectionMetricsGroup'
        total:
          $ref: '#/components/schemas/AssetProtectionMetricsGroup'
        unprotected:
          $ref: '#/components/schemas/AssetProtectionMetricsGroup'
    AssetProtectionMetricsGroup:
      description: The asset protection metrics count and size statistics as well as their relative percentages for a particular metrics group.
      properties:
        count:
          description: Count of assets in this metrics group.
          format: int32
          type: integer
        countPercentage:
          description: Percentage of counts of assets in this metrics group.
          format: double
          type: number
        size:
          description: Size in bytes (or capacity) of assets in this metrics group.
          format: int64
          type: integer
        sizePercentage:
          description: Percentage of size in bytes (or capacity) of assets in this metrics group.
          format: double
          type: number
    AssetResourceGroup:
      properties:
        id:
          description: The ID of the resource group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        rule:
          $ref: '#/components/schemas/AssetResourceGroupRule'
      type: object
    AssetResourceGroupRule:
      description: The rule that assigned the asset to this resource group.
      properties:
        filter:
          $ref: '#/components/schemas/AssetResourceGroupRuleFilter'
        id:
          description: Rule ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Rule name.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - id
      - name
      title: AssetResourceGroupRule
      type: object
    AssetResourceGroupRuleFilter:
      description: The filter to dynamically assign assets to the resource group.
      properties:
        id:
          description: ID of the filter.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the filter.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        templateName:
          description: If the filter is derived from a template, the template name.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      title: AssetResourceGroupRuleFilter
      type: object
    AssetStorage:
      properties:
        familyId:
          type: string
      title: AssetStorage
      type: object
    AssetSubtypeEnum:
      description: 'The subtype of an asset.

        Asset type and (subtype) mapping:

        - VMAX_STORAGE_GROUP (VMAXSTORAGEGROUP)

        - POWERSTORE_BLOCK (POWERSTORE_VOLUMEGROUP, POWERSTORE_VOLUME)

        - MICROSOFT_SQL_DATABASE (MSSQL)

        - ORACLE_DATABASE (ORACLE_CDB, ORACLE_NON_CDB, ORACLE_PDB)

        - VMWARE_VIRTUAL_MACHINE (VIRTUALMACHINE)

        - FILE_SYSTEM (NTFS, ReFS, CSVFS, ext3, ext4, xfs, btrfs, FS_DR, JFS, JFS2)

        - KUBERNETES (K8S_NAMESPACE, K8S_POD, K8S_PERSISTENT_VOLUME, K8S_PERSISTENT_VOLUME_CLAIM)

        - SAP_HANA_DATABASE (SAPHANA_SYSTEM, SAPHANA_TENANT)

        - MICROSOFT_EXCHANGE_DATABASE (EXCHANGE_MAILBOX, EXCHANGE_PUBLIC_FOLDER)

        - NAS_SHARE (UNITY_NFS, UNITY_CIFS, POWERSTORE_NFS, POWERSTORE_CIFS, POWERSCALE_NFS, POWERSCALE_CIFS, NFS_GENERIC, CIFS_GENERIC)'
      enum:
      - VMAXSTORAGEGROUP
      - VMAXSTORAGEVOLUME
      - POWERSTORE_VOLUMEGROUP
      - POWERSTORE_VOLUME
      - MSSQL
      - ORACLE_CDB
      - ORACLE_NON_CDB
      - ORACLE_PDB
      - VIRTUALMACHINE
      - DR
      - NTFS
      - ReFS
      - CSVFS
      - ext3
      - ext4
      - xfs
      - btrfs
      - FS_DR
      - JFS
      - JFS2
      - K8S_NAMESPACE
      - K8S_POD
      - K8S_PERSISTENT_VOLUME
      - K8S_PERSISTENT_VOLUME_CLAIM
      - SAPHANA_SYSTEM
      - SAPHANA_TENANT
      - EXCHANGE_MAILBOX
      - EXCHANGE_PUBLIC_FOLDER
      - UNITY_NFS
      - UNITY_CIFS
      - POWERSTORE_NFS
      - POWERSTORE_CIFS
      - POWERSCALE_NFS
      - POWERSCALE_CIFS
      - NFS_GENERIC
      - CIFS_GENERIC
      title: AssetSubtypeEnum
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    AssetVm:
      properties:
        cluster:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        clusterName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataMoverType:
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        datacenter:
          description: Datacenter name that the virtual machine belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        datastore:
          description: Datastore that the virtual machine belongs to.
          items:
            $ref: '#/components/schemas/AssetVmDatastore'
          type: array
        disableCbt:
          description: Enable or disable the CBT utilization for VM backup operation.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        disableQuiescing:
          description: Indicate whether to turn off the quiescing snapshot for VM backups.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        disks:
          description: Partitions of the virtual machine.
          items:
            $ref: '#/components/schemas/AssetVmDisks'
          type: array
        dnsName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        esxName:
          description: ESXi server name that the virtual machine belongs to.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        externalId:
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        folder:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        guestOS:
          description: Operation system name of the virtual machine.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostMoref:
          description: Hostmoref of the virtual machine.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostName:
          description: Hostname of the virtual machine.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventoryPath:
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        inventorySourceId:
          description: Inventory source ID that the virtual machine belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceName:
          description: Inventory source name that the virtual machine belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        powerState:
          enum:
          - POWERED_ON
          - POWERED_OFF
          - SUSPENDED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        primaryIpAddress:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectedApplication:
          enum:
          - MSSQL
          - ORACLE
          - NONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        resourcePool:
          description: Resource pool name that the virtual machine belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        vApp:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        vcenterName:
          description: vCenter name that the virtual machine belongs to.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        vmBiosUuid:
          description: BIOS ID of the virtual machine.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        vmMoref:
          description: VMmoref of the virtual machine.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetVmDatastore:
      properties:
        datastoreMoref:
          description: the data store reference that the virtual machine belongs to
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        datastoreName:
          description: Name of the datastore that the  virtual machine belong to
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    AssetVmDisks:
      properties:
        datastoreMoref:
          description: The moref of the data store on which the disk's VMDK file is stored.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        eagerlyScrub:
          description: Indicates that all the bytes of the disk were set to zero when provisioned.
          type: boolean
        excluded:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        key:
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        label:
          description: Label name of the virtual disk
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: virtual disk name of the virtual machine
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        sizeInBytes:
          description: The total size in bytes of the virtual disk of the virtual machine
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        thinProvisioned:
          description: Indicates if a disk is thin provisioned
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        usedBytes:
          description: Indicates the number of bytes actually in use on the disk by the OS of a VM on a thin-provisioned disk. On a thick provisioned disk this will be the maximum size of the disk.
          type: number
      type: object
    AssetVmaxStorageGroup:
      description: The VMAX storage group information of an asset.
      properties:
        configuration:
          $ref: '#/components/schemas/AssetVmaxStorageGroupConfiguration'
        coordinatingHostId:
          description: The ID of the host to which the user chooses to push the configuration.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        coordinatingHostname:
          description: The name of the host to which the user chooses to push the configuration.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    AssetVmaxStorageGroupConfiguration:
      description: The VMAX storage group configuration information for an asset.
      properties:
        backupDevice:
          $ref: '#/components/schemas/AssetVmaxStorageGroupConfigurationItem'
        backupStorage:
          $ref: '#/components/schemas/AssetVmaxStorageGroupConfigurationItem'
        restoreDevice:
          $ref: '#/components/schemas/AssetVmaxStorageGroupConfigurationItem'
        restoreStorage:
          $ref: '#/components/schemas/AssetVmaxStorageGroupConfigurationItem'
      type: object
    AssetVmaxStorageGroupConfigurationItem:
      description: The VMAX storage group configuration item for VMAX asset.
      properties:
        guid:
          description: The GUID of VMAX group configuration item.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        name:
          description: The name of VMAX group configuration item.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        uri:
          description: The URI of VMAX group configuration item.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    Assets:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Asset'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    AssetsBatchDeletionRequest:
      description: asset deletion batch request.
      properties:
        body:
          $ref: '#/components/schemas/AssetsBatchDeletionRequestBody'
        id:
          description: Request id.
          type: string
      type: object
    AssetsBatchDeletionRequestBody:
      description: Single request content.
      properties:
        id:
          description: Asset id.
          type: string
        options:
          properties:
            level:
              description: 'This attribute indicates asset deletion options.

                Valid values are the following:

                - DELETE_ASSET_AND_COPIES

                - DELETE_ASSET_WITHOUT_COPIES

                - MARK_ASSET_AS_DELETED_AND_RETAIN_COPIES'
              enum:
              - DELETE_ASSET_AND_COPIES
              - DELETE_ASSET_WITHOUT_COPIES
              - MARK_ASSET_AS_DELETED_AND_RETAIN_COPIES
              type: string
          required:
          - level
          type: object
      type: object
    AssetsBatchDeletionRequests:
      description: Asset networks batch request body.
      properties:
        requests:
          items:
            $ref: '#/components/schemas/AssetsBatchDeletionRequest'
          type: array
      type: object
    AsyncTaskResponse:
      description: Asynchronous task response.
      properties:
        taskId:
          type: string
      type: object
    AsynchronousResponse:
      description: PowerProtect Data Manager identifier of the task resource tracking the asynchronous operation.
      properties:
        taskId:
          type: string
      title: AsynchronousResponse
      type: object
    AuditLog:
      description: Audit log tracks configuration modification activity from users.
      properties:
        after:
          description: New field values represented as a string. Varies based on the audit type.
          type: string
        auditType:
          description: The predefined set of audit types.
          enum:
          - APP_HOST_CONFIGURATION
          - COMPLIANCE
          - PROTECTION
          - PROTECTION_COPY
          - PROTECTION_INFRASTRUCTURE
          - PROTECTION_POLICY
          - PROTECTION_SOURCE
          - PUSH_UPDATE
          - RESTORE_PLAN
          - SECURITY
          - SERVER_DR
          - STORAGE
          - SYSTEM
          type: string
        before:
          description: Old field values that are represented as a string. Varies based on the audit type.
          type: string
        changeDescription:
          description: The description of the change. This parameter is a system generated field to get the context of the change.
          type: string
        changedBy:
          $ref: '#/components/schemas/AuditLogChangedBy'
        changedObject:
          $ref: '#/components/schemas/AuditLogChangedObject'
        changedTime:
          description: The time when the configurations are modified or deleted.
          format: date-time
          type: string
        createdAt:
          description: The time when the audit log was created. Follows ISO 8601.
          format: date-time
          type: string
        externalId:
          description: The ID of the audit log in the external system, The value is null if the audit log originated in PowerProtect Data Manager.
          type: string
        id:
          description: The ID of the audit log entry.
          type: string
        messageArgs:
          description: 'The message arguments are the values for any substitution variables that are defined as part of the message. Review the message for more information: Message Resources, APIs, and Audit Message.'
          items:
            type: string
          type: array
        messageID:
          description: The message identifier MessageID is an alphanumeric string value that is a maximum of 8 characters long.
          type: string
        source:
          $ref: '#/components/schemas/AuditLogSource'
        userNote:
          $ref: '#/components/schemas/UserNote'
      type: object
    AuditLogChangedBy:
      description: The user who made the configuration modification.
      properties:
        id:
          description: The user ID.
          type: string
        username:
          description: The user name.
          type: string
      type: object
    AuditLogChangedObject:
      description: The resource changed by the user.
      properties:
        id:
          description: The ID of the changed object.
          type: string
        resourceName:
          description: The name of the changed object (resource value). Possible values are protection policy name, compliance name, asset source name, user name, and so on (security related resource names).
          type: string
        resourceType:
          description: The resource name of the object (resource path). This path value should be a full resource name corresponding to the audit type. It can be one of the audit type path URL values.
          type: string
      type: object
    AuditLogSource:
      description: The source system where the audit log was originated.
      properties:
        description:
          description: The origin system description
          type: string
        id:
          description: The origin system id
          type: string
        type:
          description: Indicates the source system type
          enum:
          - DATA_MANAGER
          - OPERATING_ENVIRONMENT
          - PROTECTION_STORAGE
          type: string
      required:
      - type
      type: object
    AuditLogs:
      description: Get Audit Logs.
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuditLog'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    BackupTypeEnum:
      description: The type of connection
      enum:
      - SYNTHETIC_FULL
      - FULL
      - DIFFERENTIAL
      - LOG
      - INCREMENTAL
      - CUMULATIVE
      - GEN0
      - AUTO_FULL
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    BatchCreateResponse:
      description: Batch response for create operation
      properties:
        body:
          $ref: '#/components/schemas/BatchCreateResponseBody'
        id:
          type: string
        status:
          type: string
      title: BatchCreateResponse
      type: object
    BatchCreateResponseBody:
      properties:
        code:
          description: The error code number.
          format: int32
          type: integer
        copyDeletionActivityId:
          description: Copy deletion activity ID.
          type: string
        extendedInfo:
          description: Additional information about the error.
          type: string
        id:
          description: Id of the successfully created resource
          type: string
        path:
          description: The path that produced the error.
          type: string
        reason:
          description: The reason that the error occurred.
          type: string
        remediation:
          description: A recommended solution to resolve the error.
          type: string
        timestamp:
          description: When the error occurred.
          format: int64
          type: integer
      type: object
    BatchCreateResponses:
      description: Batch responses for create operation
      properties:
        responses:
          items:
            $ref: '#/components/schemas/BatchCreateResponse'
          type: array
      title: BatchCreateResponses
      type: object
    BatchResponse:
      properties:
        body:
          $ref: '#/components/schemas/ErrorMessage'
        id:
          type: string
        status:
          type: string
      type: object
    BatchResponses:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/BatchResponse'
          type: array
      type: object
    BatchUpdateAssetRequest:
      properties:
        body:
          $ref: '#/components/schemas/BatchUpdateAssetRequestBody'
        id:
          type: string
      type: object
    BatchUpdateAssetRequestBody:
      properties:
        backupDetails:
          items:
            $ref: '#/components/schemas/BatchUpdateAssetRequestBodyBackupDetails'
          type: array
        credentials:
          items:
            $ref: '#/components/schemas/AssetCredentials'
          type: array
        details:
          properties:
            vm:
              $ref: '#/components/schemas/BatchUpdateAssetRequestBodyDetailsVm'
          type: object
        extendedData:
          $ref: '#/components/schemas/AssetExtendedData'
        id:
          type: string
        protectionPolicy:
          properties:
            backupRank:
              description: The priority order (with 1 being highest) in which to attempt to create a backup for an ORACLE_DATA_GUARD protection group using the BACKUP_BY_RANK backup strategy.
              format: int32
              type: integer
          type: object
        protectionProtocol:
          $ref: '#/components/schemas/ProtectionProtocolEnum'
      type: object
    BatchUpdateAssetRequestBodyBackupDetails:
      properties:
        backupType:
          $ref: '#/components/schemas/BackupTypeEnum'
        parallelism:
          type: integer
      type: object
    BatchUpdateAssetRequestBodyDetailsVm:
      properties:
        dataMoverType:
          description: Set dataMover Type.
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
        disableCbt:
          description: Enable or disable the CBT utilization for VM backup operation.
          type: boolean
        disableQuiescing:
          description: Indicate whether to turn off the quiescing snapshot for VM backups.
          type: boolean
      type: object
    BatchUpdateAssetRequests:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/BatchUpdateAssetRequest'
          type: array
      type: object
    BrowseFileEntry:
      description: Object specifying attributes of a file including name, type, and size.
      properties:
        name:
          description: Name of the file or directory.
          type: string
        size:
          description: Size of the file.
          format: int64
          type: integer
        type:
          description: 'The type of file: directory, symlink, etc.'
          type: string
      type: object
    CDRAComponentStartup:
      description: CDRA Component Startup.
      properties:
        alreadyManaged:
          type: boolean
        existingJobID:
          type: string
        operation:
          type: string
      type: object
    Capacities:
      description: Storage system capacities response
      properties:
        capacities:
          items:
            $ref: '#/components/schemas/StorageSystemCapacity'
          type: array
      title: Capacities
      type: object
    Capacity:
      properties:
        capacityStatus:
          $ref: '#/components/schemas/CapacityStatus'
        compressionFactor:
          description: Compression factor of the PowerProtect DD system by tier type.
          format: double
          type: number
        licensedUtilization:
          description: Phycisal licensed capacity utilization of the PowerProtect DD system by tier type.
          format: double
          type: number
        percentUsed:
          description: Percentage of capacity used (capacity utilization) of the PowerProtect DD system by tier type.
          format: double
          type: number
        reductionPercentage:
          description: Reduction percentage of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLicensedSize:
          description: Total physical licensed capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLogicalSize:
          description: Total logical capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLogicalUsed:
          description: Total logical capacity used in the PowerProtect DD system by tier type.
          format: double
          type: number
        totalPhysicalSize:
          description: Total physical capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalPhysicalUsed:
          description: Total physical capacity used in the PowerProtect DD system by tier type.
          format: double
          type: number
        type:
          $ref: '#/components/schemas/TierType'
      type: object
    CapacityStatus:
      description: Capacity status of the PowerProtect DD system by tier type.
      enum:
      - GOOD
      - FAIR
      - POOR
      title: CapacityStatus
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    CapacityStatusSummary:
      description: Capacity status summary of the PowerProtect DD system.
      properties:
        fairCount:
          description: Count for FAIR capacity status of the PowerProtect DD systems.
          format: int32
          type: integer
        goodCount:
          description: Count for GOOD capacity status of the PowerProtect DD systems.
          format: int32
          type: integer
        poorCount:
          description: Count for POOR capacity status of the PowerProtect DD systems.
          format: int32
          type: integer
        totalCount:
          description: Total count of PowerProtect DD systems with a valid capacity status.
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/TierType'
      title: CapacityStatusSummary
      type: object
    CdrCloudNetwork:
      description: Networks in the cloud.
      properties:
        securityGroups:
          items:
            $ref: '#/components/schemas/SecurityGroup'
          type: array
        subnets:
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
        virtualNetworkId:
          type: string
        virtualNetworkName:
          type: string
      type: object
    CdrCloudNetworks:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CdrCloudNetwork'
          type: array
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CdrConfiguration:
      description: Cloud DR configuration key and value.
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    CdrProxyConfigurationCommon:
      description: The properties that are shared among all versions of the Cloud DR proxy configuration model.
      properties:
        enable:
          type: boolean
        enableAuthentication:
          type: boolean
        host:
          type: string
        port:
          type: integer
        username:
          type: string
      type: object
    CdrProxyConfigurationInput:
      allOf:
      - $ref: '#/components/schemas/CdrProxyConfigurationCommon'
      - $ref: '#/components/schemas/CdrProxyConfigurationInputSpecific'
      description: The properties that are allowed when creating or updating a Cloud DR proxy configuration.
    CdrProxyConfigurationInputSpecific:
      properties:
        password:
          type: string
      type: object
    CdrProxyConfigurationOutput:
      allOf:
      - $ref: '#/components/schemas/CdrProxyConfigurationCommon'
      description: The properties that are included when fetching a list of Cloud DR proxy configurations.
    CdrProxyConfigurationOutputDetailed:
      allOf:
      - $ref: '#/components/schemas/CdrProxyConfigurationOutput'
      - type: object
      description: The properties that are included when fetching a single Cloud DR proxy configuration.
    CdrSession:
      description: Instance (VM) in the cloud.
      properties:
        assetName:
          type: string
        copyTime:
          format: date-time
          type: string
        drType:
          type: string
        id:
          type: string
        instanceId:
          type: string
        region:
          type: string
        status:
          type: string
        targetPlatform:
          enum:
          - EC2
          - VC
          - CLOUD
          type: string
      type: object
    CdrSessions:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CdrSession'
          type: array
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CdrVcConfiguration:
      description: vCenter configuration in Cloud DR.
      properties:
        dataStores:
          items:
            $ref: '#/components/schemas/CdrVcInventoryDataStores'
          type: array
        failoverTarget:
          type: boolean
        id:
          description: Id of the Vcenter Server.
          type: string
        networks:
          items:
            $ref: '#/components/schemas/CdrVcConfigurationNetworks'
          type: array
      type: object
    CdrVcConfigurationDataStores:
      properties:
        moref:
          $ref: '#/components/schemas/CdrVcConfigurationMoref'
        name:
          type: string
      type: object
    CdrVcConfigurationIpRanges:
      properties:
        baseIp:
          type: string
        range:
          type: integer
      type: object
    CdrVcConfigurationMoref:
      properties:
        morefId:
          type: string
        type:
          type: string
      type: object
    CdrVcConfigurationNetworks:
      properties:
        gateway:
          type: string
        ipRanges:
          items:
            $ref: '#/components/schemas/CdrVcConfigurationIpRanges'
          type: array
        moref:
          $ref: '#/components/schemas/CdrVcConfigurationMoref'
        name:
          type: string
        netMask:
          type: string
        primaryDns:
          type: string
        secondaryDns:
          type: string
      type: object
    CdrVcInventory:
      description: Cloud DR vCenter inventory.
      properties:
        dataCenters:
          items:
            $ref: '#/components/schemas/CdrVcInventoryDataCenters'
          type: array
        id:
          description: ID of Cloud DR vCenter inventory.
          type: string
      type: object
    CdrVcInventoryDataCenters:
      properties:
        dataStores:
          items:
            $ref: '#/components/schemas/CdrVcInventoryDataStores'
          type: array
        moref:
          $ref: '#/components/schemas/CdrVcConfigurationMoref'
        name:
          type: string
        networks:
          items:
            $ref: '#/components/schemas/CdrVcConfigurationDataStores'
          type: array
      type: object
    CdrVcInventoryDataStores:
      properties:
        availableNetworks:
          items:
            $ref: '#/components/schemas/CdrVcConfigurationMoref'
          type: array
        moref:
          $ref: '#/components/schemas/CdrVcConfigurationMoref'
        name:
          type: string
      type: object
    CdrVcRemoteServer:
      description: vCenter configuration in Cloud DR.
      properties:
        cdrVcConfiguration:
          $ref: '#/components/schemas/CdrVcConfiguration'
        id:
          description: ID of the Vcenter.
          type: string
        location:
          enum:
          - ON_PREM
          - ON_CLOUD
          type: string
        model:
          type: string
        partial:
          type: boolean
        serialId:
          type: string
        serverParams:
          $ref: '#/components/schemas/CdrVcRemoteServerServerParams'
        type:
          type: string
        version:
          type: string
      type: object
    CdrVcRemoteServerServerParams:
      properties:
        address:
          type: string
        credentials:
          $ref: '#/components/schemas/CdrVcRemoteServerServerParamsCredentials'
        ipv6Configured:
          type: boolean
        metadata:
          type: string
        mtreeId:
          description: ID of mTree.
          type: string
        port:
          type: integer
      type: object
    CdrVcRemoteServerServerParamsCredentials:
      properties:
        certificate:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    CdrVcRemoteServers:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CdrVcRemoteServer'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CdrVersion:
      description: Cloud DR version.
      properties:
        version:
          type: string
      type: object
    CdrsDeployment:
      description: enter description here
      properties:
        adminPassword:
          type: string
        cidrBlockIp:
          type: string
        cloudTargetId:
          type: string
        deleteExisting:
          type: boolean
        email:
          type: string
        monitorPassword:
          type: string
        privateDeployment:
          default: false
          type: boolean
        subnetId:
          type: string
        vpcId:
          type: string
      required:
      - adminPassword
      - cloudTargetId
      - email
      type: object
    CdrsDeploymentActivity:
      description: Cdrs Deployment Activity.
      properties:
        activityId:
          type: string
      type: object
    CdrsExtendedProperties:
      description: CDRS extended properties.
      properties:
        cdrsConnectivityState:
          $ref: '#/components/schemas/CdrsExtendedPropertiesCdrsConnectivityState'
        cidr:
          type: string
        cloudTargetId:
          type: string
        connectionIp:
          type: string
        deployState:
          description: 'Represents the state of the deployment. Values include: IN_PROGRESS, COMPLETED, UNKNOWN'
          enum:
          - IN_PROGRESS
          - COMPLETED
          - UNKNOWN
          type: string
        deployStatus:
          description: 'Represents the status of the deployment. Values include: OK, FAILED, UNKNOWN'
          enum:
          - OK
          - FAILED
          - UNKNOWN
          type: string
        deploymentCompleted:
          type: boolean
        email:
          type: string
        privateNetwork:
          type: boolean
        publicDns:
          type: string
        region:
          type: string
      type: object
    CdrsExtendedPropertiesCdrsConnectivityState:
      properties:
        CdrsConnectivityStateEnum:
          items:
            type: string
          type: array
      type: object
    Certificate:
      description: Certificate.
      properties:
        certificateChain:
          description: The certificate chain.
          type: string
        fingerprint:
          description: Fingerprint of the certificate.
          type: string
        host:
          description: Certificate host or IP address.
          type: string
        id:
          description: Certificate ID.
          type: string
        issuerName:
          description: Issuer name of the certificate.
          type: string
        notValidAfter:
          description: Not valid after timestamp (ISO 8601 format).
          type: string
        notValidBefore:
          description: Not valid before timestamp (ISO 8601 format).
          type: string
        port:
          description: Host/IP port.
          type: string
        state:
          description: Certificate state.
          enum:
          - ACCEPTED
          - REJECTED
          - UNKNOWN
          - EXPIRED
          - MISMATCHED
          - MALFORMED
          - PREAUTHORIZED
          type: string
        subjectName:
          description: Subject name of the certificate.
          type: string
        type:
          description: Certificate type.
          enum:
          - HOST
          - ROOT
          - INTERMEDIATE
          type: string
        verify:
          description: To verify that the server's host certificate is signed by the root certificate of the certificate chain, set this value to true. The default value is false.
          type: boolean
      required:
      - host
      - port
      type: object
    CertificateDetailsMap:
      description: This page includes the certificate details.
      properties:
        issuerDN:
          description: Issuer distinguished name.
          type: string
        md5:
          description: Value of md5.
          type: string
        notAfter:
          description: Valid time of certificate.
          type: string
        notBefore:
          description: Start time of certificate.
          type: string
        publicKey:
          description: Public key type.
          type: string
        publicKeyExponent:
          description: Exponent of public key.
          type: string
        publicKeyModulus:
          description: The modulus of public key.
          type: string
        publicKeySize:
          description: Size of public key.
          type: string
        serialNumber:
          description: The serial number of certificate.
          type: string
        sha1:
          description: Value of sha1.
          type: string
        sha256:
          description: Value of sha256.
          type: string
        signatureAlgorithmName:
          description: The algorithm used in signature.
          type: string
        signatureAlgorithmOID:
          description: ID of algorithm used in signature.
          type: string
        subjectDN:
          description: Subject distinguished name.
          type: string
        version:
          description: Version of certificate.
          type: string
      type: object
    CertificateReplacement:
      description: Certificate Replacement.
      properties:
        certificateChain:
          description: The content of certificate chain, where each line is delimited by '\n' in a single line string.
          type: string
        password:
          description: Password required for the encrypted private key.
          type: string
        privateKey:
          description: The content of private key where each line is delimited by '\n' in a single line string.
          type: string
      required:
      - certificateChain
      - privateKey
      type: object
    CertificateReplacementResponse:
      description: Certificates Replacement Response
      properties:
        certificateChain:
          description: The content of certificate chain, where each line is delimited by '\n' in a single line string.
          type: string
        id:
          description: 'Certificate Replacement ID. '
          type: string
        privateKey:
          description: The content of private key where each line is delimited by '\n' in a single line string.
          type: string
      required:
      - certificateChain
      - id
      - privateKey
      type: object
    CertificateRoot:
      properties:
        globalCA:
          description: The system customer root certificate. This property only shows when customer certificates are installed by certificate replacement.
          type: string
        id:
          description: The certificate root ID.
          type: string
        rootCA:
          description: The system root certificate.
          type: string
        virtualHost:
          description: The custom virtual host of the system, which is the system hostname.
          type: string
      required:
      - id
      - rootCA
      - virtualHost
      title: CertificateRoot
      type: object
    CertificateSigningRequest:
      description: Certificate Signing Request.
      properties:
        badgeId:
          description: The badge ID is used to verify remote identity for the vRapid daemon in vProxy. The badge ID is added to the signed certificate extension field. If not present, remote identity verification continues to use the existing IP address/Fully Qualified Domain Name (FQDN) based allow list.
          type: string
        csr:
          description: Certificate signing request (CSR) content.
          type: string
        fqdn:
          description: The Fully Qualified Domain Name (FQDN) used in the signed certificate Subject Alternative Name (SAN) field, listed as DNS. One or more FQDNs can be provided, delimited by a comma. The POST payload request must contain either the "fqdn" or "ips" field.
          type: string
        ips:
          description: The IP address (either IPv4 or IPv6) used in the signed certificate Subject Alternative Name (SAN) field, listed as an IP address. One or more IP addresses can be provided, delimited by a comma. The POST payload request must contain either the "fqdn" or "ips" field.
          type: string
      required:
      - csr
      type: object
    CertificateSigningResponse:
      description: Signed Certificate.
      properties:
        cert:
          description: Absolute path to the signed certificate file.
          type: string
        globalCA:
          description: The root CA certificate used to sign the customer certificate. This property is only returned if customer certificates have already been installed.
          type: string
        id:
          description: ID.
          type: string
        rootCA:
          description: Absolute path to the root CA certificate file.
          type: string
        virtualHost:
          description: PowerProtect Data Manager hostname for custom virtual host. This property is only returned if customer certificates have already been installed.
          type: string
      required:
      - cert
      - rootCA
      type: object
    Certificates:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Certificate'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      title: Certificates
      type: object
    CertificatesList:
      description: List of certificates.
      items:
        $ref: '#/components/schemas/Certificate'
      title: CertificatesList
      type: array
    ChangePasswordRequest:
      description: Updated credentials.
      properties:
        newPassword:
          description: The new password to replace current one.
          type: string
        password:
          description: The password to login.
          type: string
        username:
          description: The username to login.
          type: string
      required:
      - newPassword
      - username
      type: object
    Client:
      description: Client model of the NFS export client.
      properties:
        address:
          description: Address of the client registered to a specific NFS export.
          type: string
        options:
          description: Configuration options of the client registered to a specific NFS export.
          type: string
      title: Client
      type: object
    CloudAccount:
      properties:
        connectionStatus:
          type: string
        connectionStatusMessage:
          type: string
        id:
          type: string
        providerAccountId:
          type: string
        providerName:
          type: string
        providerParameters:
          items:
            $ref: '#/components/schemas/ProviderParameter'
          type: array
        secretKey:
          type: string
        userKey:
          type: string
        userName:
          type: string
      type: object
    CloudAccounts:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CloudAccount'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CloudCopy:
      description: Provide cloud copy REST model (CloudCopy) to update, recall, and retier a copy from the cloud.
      properties:
        action:
          enum:
          - RECALL
          - RETIER
          type: string
        retierRetentionTime:
          type: string
      type: object
    CloudRecalledCopy:
      properties:
        protectionCopySetId:
          description: ID of the asset on the cloud.
          type: string
        retierRetentionTime:
          description: The amount of time the recalled asset stays on the PowerProtect DD system before being retiered back to the cloud.
          format: date-time
          type: string
      required:
      - protectionCopySetId
      type: object
    CloudResult:
      description: The taskId represents the ID for the given task within activities.
      properties:
        taskId:
          description: The taskId represents the ID for the given task within activities.
          type: string
      required:
      - taskId
      type: object
    CloudTarget:
      description: Cloud DR target.
      properties:
        copiesStorageContainer:
          $ref: '#/components/schemas/StorageContainer'
        encryptionMethod:
          type: string
        id:
          description: ID of Cloud DR target.
          type: string
        name:
          type: string
        state:
          enum:
          - ACTIVE
          - PENDING_REMOVAL
          type: string
      type: object
    CloudTargets:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CloudTarget'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CloudTieredCopy:
      properties:
        assetId:
          description: The ID of the data source.
          type: string
        cloudTierStageId:
          type: string
        protectionCopySetId:
          type: string
        protectionLifeCycleId:
          deprecated: true
          description: protectionPolicyId should be used instead.
          type: string
        protectionPolicyId:
          type: string
        workflowTaskId:
          type: string
      type: object
    CloudUnits:
      description: Cloud Unit List Response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/ResourceCloudUnit'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ClusterInfo:
      description: Information about the cluster.
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        ipAddress:
          type: string
        nodeSelectionStrategy:
          enum:
          - PREFERRED_NODE
          - STANDALONE
          - ANY_NODE
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/ClusterInfoNode'
          type: array
      type: object
    ClusterInfoNode:
      description: Information about the node in the cluster.
      properties:
        externalId:
          type: string
        fqdn:
          type: string
        hostId:
          type: string
        hostname:
          type: string
        ipAddress:
          type: string
        localApplicationSystemRef:
          properties:
            id:
              type: string
            name:
              type: string
            naturalIds:
              items:
                type: string
              type: array
          type: object
      title: ''
      type: object
    CommonDnsConfig:
      properties:
        DhcpEnabled:
          type: boolean
        DomainName:
          type: string
        HostName:
          type: string
        SearchDomains:
          items:
            type: string
          type: array
        Servers:
          items:
            type: string
          type: array
      type: object
    CommonIpConfig:
      properties:
        Address:
          type: string
        IpCidr:
          type: string
        NetMask:
          type: string
        PrefixLength:
          format: int32
          type: integer
        SubnetCidr:
          type: string
        Version:
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
      type: object
    CommonSetting:
      description: The common setting model
      properties:
        id:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/CommonSettingProperty'
          type: array
      required:
      - properties
      type: object
    CommonSettingProperty:
      description: Common setting property
      properties:
        maxValue:
          type: string
        minValue:
          type: string
        name:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    CommonSettings:
      description: Get Common Settings Resource.
      properties:
        content:
          items:
            $ref: '#/components/schemas/CommonSetting'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CommonVimServer:
      description: A common definition of needed parameters when taking a reference to a VIM server.
      properties:
        EncryptedUserPassword:
          type: boolean
        HostName:
          type: string
        HypervisorMode:
          enum:
          - vSphere
          - VMC
          type: string
        TcpPort:
          format: int64
          type: integer
        ThumbPrint:
          type: string
        UserName:
          type: string
        UserPassword:
          type: string
      type: object
    ComplianceDetail:
      description: '**Compliance Detail** is the summary for compliance result for one asset on one SLA on one stage.

        The compliance detail ID is the compliance result ID.'
      properties:
        assetId:
          type: string
          x-ppdm-filter: true
        assetName:
          type: string
          x-ppdm-filter: true
        completionStatus:
          enum:
          - SUCCESS
          - FAILED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        completionTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createdAt:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        failedObjectiveList:
          items:
            $ref: '#/components/schemas/FailedObjective'
          type: array
        id:
          type: string
          x-ppdm-filter: true
        nextStartTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        objectiveCount:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        objectiveFailedNameList:
          items:
            enum:
            - Recovery Point
            - Compliance Window
            - Location
            - Maximum Copies
            - Minimum Copies
            - Retention Lock
            - Retention Time
            - Deletion Compliance
            type: string
          maxItems: 10
          minItems: 0
          type: array
        objectiveSuccessCount:
          format: int64
          maximum: 10
          minimum: 0
          type: integer
        objectiveSuccessNameList:
          items:
            enum:
            - Recovery Point
            - Compliance Window
            - Location
            - Maximum Copies
            - Minimum Copies
            - Retention Time
            - Retention Lock
            - Deletion Compliance
            type: string
          maxItems: 10
          minItems: 0
          type: array
        plcId:
          deprecated: true
          type: string
          x-ppdm-filter: true
        policyName:
          type: string
          x-ppdm-filter: true
        protectionPolicyId:
          type: string
          x-ppdm-filter: true
        slaId:
          type: string
        stageId:
          type: string
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - SUCCEEDED
          - FAILED
          - SKIPPED
          type: string
        windowEndTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ComplianceDetails:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ComplianceDetail'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ComplianceResult:
      properties:
        completionTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        nextStartTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          enum:
          - WAITING
          - RUNNING
          - COMPLETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - UNKNOWN
          - SUCCESS
          - PARTIALSUCCESS
          - FAILED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        verifiedObjectives:
          items:
            $ref: '#/components/schemas/VerifiedObjective'
          type: array
        windowEndTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ComplianceResults:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ComplianceResult'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ComponentErrorResponse:
      properties:
        code:
          format: int32
          type: integer
        path:
          type: string
        reason:
          type: string
        remediation:
          properties: {}
          type: object
        timestamp:
          format: int64
          type: integer
      type: object
    Condition:
      properties:
        assetAttributeName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetAttributeValue:
          deprecated: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetAttributeValues:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        operator:
          enum:
          - IN
          - NOT_IN
          - EQUALS
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - DOES_NOT_EQUAL
          - DOES_NOT_CONTAIN
          - LESS_THAN
          - GREATER_THAN
          - REGULAR_EXPRESSION
          - MATCH_REGEX
          - DOES_NOT_MATCH_REGEX
          - GREATER_THAN_OR_EQUAL_TO
          - LESS_THAN_OR_EQUAL_TO
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ConfigPropertyChangeRef:
      properties:
        Index:
          format: int32
          type: integer
        NewValue:
          type: string
        OldValue:
          type: string
        Operation:
          type: string
        Type:
          enum:
          - Datastore
          - Cluster
          - Network
          - ResourcePool
          - Host
          - Folder
          type: string
      type: object
    ConfigStatus:
      description: enter description here
      properties:
        completedStage:
          items:
            $ref: '#/components/schemas/ConfigStatusStage'
          type: array
        currentStage:
          $ref: '#/components/schemas/ConfigStatusStage'
        endTime:
          type: string
        percentageCompleted:
          format: int32
          type: integer
        startTime:
          type: string
        status:
          enum:
          - FAILED
          - SUCCESS
          - PROGRESS
          type: string
      type: object
    ConfigStatusStage:
      description: Config Status Stage.
      properties:
        description:
          type: string
        endTime:
          format: date-time
          type: string
        startTime:
          format: date-time
          type: string
        status:
          enum:
          - SUCCESS
          - PROGRESS
          - FAILED
          type: string
      type: object
    ConfigurableTransportSessions:
      description: All available transport modes that a user can configure.
      properties:
        Mode:
          enum:
          - HotaddPreferred
          - HotaddOnly
          - NbdOnly
          - NAS
          - None
          type: string
        UseSsl:
          type: boolean
        UserDefined:
          type: boolean
      type: object
    ConfigurationObject:
      description: '**SDR Policy Configuration Detail** is the summary of the current Spring application properties.'
      properties:
        adHocBackupRetentionInHours:
          description: Hours to retain backups.
          type: string
        backupFrequencyInHours:
          description: Frequency of backups in hours.
          type: string
        eventAccumulatedTimeInMinutes:
          description: Event accumulation time.
          type: string
        eventElapsedTimeInMinutes:
          description: Event aggregation time.
          type: string
        numberOfDaysBackupsAvailable:
          description: Days for backups to be available.
          type: string
        systemBackupRetentionInHours:
          description: Retention value for backups to be retained.
          type: string
        validSpringConfiguration:
          description: Valid Spring Configuration.
          type: boolean
      type: object
    ConflictItem:
      description: Contains the FLR file, backup copy natural ID, and asset details of the conflicted FLR item.
      properties:
        asset:
          $ref: '#/components/schemas/FLRAsset'
        copyId:
          type: string
        file:
          $ref: '#/components/schemas/FLRFile'
        parent:
          $ref: '#/components/schemas/FLRItem'
      title: ConflictItem
      type: object
    ConnectionInfo:
      description: 'Connection information '
      properties:
        credentialId:
          type: string
        tnsAdmin:
          type: string
        tnsName:
          type: string
        type:
          enum:
          - OS
          - VCENTER
          - APPLICATION
          - DBUSER
          - DB_WALLET
          - RMAN
          - RMAN_WALLET
          - DB
          - SAPHANA_DB_USER
          - SAPHANA_SYSTEMDB_USER
          - NAS
          type: string
      type: object
    ConnectionTypeEnum:
      description: The type of connection
      enum:
      - OS
      - VCENTER
      - DBUSER
      - DB_WALLET
      - RMAN
      - RMAN_WALLET
      - DB
      - SAPHANA_DB_USER
      - SAPHANA_SYSTEMDB_USER
      - NAS
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    Copies:
      description: List of CopyRestModel.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Copy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CopiesRetentionTimeBatchRequest:
      description: Array of retention time change request.
      properties:
        body:
          $ref: '#/components/schemas/CopiesRetentionTimeBatchRequestBody'
        id:
          description: Request id.
          type: string
      type: object
    CopiesRetentionTimeBatchRequestBody:
      description: Single request content.
      properties:
        id:
          description: Copy id.
          type: string
        retentionTime:
          description: New retention time.
          format: date-time
          type: string
      type: object
    CopiesRetentionTimeBatchRequests:
      description: Retention time change batch request body.
      properties:
        requests:
          description: Contains a list of changes to be applied to the resource.
          items:
            $ref: '#/components/schemas/CopiesRetentionTimeBatchRequest'
          type: array
      type: object
    CopiesRetentionTimeBatchResponse:
      description: The response of the retention time change update.
      properties:
        activityId:
          type: string
      type: object
    Copy:
      description: Provide copy REST model to update copy retention time. ID and retention time are required.
      properties:
        adhocBackup:
          description: Indicates if this is a manual or scheduled backup copy.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetId:
          description: ID of the asset to which this copy corresponds.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetName:
          description: Asset name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetSubtype:
          $ref: '#/components/schemas/AssetSubtypeEnum'
        backupScope:
          description: File system subtype for Bare Metal Recovery (BMR) and System State Recover (SSR).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupSource:
          description: Indicates whether the copy is backed up from either the replica site or the primary site.
          enum:
          - ORIGINAL
          - REPLICA
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupTransactionId:
          description: The parent backup transaction that this copy belongs to.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        baseCopyId:
          description: Provides the relationship to the full copy that is the base for a differential or log copy.
          type: string
        copyConsistency:
          description: The data consistency for this protection copy set.
          enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        copySubType:
          description: The backup sub level of the copy. Only applicable when copy type is FULL.
          enum:
          - SYNTHETIC_FULL
          - GEN0_FULL
          - NA
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        copyType:
          description: The backup level of this protection copy set.
          enum:
          - FULL
          - DIFFERENTIAL
          - INCREMENTAL
          - LOG
          - UNKNOWN
          - SPFILE
          - CONTROLFILE
          - ARCHIVELOG
          - INCR_0
          - INCR_1_CUMULATIVE
          - INCR_1_DIFFERENTIAL
          - CUMULATIVE_INCR
          - DIFF_INCR
          - AUXILIARY
          - INCR_DELTA
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createTime:
          description: The creation date and time of this protection copy set.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataTargetIds:
          deprecated: true
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataTargetRefs:
          items:
            properties:
              id:
                description: The id of the data target.
                type: string
              name:
                description: The name of the data target.
                type: string
            type: object
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        details:
          $ref: '#/components/schemas/CopyDetails'
        endTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        exportedCopyCount:
          description: Number of exported copy count on this copy.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        extendedData:
          $ref: '#/components/schemas/CopyExtendedData'
        externalId:
          description: 'The external ID of the copy set.


            Cloud DR description of this field:


            The Copy ID that Cloud DR generates (PowerProtect Data Manager does not generate this value).

            This field is the only connection in PowerProtect Data Manager between the new PCS that is created and the Cloud DR copy.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: ID of the copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        location:
          description: Location type of the copy.
          enum:
          - LOCAL
          - CLOUD
          - LOCAL_RECALLED
          - STORAGEARRAY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        logCount:
          description: The number of logs that are dependent on the full copy.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        metadataIndexingStatus:
          enum:
          - RUNNING
          - FAILED
          - FAILED_RETRY
          - PARTIAL_SUCCESS
          - SUCCESS
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        partialCopy:
          description: Applies to VMDM and ADM.  ADM indicates broken chain.
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        partialCopyDescription:
          description: Message that indicates why this is a partial copy.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        protectionCreated:
          description: Whether the copy represented by this copy set is created by PowerProtect Data Manager or not.  Copies that are created by PowerProtect Data Manager have this field set to true.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionGroupRef:
          $ref: '#/components/schemas/CopyProtectionGroupRef'
        protectionPolicy:
          $ref: '#/components/schemas/CopyProtectionPolicy'
        replicatedCopy:
          description: Indicates if this copy is a replicated copy.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        restoreTargetCompatibilities:
          description: 'Cloud DR supports different cloud vendors: AWS, AWS

            GovCloud, AZURE.

            Each vendor has basic requirements for a restore to work according to the state of the VM.

            Each copy of the VM should have a list containing the compatibility for each target (vendor).'
          items:
            $ref: '#/components/schemas/RestoredTargetCompatibilities'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        retentionLock:
          description: Derived from the retention locks on the child protection copies.
          enum:
          - ALL_COPIES_UNLOCKED
          - ALL_COPIES_LOCKED
          - PARTIAL_COPIES_LOCKED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        retentionLockMode:
          description: Retention lock mode of the data target that the copies reside on.
          enum:
          - GOVERNANCE
          - COMPLIANCE
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        retentionTime:
          description: The earliest of the retention time on the child protection copies.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        retierTime:
          description: The retier time on the protection copies in the cloud.
          format: date-time
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        size:
          description: The used capacity in the storage system of this copy in bytes.
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          description: 'State of the copy.

            '
          enum:
          - IDLE
          - READY_FOR_CLOUD_TIERING
          - CLOUD_TIERING
          - CLOUD_RECALLING
          - DELETING
          - DELETED
          - DELETE_FAILED
          - SOFT_DELETED
          - RESTORING
          - EXPORTING
          - CATALOG_DELETE_FAILED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageSystemId:
          description: The ID of the storage system (for example, PowerProtect DD System) that the protection copies that are associated with this copy set reside on.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        systemTags:
          description: Copy's tags.
          items:
            type: string
          type: array
      title: ''
      type: object
    CopyDeletion:
      description: Copy Deletion.
      properties:
        activityId:
          type: string
        copyIds:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - copyIds
      type: object
    CopyDeletionBatchRequest:
      properties:
        body:
          $ref: '#/components/schemas/CopyDeletionRequest'
        id:
          type: string
      type: object
    CopyDeletionBatchRequests:
      description: Batch copy deletion request model
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CopyDeletionBatchRequest'
          type: array
      type: object
    CopyDeletionBatchResponse:
      properties:
        body:
          $ref: '#/components/schemas/CopyDeletionResponse'
        id:
          type: string
        status:
          type: string
      type: object
    CopyDeletionBatchResponses:
      description: Batch copy deletion response model
      properties:
        responses:
          items:
            $ref: '#/components/schemas/CopyDeletionBatchResponse'
          type: array
      type: object
    CopyDeletionRequest:
      properties:
        copyId:
          type: string
      type: object
    CopyDeletionResponse:
      properties:
        activityId:
          type: string
        copyIds:
          items:
            type: string
          type: array
      type: object
    CopyDetails:
      properties:
        arraySerialNo:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        arraySubType:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupStartTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        fileSystem:
          $ref: '#/components/schemas/CopyFileSystem'
        k8sBackup:
          $ref: '#/components/schemas/CopyK8s'
        mssqlBackup:
          $ref: '#/components/schemas/CopySql'
        nasBackup:
          $ref: '#/components/schemas/CopyNas'
        oracleBackup:
          $ref: '#/components/schemas/CopyOracle'
        storageClass:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageGroupID:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        vmBackup:
          $ref: '#/components/schemas/CopyVm'
      type: object
    CopyDiscoveryResource:
      description: Server Disaster Recovery model
      properties:
        discoveryStartTime:
          description: timestamp for last ES backup
          type: string
        policyIds:
          description: List all the policies, whose asset copy discovery needs to be executed
          items:
            type: string
          type: array
        workflowTaskId:
          description: Id for NAS Server DR job
          type: string
      required:
      - discoveryStartTime
      - workflowTaskId
      title: CopyDiscoveryResource
      type: object
    CopyExtendedData:
      properties:
        backupAssets:
          description: Critical volumes information.
          items:
            properties:
              name:
                description: Backup asset name. For example, for file system BMR, this property represents the critical volume name.
                type: string
              size:
                description: Backup asset size. For example, for file system BMR, this property represents the critical volume capacity in GB.
                format: int64
                type: integer
            type: object
          type: array
        controlSpFileInfo:
          description: Relative Path of SPFile, Control File and Autobackup File pieces.
          properties:
            autoBackupPath:
              type: string
            controlFilePath:
              type: string
            spFilePath:
              type: string
          type: object
        hasControlFile:
          description: Indicate if Controlfile is part of copy.
          type: boolean
        hasSpFile:
          description: Indicate if SPFileis part of copy.
          type: boolean
        mountPath:
          description: Mount Path used for the backup for Oracle OIM.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        protocol:
          description: Oracle OIM mount operation protocol.
          enum:
          - BOOSTFS
          - NFS
          - DDBOOST
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        systemManufacturer:
          description: Source manufacturer.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        systemModel:
          description: Source model.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    CopyFileSystem:
      properties:
        ddbeaMetadata:
          $ref: '#/components/schemas/CopyFileSystemDdbeaMetadata'
      type: object
    CopyFileSystemDdbeaMetadata:
      properties:
        ddHostname:
          description: PowerProtect DD hostname this protection copy set is located on.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddUser:
          description: User name of the user who backed up to the PowerProtect DD storage unit.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        devicePath:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        namespace:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        size:
          description: Size of the backup in bytes.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        subSpaceGUID:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        subspace:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        technology:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        transactionId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyK8s:
      description: CopyK8s is used for info in copy details.
      properties:
        backupId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        clusterResourcesIncluded:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        persistentVolumeClaims:
          items:
            $ref: '#/components/schemas/PersistentVolumeClaims'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyLog:
      properties:
        date:
          description: The date when this copy log was created.
          format: date-time
          type: string
        id:
          description: The ID of this copy log.
          type: string
        partialCopy:
          description: Indicates whether this copy is a partial copy or not.
          type: boolean
        partialCopyDescription:
          description: The descriptions for partial copy, if this is a partial copy.
          type: string
        sizeBytes:
          description: The used capacity in storage system of this copy in bytes.
          format: int64
          type: integer
      type: object
    CopyLogs:
      properties:
        content:
          items:
            $ref: '#/components/schemas/CopyLog'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CopyMap:
      description: Detailed information for all copies of the asset.
      properties:
        assetType:
          description: The type of an asset
          enum:
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - NAS_SHARE
          - POWERSTORE_BLOCK
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        details:
          $ref: '#/components/schemas/AssetDetails'
        id:
          description: ID of the corresponding asset
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Asset name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        nodeId:
          description: ID of the corresponding asset.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageLocations:
          items:
            $ref: '#/components/schemas/StorageLocation'
          type: array
        storageSystemName:
          description: Name of storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        totalCopyCount:
          description: Total copy count. Including the copies where the state is marked with DELETE prefix
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        totalSizeBytes:
          description: Total size bytes. Including the copies where the state is marked with DELETE prefix
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyMetric:
      description: Copy metric.
      properties:
        assetId:
          description: Asset ID.
          type: string
        centralizedCopyCount:
          description: Number of PowerProtect Data Manager generated copies.
          format: int32
          type: integer
        maxCopySize:
          description: Maximum copy size.
          format: double
          type: number
        minCopySize:
          description: Minimum copy size.
          format: double
          type: number
        selfServiceCopyCount:
          description: Number of self-generated copies (not generated by PowerProtect Data Manager).
          format: int32
          type: integer
        stageCopyMetrics:
          items:
            $ref: '#/components/schemas/CopyMetricStageCopyMetrics'
          type: array
        totalNumbers:
          description: Total number of copies.
          format: int32
          type: integer
      type: object
    CopyMetricStageCopyMetrics:
      properties:
        copyCount:
          description: Number of total copies at this stage.
          format: int32
          type: integer
        latestCopyTime:
          description: Most recent copy time for recoverable copies.
          format: date-time
          type: string
        oldestCopyTime:
          description: Oldest copy time for recoverable copies.
          format: date-time
          type: string
        policyId:
          description: Policy ID of the stage.
          type: string
        stageId:
          description: Stage ID.
          type: string
        stageType:
          description: Stage type.
          enum:
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - SNAPSHOT
          - CLOUD_TIER
          - PRIMARY
          - CDR
          - ALL
          type: string
      type: object
    CopyMetrics:
      description: Metrics for the copies.
      properties:
        content:
          items:
            $ref: '#/components/schemas/CopyMetric'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CopyNas:
      description: CopyNas is used for info in copy details.
      properties:
        directoryCount:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        fileCount:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        skippedElements:
          $ref: '#/components/schemas/CopyNasSkippedElements'
        snapshotMetadata:
          $ref: '#/components/schemas/CopyNasSnapshotMetadata'
      type: object
    CopyNasSkippedElements:
      properties:
        incremental:
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        total:
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyNasSnapshotMetadata:
      properties:
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        path:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        pathId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyNetworkSettings:
      properties:
        networkKey:
          type: integer
        networkLabel:
          type: string
        networkMoref:
          type: string
      type: object
    CopyOracle:
      description: Oracle copy related information in copy details.
      properties:
        backupMechanism:
          enum:
          - OIM
          - SBT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupObject:
          enum:
          - PDB
          - CDB
          - DATABASE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupPieces:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: tru
        copyNumber:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddbeaMetadata:
          $ref: '#/components/schemas/CopyOracleDdbeaMetadata'
        dependentLogNaturalIds:
          items:
            items:
              type: string
            type: array
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        dependentLogs:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        firstScn:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        followControlFile:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        followSpFile:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        hasControlFile:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        hasSpFile:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        incarnationNumber:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        jobId:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastScn:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        rmanCatalog:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        thread:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyOracleDdbeaMetadata:
      properties:
        applicationsOfInterest:
          items:
            $ref: '#/components/schemas/SingleApplicationOfInterest'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddHostname:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageUnit:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        transactionId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        user:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyProtectionGroupRef:
      properties:
        backupStrategy:
          description: Backup strategy of the protection group when the copy was created.
          enum:
          - BACKUP_ALL
          - BACKUP_BY_RANK
          - BACKUP_PRIMARY_ONLY
          - BACKUP_STANDALONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: The protection group ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyProtectionPolicy:
      properties:
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stages:
          items:
            $ref: '#/components/schemas/CopyProtectionPolicyStage'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyProtectionPolicyStage:
      properties:
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ownedTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          enum:
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - CLOUD_TIER
          - PRIMARY
          - CDR
          - SNAPSHOT
          - OTHERS
          - ALL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopySql:
      description: CopySql is used for info in copy details.
      properties:
        backupUuid:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddbeaMetadata:
          $ref: '#/components/schemas/CopySqlDdbeaMetadata'
        parentVmPcsId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionEngineFlow:
          enum:
          - APPDIRECT
          - VMDIRECT
          - HYPERVISORDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        snapshotMetadata:
          items:
            $ref: '#/components/schemas/CopySqlSnapshotMetadata'
          type: array
          uniqueItems: true
        softDelete:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopySqlDdbeaMetadata:
      properties:
        applicationsOfInterest:
          items:
            $ref: '#/components/schemas/SingleApplicationOfInterest'
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        copyOnly:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddHostname:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dependentSequenceNumbers:
          items:
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        mfrExtendedAttribute:
          $ref: '#/components/schemas/CopySqlDdbeaMetadataMfrExtendedAttribute'
        namespace:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        sequenceNumber:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageUnit:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        subspace:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        transactionId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        user:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopySqlDdbeaMetadataMfrExtendedAttribute:
      properties:
        directoryPath:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        keys:
          items:
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopySqlSnapshotMetadata:
      properties:
        consistencyGroupId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        rpHost:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        snapshotName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        snapshotUser:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        staticImages:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyTargetDisk:
      properties:
        backupIndex:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        capacityInBytes:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        controller:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        controllerType:
          enum:
          - IDE
          - SCSI
          - SATA
          - USB
          - USB3
          - PCI
          - NVME
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        datastoreMoref:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        eagerlyScrub:
          description: Flag indicates if the disk was eagerly zeroed when provisioned.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        excluded:
          description: It means if this disk is treated as backup target.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        key:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        label:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        provisioningType:
          enum:
          - THICK
          - THICK_LAZY
          - THICK_EAGER
          - THIN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storagePolicyId:
          description: The ID of vCenter storage policy assigned to this disk
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        thinProvisioned:
          description: Flag indicates if the disk was thin provisioned.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        unitNumber:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        usedBytes:
          description: Indicates the number of bytes of a virtual disk in-use.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CopyVm:
      properties:
        backupId:
          description: An opaque identifier used to represent the entire VM backup that contains a full backup of this database.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataMoverType:
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        diskBackupCount:
          description: The number of disks that have been backed up as part of this backup.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        diskTotalCount:
          description: The total number of disks for the VM.
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        disks:
          items:
            $ref: '#/components/schemas/CopyTargetDisk'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        networks:
          items:
            $ref: '#/components/schemas/CopyNetworkSettings'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        partialCopy:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        partialCopyDescription:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionEngineType:
          enum:
          - VMDIRECT
          - HYPERVISORDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        quiesceStatus:
          enum:
          - NONE
          - FULL
          - COPY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storagePolicyId:
          description: The ID of vCenter storage policy assigned to the VM and any non-disk files.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        syntheticFull:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        transportModeUsed:
          description: The transport mode used to transfer the data for this copy (NBD, HotAdd, TransportSnapshotDataMover)
          enum:
          - NBD
          - HOTADD
          - TSDM
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    CreatedByTypeEnum:
      description: The type of createdBy
      enum:
      - LOCAL
      - IMPORT
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    Credential:
      description: The request body to update credential.
      properties:
        consumersCount:
          description: The total number of consumers using this credential.
          minimum: 0
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        extraInfo:
          description: Additional information about the credential.
          items:
            $ref: '#/components/schemas/CredentialExtraInfo'
          type: array
        id:
          description: The ID of credential.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        internal:
          description: The internal credential is created by PowerProtect Data Manager instead of by users.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        method:
          description: The credential method.
          enum:
          - BASIC
          - TOKEN
          - CONFIG
          - USER_KEY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of credential.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        password:
          description: The password of credential account.
          type: string
        secretId:
          description: The ID that points to secret entry in lockbox that stores the password.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: The type of credential account.
          enum:
          - DATADOMAIN
          - POWERPROTECT
          - DBUSER
          - OS
          - RMAN
          - STANDARD
          - VCENTER
          - KUBERNETES
          - SMISSERVER
          - CDR
          - SAPHANA_DB_USER
          - SAPHANA_SYSTEMDB_USER
          - DDBOOST
          - NAS
          - CLOUD_SNAPSHOT_MANAGER
          - CLOUD_DIRECTOR
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        username:
          description: The username of credential account.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - name
      - type
      - username
      type: object
    CredentialConsumer:
      description: The consumer for a credential
      properties:
        id:
          type: string
        name:
          type: string
      title: CredentialConsumer
      type: object
    CredentialConsumerList:
      description: The consumer list for a credential
      properties:
        consumers:
          items:
            $ref: '#/components/schemas/CredentialConsumer'
          type: array
        label:
          type: string
        type:
          enum:
          - ASSETS
          - PROTECTION_POLICIES
          - INVENTORY_SOURCES
          - HOSTS
          - STORAGE_SYSTEMS
          - DATADOMAIN_MTREES
          type: string
      title: CredentialConsumerList
      type: object
    CredentialExtraInfo:
      description: Credential extra information.
      properties:
        name:
          description: Name of the extra info property.
          type: string
        value:
          description: Value of the extra info property.
          type: string
      required:
      - name
      - value
      title: CredentialExtraInfo
      type: object
    CredentialUsage:
      description: The usage information for a credential
      properties:
        consumerList:
          items:
            $ref: '#/components/schemas/CredentialConsumerList'
          type: array
        consumersCount:
          minimum: 0
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
      title: CredentialUsage
      type: object
    Credentials:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Credential'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    CredentialsBatchDeletionRequest:
      description: ''
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CredentialsBatchDeletionRequestRequests'
          type: array
      title: CredentialsBatchDeletionRequest
      type: object
    CredentialsBatchDeletionRequestBody:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    CredentialsBatchDeletionRequestRequests:
      properties:
        body:
          $ref: '#/components/schemas/CredentialsBatchDeletionRequestBody'
        id:
          type: string
      required:
      - body
      - id
      type: object
    CredentialsBatchRequest:
      description: Asset credentials password update request.
      properties:
        body:
          $ref: '#/components/schemas/CredentialsBatchRequestBody'
        id:
          description: Request id.
          type: string
      type: object
    CredentialsBatchRequestBody:
      description: Single request content.
      properties:
        id:
          description: Credential id.
          type: string
        password:
          description: credential password which used to update.
          type: string
      type: object
    CredentialsBatchRequests:
      description: Credentials batch request body.
      properties:
        requests:
          description: Array of asset credentials password update request.
          items:
            $ref: '#/components/schemas/CredentialsBatchRequest'
          type: array
      type: object
    CredentialsBatchResponse:
      description: The response of the Credentials Batch Update.
      properties:
        activityId:
          type: string
      type: object
    DataDomainBoostOptions:
      properties:
        globalAuthenticationMode:
          type: string
        globalEncryptionStrength:
          type: string
      type: object
    DataDomainEncryptionSettings:
      properties:
        ddboostOptions:
          $ref: '#/components/schemas/DataDomainBoostOptions'
        hostname:
          type: string
        replicationOptions:
          $ref: '#/components/schemas/DataDomainReplicationOptions'
      required:
      - replicationOptions
      type: object
    DataDomainMTree:
      description: PowerProtect DD MTree Response.
      properties:
        attributes:
          additionalProperties:
            type: string
          type: object
        availableCapacityInBytes:
          format: double
          readOnly: true
          type: number
        createdAt:
          format: date-time
          readOnly: true
          type: string
        credential:
          $ref: '#/components/schemas/Id'
        deletable:
          type: boolean
        discovered:
          readOnly: true
          type: boolean
        hardCapacityQuotaLevel:
          format: int64
          type: integer
        hardStreamQuotaLevel:
          format: int32
          type: integer
        id:
          type: string
        lastDiscoveryStatus:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterfaceStorageUnit'
          type: array
        protectionCreated:
          type: boolean
        replicationSources:
          items:
            type: string
          readOnly: true
          type: array
        replicationTargets:
          items:
            type: string
          type: array
        retentionEnabledIndefinitely:
          type: boolean
        retentionLockMode:
          type: string
        retentionLockStatus:
          type: string
        retentionMaximum:
          format: int64
          type: integer
        retentionMinimum:
          format: int64
          readOnly: true
          type: integer
        reusable:
          type: boolean
        securityOfficerPassword:
          type: string
        securityOfficerUsername:
          type: string
        softCapacityQuotaLevel:
          format: int64
          type: integer
        softStreamQuotaLevel:
          format: int32
          type: integer
        storageSystem:
          $ref: '#/components/schemas/Id'
        systemManaged:
          type: boolean
        tenant:
          $ref: '#/components/schemas/Id'
        totalCapacityInBytes:
          format: double
          readOnly: true
          type: number
        type:
          type: string
        unsupportedFeatures:
          description: If set, indicates if there are any unsupported features.
          items:
            enum:
            - DISCOVERY
            - QUOTA_SETTING
            - AUTOMATED_PASSWORD_GENERATION
            readOnly: true
            type: string
          readOnly: true
          type: array
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        usage:
          description: Indicates the usage of the storage unit
          enum:
          - DATA_MANAGER_VAULT
          type: string
        userTags:
          items:
            type: string
          type: array
          uniqueItems: true
        vaultDataTargetIds:
          items:
            type: string
          type: array
      required:
      - credential
      - storageSystem
      type: object
    DataDomainMTrees:
      description: PowerProtect DD MTree List Response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/DataDomainMTree'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    DataDomainReplicationOptions:
      properties:
        authenticationMode:
          type: string
        encryption:
          type: string
      type: object
    DataDomainStorageUnit:
      properties:
        credentialId:
          type: string
        dataAccessIp:
          type: string
        dataTargetId:
          type: string
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterfaceStorageUnit'
          type: array
        retentionLock:
          $ref: '#/components/schemas/RetentionLock'
        storageArrayId:
          type: string
        storageUnit:
          $ref: '#/components/schemas/StorageUnit'
      required:
      - credentialId
      - storageArrayId
      type: object
    DataDomainStorageUnitCreateRequest:
      properties:
        credentialId:
          type: string
        dataAccessIp:
          type: string
        dataTargetId:
          type: string
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterfaceStorageUnit'
          type: array
        retentionLock:
          $ref: '#/components/schemas/RetentionLock'
        storageArrayId:
          type: string
        storageUnit:
          $ref: '#/components/schemas/StorageUnitCreate'
      required:
      - credentialId
      - storageArrayId
      title: ''
      type: object
    DataManagerEULA:
      description: PowerProtect Data Manager EULA Rest Model.
      properties:
        accepted:
          type: boolean
        acceptedTime:
          type: string
        link:
          type: string
      type: object
    DataTarget:
      description: Detailed information of the data target.
      properties:
        details:
          $ref: '#/components/schemas/DataTargetDetails'
        externalId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscovered:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryStatus:
          enum:
          - NEW
          - DETECTED
          - NOT_DETECTED
          - DELETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageArrayId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        subtype:
          enum:
          - DDV_DISK_POOL
          - DDV_DISK_DEVICE_GROUP
          - DDV_DISK_SERVICE
          - DD_MTREE
          - STORAGE_ARRAY
          - DD_STORAGE_UNIT
          - CDR_CONTAINER
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          enum:
          - TARGET_VOLUME
          - GROUP
          - DR
          - STORAGE_ARRAY
          - CDR_STORAGE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        unsupportedFeatures:
          description: If set, indicates if there are any unsupported features.
          items:
            enum:
            - DISCOVERY
            - QUOTA_SETTING
            - AUTOMATED_PASSWORD_GENERATION
            readOnly: true
            type: string
          readOnly: true
          type: array
        vendor:
          $ref: '#/components/schemas/VendorEnum'
      type: object
    DataTargetDetails:
      properties:
        replica:
          description: Indicates if current data target is a replica of another data target.
          readOnly: true
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    DataTargets:
      properties:
        content:
          items:
            $ref: '#/components/schemas/DataTarget'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    DbConnection:
      properties:
        tnsAdmin:
          type: string
        tnsName:
          type: string
      type: object
    DeleteInventorySourceResponse:
      description: The response for deleting an inventory source when it is running as an asynchronous operation.
      properties:
        activityId:
          description: The ID of the activity.
          type: string
      type: object
    DeployCdrsRequest:
      description: Deploy CDRS resource.
      properties:
        adminPassword:
          type: string
        cidrBlockIp:
          type: string
        cloudTargetId:
          type: string
        deleteExisting:
          type: boolean
        email:
          type: string
        monitorPassword:
          type: string
        privateDeployment:
          default: false
          type: boolean
        subnetId:
          type: string
        vpcId:
          type: string
        workflowTaskId:
          type: string
      type: object
    DeployStageStatus:
      properties:
        deployStage:
          enum:
          - PRE_DEPLOYMENT_RESOURCES_VALIDATION
          - UPLOAD_CDRS_FILES
          - DEPLOY_CLOUD_INFRASTRUCTURE
          - LAUNCH_INSTANCE
          - CDRS_DEPLOYMENT_VALIDATION
          type: string
        status:
          enum:
          - IDLE
          - RUNNING
          - COMPLETED_SUCCESS
          - COMPLETED_ERROR
          type: string
      type: object
    DeployStateProperties:
      description: 'Deployment state properties. '
      properties:
        deployStagesStatus:
          description: 'Represents details about stages in deployments and their status.


            Stages include: PRE_DEPLOYMENT_RESOURCES_VALIDATION, UPLOAD_CDRS_FILES, DEPLOY_CLOUD_INFRASTRUCTURE, LAUNCH_INSTANCE, CDRS_DEPLOYMENT_VALIDATION


            Status values include: IDLE, RUNNING, COMPLETED_SUCCESS, COMPLETED_ERROR'
          items:
            $ref: '#/components/schemas/DeployStageStatus'
          type: array
        deployState:
          description: 'Represents the state of the deployment job. Values include: IN_PROGRESS, COMPLETE, FAILURE, UNKNOWN.'
          enum:
          - IN_PROGRESS
          - COMPLETE
          - FAILURE
          - UNKNOWN
          type: string
        jobName:
          description: Name of the deployment job. This name is autogenerated for each deployment job.
          type: string
        message:
          description: May include details about the job status.
          type: string
      type: object
    DirectoryFileList:
      description: Directory File List.
      properties:
        content:
          items:
            $ref: '#/components/schemas/BrowseFileEntry'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Discoveries:
      description: Get a list of Discoveries response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Discovery'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Discovery:
      description: The model for starting discoveries, updating discovery schedules, and getting information about discoveries.
      properties:
        description:
          description: An optional description for the discovery.  If a description is not provided, a default description is assigned.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: The ID of the internal discovery information in elastic search (not usually needed).  This ID is only valid to be provided to API taking ID in path.
          type: string
        level:
          default: DataCopies
          description: 'How deeply to discover the starting resource.  Valid values are:

            - ManagementInterface

            - Device or HOST (adm)

            - ProtectableData or APPSERVER (adm)

            - DataCopies


            The default level value is DataCopies.'
          enum:
          - ManagementInterface
          - Device
          - HOST
          - ProtectableData
          - APPSERVER
          - DataCopies
          - HOSTFULL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: An optional name for the discovery. If a name is not provided, a default name is assigned.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        schedule:
          $ref: '#/components/schemas/DiscoverySchedule'
        start:
          description: 'The starting resource from which to discover.  Examples are:

            - /inventorySources/UUID

            - /hosts/UUID

            - /storageSystems/UUID


            There is no default for the start value and it is required.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        taskId:
          description: The ID of the currently running discovery activity, or not reported if the discovery activity has completed.  For example, after starting a discovery with POST this field contains the discovery activity started and continues to contain the discovery activity during GET actions.  Once the discovery activity has completed, it is reported (as its value is set to null).
          type: string
        workflowTaskId:
          description: The ID of the Workflow that is created that corresponds to this type of discovery (start/level).
          type: string
      required:
      - start
      type: object
    DiscoveryResult:
      description: Result of the discovery activity.
      properties:
        error:
          description: Error description for the discovery task.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        messageID:
          description: ID of the message for the discovery task.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        remediation:
          description: Remediation for the discovery task.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          description: 'Status of the discovery task. Valid values are following:

            - OK

            - CANCELED

            - FAILED

            - OK_WITH_ERRORS.'
          enum:
          - OK
          - CANCELED
          - FAILED
          - OK_WITH_ERRORS
          - UNKNOWN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        summaries:
          description: Summaries of the discovery task.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    DiscoverySchedule:
      description: The schedule for discoveries.
      properties:
        enabled:
          default: false
          description: Whether or not the schedule should be enabled.  The default discovery is a DAILY scheduled discovery starting at 2:00 AM that is disabled by default (enabled set to false).
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        hourlyFrequency:
          default: 0
          description: The number of hours between HOURLY scheduled discoveries.  The default discovery is a disabled DAILY scheduled discovery starting at 2:00 AM.
          format: int32
          maximum: 23
          minimum: 0
          multipleOf: 1
          type: integer
        minutesFrequency:
          default: 0
          description: The number of minutes between MINUTES scheduled discoveries.  The default discovery is a disabled DAILY scheduled discovery starting at 2:00 AM.
          format: int32
          maximum: 59
          minimum: 0
          multipleOf: 1
          type: integer
        startHour:
          default: 2
          description: The hour when the DAILY scheduled discovery starts.  The default discovery is a disabled DAILY scheduled discovery starting at 2:00 AM.
          format: int32
          maximum: 23
          minimum: 0
          multipleOf: 1
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        startMinute:
          default: 0
          description: The minute when the DAILY scheduled discovery starts.  The default discovery is a disabled DAILY scheduled discovery starting at 2:00 AM.
          format: int32
          maximum: 59
          minimum: 0
          multipleOf: 1
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          default: DAILY
          description: The type of discovery schedule to start.  The default discovery is a disabled DAILY scheduled discovery starting at 2:00 AM.
          enum:
          - DAILY
          - HOURLY
          - MINUTES
          maxLength: 7
          minLength: 5
          pattern: ^(DAILY|HOURLY|MINUTES)$
          type: string
      type: object
    Disk:
      description: Disk information
      properties:
        availableSize:
          description: The total available size of all partitions.The available Size in 64 bits.
          format: int64
          type: integer
        id:
          type: string
        name:
          type: string
        nodeId:
          type: string
        partitions:
          items:
            $ref: '#/components/schemas/Partition'
          type: array
        totalSize:
          description: The total size of all partitions. The totalSize in 64 bits.
          format: int64
          type: integer
      type: object
    Disks:
      description: Get Disks.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    EmbeddedIdName:
      properties:
        id:
          type: string
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    EmbeddedProtectionPolicy:
      properties:
        backupMechanism:
          description: The backup mechanism that the protection policy is configured to perform.
          enum:
          - SBT
          - OIM
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupRank:
          description: The priority order (with 1 being highest) in which to attempt to create a backup for an ORACLE_DATA_GUARD protection group using the BACKUP_BY_RANK backup strategy.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
        protectionEngine:
          type: string
        type:
          type: string
      type: object
    EngineCredential:
      description: Credential ID.
      properties:
        id:
          description: id
          type: string
      required:
      - id
      type: object
    EngineDataDomainMtree:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    EngineDetail:
      properties:
        vpe:
          $ref: '#/components/schemas/VPEEngineInfo'
      type: object
    EngineEmbedded:
      properties:
        dataDomainMtree:
          $ref: '#/components/schemas/EngineDataDomainMtree'
        storageSystem:
          $ref: '#/components/schemas/EngineStorageSystem'
      type: object
    EngineStorageSystem:
      properties:
        id:
          type: string
        location:
          type: string
        name:
          type: string
      type: object
    ErrorMessage:
      description: The error response that describes the failure reason and remediation.
      properties:
        code:
          description: The error code number.
          format: int32
          type: integer
        extendedInfo:
          description: Additional information about the error.
          type: string
        message:
          description: The EEMI message.
          type: string
        messageArgs:
          description: The message arguments are the values for any substitution variables that are defined as part of the message.
          items:
            type: string
          type: array
        messageId:
          description: The EEMI message ID.
          type: string
        messageTemplate:
          description: The message template defines the display sequence of the message arguments array.
          type: string
        path:
          description: The path that produced the error.
          type: string
        reason:
          description: The reason that the error occurred.
          type: string
        remediation:
          description: A recommended solution to resolve the error.
          type: string
        timestamp:
          description: When the error occurred.
          format: int64
          type: integer
      type: object
    ErrorResponseObject:
      description: The error message response.
      properties:
        code:
          description: The error code.
          format: int32
          type: integer
        path:
          description: The path the error applies to.
          type: string
        reason:
          description: The reason for the error code.
          type: string
        remediation:
          description: The remediation for the error code.
          type: string
        timestamp:
          description: The time of the error.
          format: int64
          type: integer
      type: object
    EsxCluster:
      properties:
        clusterMoref:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        networks:
          items:
            $ref: '#/components/schemas/NetworkMoref'
          type: array
        vCenterUuid:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    EsxHost:
      properties:
        configScratchLocation:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostMoref:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostUuid:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        hostVersion:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        networks:
          items:
            $ref: '#/components/schemas/NetworkMoref'
          type: array
        scsiAdapter:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        splitterInfo:
          $ref: '#/components/schemas/SplitterInfo'
        vCenterUuid:
          type: string
      type: object
    EsxHostInfo:
      description: Information about the ESXi Host to use as the restore destination when the restoreType is Direct to ESXi Host.
      properties:
        hostName:
          type: string
        userName:
          type: string
        userPassword:
          type: string
      required:
      - hostName
      - userName
      - userPassword
      type: object
    ExportReportParameters:
      properties:
        formatParameters:
          $ref: '#/components/schemas/FormatParameters'
        publicationMethod:
          description: 'The type of the export. For example: FILE'
          enum:
          - FILE
          - EMAIL
          type: string
        reportId:
          description: ID returned from the POST /report API.
          type: string
      type: object
    ExportReportResponse:
      properties:
        id:
          description: The ID of the file that is used to download the exported report.
          type: string
      type: object
    ExportedCopies:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ExportedCopy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ExportedCopiesDeletionResponse:
      properties:
        taskId:
          type: string
      title: ExportedCopiesDeletionResponse
      type: object
    ExportedCopy:
      description: ExportedCopy
      properties:
        assetId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        completionTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        copyId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataSourceSubType:
          $ref: '#/components/schemas/AssetSubtypeEnum'
        description:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        expirationTime:
          format: date-time
          type: string
        exportType:
          enum:
          - SD_EXPORT
          - RESTORED_FILES
          - RESTORED_COPIES
          - LIVE_VM_MOUNT
          - VMDK_MOUNT
          - INSTANT_RESTORED_COPIES
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        exportedCopiesDetails:
          $ref: '#/components/schemas/ExportedCopyDetails'
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        restoredCopyId:
          description: The restored copy ID for current exported copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          enum:
          - WAITING
          - RUNNING
          - STOPPING
          - COMPLETED
          - INCOMPLETE
          - EXPIRED
          - MOUNTED
          - DELETING
          - VMOTIONING
          - MOUNTING
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - UNKNOWN
          - SUCCESS
          - PARTIALSUCCESS
          - PARTIALCANCELLED
          - CANCELLED
          - FAILED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageSystem:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetAsset:
          $ref: '#/components/schemas/ExportedCopyTargetAssetDetail'
      required:
      - assetId
      - copyId
      - description
      - exportType
      type: object
    ExportedCopyDetails:
      description: ExportedCopyDetails
      properties:
        targetExportedStorageInfo:
          $ref: '#/components/schemas/ExportedTargetStorageInfo'
        targetExportedVmInfo:
          $ref: '#/components/schemas/ExportedTargetVmInfo'
      type: object
    ExportedCopyHostChangeRequest:
      description: The request body of the exported copy attach/detach host.
      properties:
        externalId:
          description: The ID of host or host group.
          type: string
        name:
          description: The name of host or host group.
          type: string
        operationType:
          enum:
          - ATTACH
          - DETACH
          type: string
        type:
          enum:
          - HOST
          - HOST_GROUP
          type: string
      required:
      - type
      - externalId
      - operationType
      type: object
    ExportedCopyHostChangeResponse:
      description: The response of the exported copy attach/detach host.
      properties:
        activityId:
          type: string
      type: object
    ExportedCopyPatchModel:
      description: ExportedCopy patch model
      properties:
        expirationTime:
          format: date-time
          type: string
      required:
      - expirationTime
    ExportedCopyTargetAssetDetail:
      description: Exported copy target asset detail information.
      properties:
        name:
          description: Name of the target asset for exported copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ExportedTargetStorageHostDetail:
      description: SDMNG exported target storage host detail
      properties:
        externalId:
          description: UUID of that host returned from PST.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name returned from PST.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          enum:
          - HOST
          - HOST_GROUP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ExportedTargetStorageInfo:
      description: ExportedTargetStorageInfo
      properties:
        exportDevices:
          items:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          type: array
        hostDetails:
          description: Contains a list of host details.
          items:
            $ref: '#/components/schemas/ExportedTargetStorageHostDetail'
          type: array
        initiatorGroups:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lunMaps:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        proxyVolumeDetails:
          description: Contains a list of proxy volume details.
          items:
            $ref: '#/components/schemas/ExportedTargetStorageProxyVolumeDetails'
          type: array
        restoredCopyId:
          description: The restored copy ID for current exported copy.
          type: string
        targetArray:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetGroupName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetHosts:
          items:
            type: string
            x-ppdm-filter: true
            x-ppdm-sort: true
          type: array
      type: object
    ExportedTargetStorageProxyVolumeDetails:
      description: ExportedTargetStorageProxyVolumeDetails
      properties:
        wwn:
          description: World wide name of the proxy volume from PST.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ExportedTargetVmInfo:
      description: ExportedTargetVmInfo
      properties:
        restoredCopyId:
          description: The restored copy ID for current exported copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetAssetId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetVmName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ExtendedData:
      description: Extended data with an array of key/value pairs for generic use.
      properties:
        keyValues:
          items:
            $ref: '#/components/schemas/KeyValuesPair'
          type: array
      type: object
    ExternalNotification:
      description: Configure alert notifications with the categories and severities.
      properties:
        categoryList:
          description: Enum of MessageCategory for filtering.
          items:
            type: string
          type: array
        disabled:
          description: User can enable or disable notifications.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        emails:
          description: List of email addresses to send the alerts to.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: External notification ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        lastAlertMatchTime:
          description: Time that the last alert was created meeting this criteria.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastNotificationTime:
          description: This parameter is the date and time of the last transmission.
          format: date-time
          type: string
          x-ppdm-filter: true
        messageIdList:
          description: Specific MessageID for filtering.
          items:
            type: string
          type: array
        name:
          description: Name of notification configuration.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        notificationWindow:
          description: This is the time frame for the PowerProtect Data Manager user to wait before sending more notifications.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        severityList:
          description: Enum of MessageSeverity for filtering.
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/Source'
        subjectOverride:
          description: Customer-provided subject line for outgoing notifications.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - emails
      - name
      type: object
    ExternalNotifications:
      description: Get External Notifications.
      properties:
        content:
          items:
            $ref: '#/components/schemas/ExternalNotification'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    FLRAsset:
      description: FLR asset details for the provided backup copy natural ID.
      properties:
        id:
          type: string
        inventorySourceName:
          type: string
        name:
          type: string
        protocol:
          type: string
      title: FLRAsset
      type: object
    FLRConflictsRequest:
      description: Request from the FLR workflow to get the list of conflicts.
      properties:
        committedTargetList:
          items:
            $ref: '#/components/schemas/FLRItem'
          type: array
        selectedTargetList:
          items:
            $ref: '#/components/schemas/FLRItem'
          type: array
      title: FLRConflictsRequest
      type: object
    FLRConflictsResponse:
      description: Response to the FLR workflow to get the list of conflicts.
      properties:
        committedConflictList:
          items:
            $ref: '#/components/schemas/ConflictItem'
          type: array
        selectionConflictList:
          items:
            $ref: '#/components/schemas/ConflictItem'
          type: array
      title: FLRConflictsResponse
      type: object
    FLRFile:
      description: FLR file details that are selected or committed.
      properties:
        name:
          type: string
        path:
          type: string
        type:
          enum:
          - FILE
          - FOLDER
          type: string
      title: FLRFile
      type: object
    FLRItem:
      description: Contains the FLR file and backup copy natural ID details that are selected or committed in the FLR workflow.
      properties:
        copyId:
          type: string
        file:
          $ref: '#/components/schemas/FLRFile'
      title: FLRItem
      type: object
    FailedObjective:
      properties:
        code:
          type: string
        copyType:
          enum:
          - ALL
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          type: string
        name:
          type: string
        reason:
          type: string
        remediation:
          type: string
      type: object
    Failure:
      properties:
        reason:
          type: string
        remediation:
          type: string
      type: object
    Feature:
      properties:
        apiRules:
          items:
            $ref: '#/components/schemas/APIRule'
          type: array
        boundService:
          type: string
        dependencies:
          items:
            type: string
          type: array
        id:
          type: string
        jobRules:
          items:
            $ref: '#/components/schemas/JobRule'
          type: array
        name:
          type: string
        parents:
          items:
            type: string
          type: array
        status:
          enum:
          - ENABLED
          - DISABLED
          type: string
        togglers:
          items:
            $ref: '#/components/schemas/Toggler'
          type: array
        unavailable:
          items:
            enum:
            - PLATFORM
            - LICENSE
            type: string
          type: array
      title: Feature
      type: object
    FeatureRequest:
      properties:
        body:
          $ref: '#/components/schemas/Feature'
        id:
          type: string
      title: FeatureRequest
      type: object
    FeatureResponse:
      properties:
        body:
          $ref: '#/components/schemas/Feature'
        id:
          type: string
        status:
          type: integer
      title: FeatureResponse
      type: object
    Features:
      description: Get all features response model, not the original Network model.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    FeaturesBatchRequests:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/FeatureRequest'
          type: array
      title: FeaturesBatchRequests
      type: object
    FeaturesBatchResponses:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/FeatureResponse'
          type: array
      title: FeaturesBatchResponses
      type: object
    FileInstance:
      description: The result document describes the document fields returned in the query API response.
      properties:
        assetId:
          description: Unique ID of the asset that is indexed, provided by the orchestration host
          type: string
        assetName:
          description: The name of the asset - VM name for VM backup
          type: string
        backupType:
          description: The type of backup this metadata originated - indicates the filesystem NTFS/ext2/ext3/ext4/xfs. For NAS, it is NAS
          type: string
        copyEndDate:
          description: The copy end date and time when this file was backed up.  Copy start date and copy end date are used to determine how to restore a file or folder from a point in time.
          format: date-time
          type: string
        copyStartDate:
          description: The copy start date and time when this file was backed up.  Copy start date and copy end date are used to determine how to restore a file or folder from a point in time.
          format: date-time
          type: string
        createdAt:
          description: The creation time of this file or folder.
          format: date-time
          type: string
        diskLabel:
          description: The VM disk label for VMs or the Slice Name for NAS
          type: string
        diskName:
          description: The VM disk name for VMs or the Slice ID for NAS
          type: string
        id:
          description: The unique id for this document for VM backups;  holds the path hash value for NAS backups
          type: string
        itemType:
          description: The type of document.
          type: string
        location:
          description: 'The directory where this file or folder is located. '
          type: string
        name:
          description: The name of this file or folder.
          type: string
        objectType:
          description: Indicates the asset type that is backed up. For VM backups, the value is "VM". For NAS backups, the value is "NAS". For File System backups, the value is "FS".
          enum:
          - NAS
          - VM
          - FS
          type: string
        protectionPolicyId:
          description: The ID of the protection policy that instantiated this backup.
          type: string
        size:
          description: The size in bytes.
          format: int64
          type: integer
        sourceServer:
          description: The name of the source server. vCenter FQDN for VM, appliance name for NAS
          type: string
        type:
          description: The file type.  Folders are of type folder.
          type: string
        updatedAt:
          description: The last update time of this file or folder.
          format: date-time
          type: string
      title: FileInstance
      type: object
    FileInstances:
      properties:
        content:
          items:
            $ref: '#/components/schemas/FileInstance'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Filter:
      description: Detailed information of the filter.
      properties:
        assetCount:
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        category:
          description: 'Category of the filter.  Enum: PRIMITIVE | COMPOUND'
          enum:
          - PRIMITIVE
          - COMPOUND
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        conditions:
          items:
            $ref: '#/components/schemas/FilterCondition'
          type: array
        createdAt:
          description: Date when filter was created.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: Description of the filter.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        filterType:
          description: One of [exclude, include].
          enum:
          - EXCLUDE
          - INCLUDE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        filters:
          description: Array of primitive filter IDs (filterIds).
          items:
            $ref: '#/components/schemas/Filter'
          type: array
          x-ppdm-filter: false
          x-ppdm-sort: false
        id:
          description: ID of the filter.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastRunAt:
          description: The last run date of this filter.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        logicalOperator:
          description: Logical operators between multiple conditions. AND/OR. For R2, default logical operator is AND.
          enum:
          - AND
          - OR
          - NONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the filter.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        objectSubtype:
          description: A filter cannot be applied on all objects with the same object type (objectType). Like VM name filter, can be only applied on VM assets. This property is used to do filter assignment validation.  If objectType is ASSET, objectSubtype is VMWARE_VIRTUAL_MACHINE | ORACLE_DATABASE | MICROSOFT_SQL_DATABASE | FILE_SYSTEM.  If objectType is VM_DISK, objectSubtype is VMDK | VHD.
          enum:
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - VMDK
          - VHD
          - SAP_HANA_DATABASE
          - VMAX_STORAGE_GROUP
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - NAS_SHARE
          - CLOUD_NATIVE_ENTITY
          - POWERSTORE_BLOCK
          - CLOUD_DIRECTOR_VAPP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        objectType:
          description: 'The type of object on which the filter is applied. Enum: "FILE_SYSTEM_FILE | ASSET | VM_DISK".'
          enum:
          - FILE_SYSTEM_FILE
          - ASSET
          - VM_DISK
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        priority:
          description: Each filter has a unique priority value, which is 1 ~ N. The smaller number has the higher priority.
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionPolicyCount:
          type: integer
        purpose:
          description: 'Purpose of the filter.  Enum: FILE_BACKUP_FILTER | ASSET_RULE | VM_DISK_BACKUP_FILTER | RESOURCE_GROUP_FILTER | ASSET_SELECTION'
          enum:
          - FILE_BACKUP_FILTER
          - ASSET_RULE
          - VM_DISK_BACKUP_FILTER
          - RESOURCE_GROUP_FILTER
          - RESOURCE_GROUP_ASSIGNMENT
          - ASSET_SELECTION
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        templateName:
          description: The name of the template for the UI display (if the filter is derived from a template).
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        updatedAt:
          description: Date when filter was last modified.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - conditions
      - filterType
      - name
      - objectType
      - purpose
      type: object
    FilterCondition:
      description: Filter Condition
      properties:
        fieldName:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        operator:
          enum:
          - IN
          - NOT_IN
          - EQUALS
          - CONTAINS
          - BEGINS_WITH
          - ENDS_WITH
          - DOES_NOT_EQUAL
          - DOES_NOT_CONTAIN
          - LESS_THAN
          - GREATER_THAN
          - REGULAR_EXPRESSION
          - MATCH_REGEX
          - DOES_NOT_MATCH_REGEX
          - GREATER_THAN_OR_EQUAL_TO
          - LESS_THAN_OR_EQUAL_TO
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        values:
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    FilterRef:
      properties:
        category:
          enum:
          - PRIMITIVE
          - COMPOUND
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/FilterCondition'
          type: array
        filterType:
          enum:
          - EXCLUDE
          - INCLUDE
          type: string
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        id:
          description: The id of the filter
          type: string
        logicalOperator:
          enum:
          - AND
          - OR
          - NONE
          type: string
        name:
          type: string
        objectSubtype:
          enum:
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - VMDK
          - VHD
          - SAP_HANA_DATABASE
          - VMAX_STORAGE_GROUP
          - KUBERNETES
          - NAS_SHARE
          - MICROSOFT_EXCHANGE_DATABASE
          - CLOUD_NATIVE_ENTITY
          - POWERSTORE_BLOCK
          - CLOUD_DIRECTOR_VAPP
          type: string
        objectType:
          enum:
          - FILE_SYSTEM_FILE
          - ASSET
          - VM_DISK
          type: string
        priority:
          type: integer
        purpose:
          enum:
          - FILE_BACKUP_FILTER
          - ASSET_RULE
          - VM_DISK_BACKUP_FILTER
          - RESOURCE_GROUP_ASSIGNMENT
          - ASSET_SELECTION
          type: string
        templateName:
          type: string
      type: object
    Firewall:
      description: PowerProtect Data Manager embedded firewall
      properties:
        outbounds:
          items:
            $ref: '#/components/schemas/Outbound'
          type: array
      type: object
    FlrActivityResponses:
      properties:
        body:
          $ref: '#/components/schemas/ActivityBody'
        id:
          type: string
        status:
          type: integer
      title: FlrActivityResponses
      type: object
    FlrBody:
      properties:
        options:
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/FlrSource'
        strategy:
          $ref: '#/components/schemas/Strategy'
        target:
          $ref: '#/components/schemas/Target'
      title: FlrBody
      type: object
    FlrErrorMessage:
      properties:
        code:
          type: string
        reason:
          type: string
        remediation:
          type: string
        timestamp:
          type: string
      title: FlrErrorMessage
      type: object
    FlrRequests:
      properties:
        body:
          $ref: '#/components/schemas/FlrBody'
        id:
          type: string
      title: FlrRequests
      type: object
    FlrRestoreRequest:
      description: This model is the request body to create FLRSession
      properties:
        requests:
          items:
            $ref: '#/components/schemas/FlrRequests'
          type: array
      title: FlrRestoreRequest
      type: object
    FlrRestoreResponse:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/FlrActivityResponses'
          type: array
      title: FlrRestoreResponse
      type: object
    FlrSource:
      properties:
        copyNaturalId:
          type: string
        paths:
          items:
            $ref: '#/components/schemas/Paths'
          type: array
      title: FlrSource
      type: object
    ForgotPasswordRequest:
      description: Username.
      properties:
        username:
          description: The username.
          type: string
      required:
      - username
      type: object
    FormatParameters:
      properties:
        fitContent:
          description: Flag for fitting content to page.
          type: boolean
        formatType:
          description: 'The file type of the export. For example: CSV'
          enum:
          - CSV
          - PDF
          type: string
        pageOrientation:
          description: The page orientation.
          enum:
          - PORTRAIT
          - LANDSCAPE
          type: string
        pageSize:
          description: The page size.
          type: string
      type: object
    GenericODataBatchRequestRestModel:
      description: Generic data batch request rest model
      properties:
        requests:
          items:
            $ref: '#/components/schemas/ODataRequestRestModelMapStringObject'
          type: array
      title: GenericODataBatchRequestRestModel
      type: object
    HardwareInfo:
      description: External hardware information. Includes part name, type (Disk, IOModule, RAM, and so on), model, and revision (firmware version).  Also includes the chassis ID that contains the part and its position within the chassis.
      properties:
        chassisId:
          type: string
        chassisPosition:
          type: string
        partIdentifiers:
          items:
            $ref: '#/components/schemas/PartIdentifier'
          type: array
        partModel:
          type: string
        partName:
          type: string
        partRev:
          type: string
        partType:
          type: string
    HealthCategoryType:
      description: The health category
      enum:
      - CONFIGURATION
      - COMPONENTS
      - DATA_PROTECTION
      - CAPACITY
      - PERFORMANCE
      title: HealthCategoryType
      type: string
    HealthCheck:
      properties:
        activityId:
          type: string
        endTime:
          format: date-time
          type: string
        id:
          type: string
        results:
          items:
            $ref: '#/components/schemas/HealthCheckResult'
          type: array
        source:
          enum:
          - DEFAULT
          - PRE_UPGRADE
          - POST_UPGRADE
          - MONITOR
          type: string
        startTime:
          format: date-time
          type: string
        state:
          enum:
          - INIT
          - RUNNING
          - FAILED
          - COMPLETED
          type: string
      type: object
    HealthCheckEvent:
      properties:
        messageDetails:
          $ref: '#/components/schemas/MessageDetails'
        severity:
          enum:
          - INFO
          - WARNING
          - ERROR
          type: string
      type: object
    HealthCheckRequest:
      properties:
        enableActivity:
          type: boolean
        enableAlert:
          type: boolean
        requestedChecks:
          items:
            $ref: '#/components/schemas/RequestedCheck'
          type: array
        source:
          enum:
          - DEFAULT
          - PRE_UPGRADE
          - POST_UPGRADE
          - MONITOR
          type: string
      type: object
    HealthCheckResult:
      properties:
        events:
          items:
            $ref: '#/components/schemas/HealthCheckEvent'
          type: array
        state:
          enum:
          - PASSED
          - FAILED
          type: string
        type:
          $ref: '#/components/schemas/HealthCheckType'
      type: object
    HealthCheckType:
      properties:
        category:
          enum:
          - INFRASTRUCTURE
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    HealthCheckTypes:
      properties:
        healthCheckTypes:
          items:
            $ref: '#/components/schemas/HealthCheckType'
          type: array
      type: object
    HealthComponentType:
      description: The health component
      enum:
      - OVERALL_SYSTEM
      - DATA_MANAGER
      - OPERATING_ENVIRONMENT
      - PROTECTION_STORAGE
      title: HealthComponentType
      type: string
    HealthIssueSeverity:
      description: Represents health issue severity in the system
      enum:
      - LOW
      - MEDIUM
      - HIGH
      title: HealthIssueSeverity
      type: string
    HealthStatus:
      description: The health status
      enum:
      - GOOD
      - FAIR
      - POOR
      title: HealthStatus
      type: string
    Host:
      properties:
        addresses:
          $ref: '#/components/schemas/Addresses'
        cluster:
          $ref: '#/components/schemas/EmbeddedIdName'
        createdBy:
          $ref: '#/components/schemas/CreatedByTypeEnum'
        details:
          $ref: '#/components/schemas/HostDetails'
        hostname:
          description: Fully-qualified hostname
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: The ID of host.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        includedInDiscovery:
          description: Indicates whether the host is included in discovery.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceId:
          description: The inventory source ID of host.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscovered:
          description: The last discovery date for this host.
          type: string
        lastDiscoveryAt:
          description: The last discovery date for this host.
          format: date-time
          readOnly: true
          type: string
          x-ppdm-sort: true
        lastDiscoveryResult:
          $ref: '#/components/schemas/DiscoveryResult'
        lastDiscoveryStatus:
          description: The last discovery status for this host.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryTaskId:
          description: The task ID of the last discovery task for this host.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastUpdated:
          description: The date that the host was last updated.
          type: string
        name:
          description: The name of host.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          description: The status of host.
          enum:
          - AVAILABLE
          - DELETED
          - NOT_DETECTED
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        type:
          description: The type of host.
          enum:
          - PRIMARY
          - GROUP
          - APP_HOST
          - ESX_HOST
          - ESX_CLUSTER
          - UNKNOWN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    HostChangeStatus:
      properties:
        status:
          description: The target host status type. Currently only support DELETED.
          enum:
          - DELETED
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
    HostCredentials:
      properties:
        hostName:
          type: string
        userName:
          type: string
        userPassword:
          type: string
      required:
      - hostName
      - userName
      - userPassword
      type: object
    HostDetails:
      properties:
        appHost:
          $ref: '#/components/schemas/AppHost'
        esxCluster:
          $ref: '#/components/schemas/EsxCluster'
        esxHost:
          $ref: '#/components/schemas/EsxHost'
      type: object
    Hosts:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Host'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Id:
      description: The resource reference with ID.
      properties:
        id:
          description: The resource reference ID.
          type: string
      required:
      - id
      type: object
    IdLink:
      description: ID link wrapper.
      properties:
        id:
          type: string
        link:
          $ref: '#/components/schemas/Link'
      type: object
    IdentityAccessProvision:
      description: Identity Access Provision.
      properties:
        access:
          items:
            $ref: '#/components/schemas/IdentityAccessProvisionAccess'
          type: array
        availableSince:
          description: A moment in time when this provision had been created
          format: date-time
          type: string
        identityProvider:
          $ref: '#/components/schemas/IdentityAccessProvisionIdentityProvider'
        lastModified:
          description: A moment in time when this provision had been created or its access data modified
          format: date-time
          type: string
        locator:
          description: Access provision locator
          type: string
        subject:
          description: Provision subject, like a user account name, LDAP group name, etc.
          type: string
      required:
      - access
      - identityProvider
      - subject
      type: object
    IdentityAccessProvisionAccess:
      description: Identity Access Provision Access.
      properties:
        resourceGroup:
          $ref: '#/components/schemas/IdentityAccessProvisionAccessResourceGroup'
        role:
          $ref: '#/components/schemas/IdentityAccessProvisionAccessRole'
      type: object
    IdentityAccessProvisionAccessResourceGroup:
      description: Identity Access Provision Access Resource Group.
      properties:
        locator:
          description: Resource Group locator.
          type: string
        name:
          description: Resource Group name.
          type: string
      type: object
    IdentityAccessProvisionAccessRole:
      description: Identity Access Provision Access Role.
      properties:
        displayName:
          description: Role display name.
          type: string
        locator:
          description: Role locator.
          type: string
        name:
          description: Role name.
          type: string
      type: object
    IdentityAccessProvisionIdentityProvider:
      description: Identity Provider.
      properties:
        locator:
          type: string
        selector:
          description: Identity Provider service selector.
          type: string
        serviceMarker:
          description: Identity Provider service marker.
          type: string
      required:
      - locator
      type: object
    IdentityAccessProvisionPatch:
      description: Identity Access Provision (PATCH API call).
      properties:
        access:
          items:
            $ref: '#/components/schemas/IdentityAccessProvisionAccess'
          type: array
      required:
      - access
      type: object
    IdentityAccessProvisions:
      description: Response body of the list of Identity Access Provisions.
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentityAccessProvision'
          type: array
      type: object
    IdentityAccount:
      description: Identity Account.
      properties:
        emailAddress:
          description: Email address of the identity provider account.
          type: string
        firstName:
          description: First name of the identity provider account.
          type: string
        lastName:
          description: Last name of the identity provider account.
          type: string
        locator:
          description: Identity Account locator.
          type: string
        name:
          description: Account name
          type: string
      type: object
    IdentityAccounts:
      description: 'Identity Accounts '
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentityAccount'
          type: array
      type: object
    IdentityGroup:
      description: Identity Group
      properties:
        description:
          description: Group purpose description
          type: string
        name:
          description: Group Name
          type: string
      type: object
    IdentityGroups:
      description: Identity Groups
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentityGroup'
          type: array
      type: object
    IdentityMetric:
      description: Identity Metric
      properties:
        active:
          description: Number of active items (e.g., connected identity providers)
          type: integer
        locator:
          description: String of local-access-provisions, or remote-access-provisions, or identity-providers. Metric locator, one of the pre-defined values above
          type: string
        total:
          description: Metric locator, one of the pre-defined values above
          type: integer
      type: object
    IdentityMetrics:
      description: Identity Metrics
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentityMetric'
          type: array
      type: object
    IdentityProvider:
      description: Identity Provider
      properties:
        description:
          description: Description of the identity provider.
          type: string
        enabled:
          default: true
          type: boolean
        host:
          description: A host name or IP address of the referenced identity service
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: Identity Provider locator.
          type: string
        port:
          description: A port override if different from the default one for the referenced identity service
          type: integer
        selector:
          description: Identity provider selector, such as local for local identity provider, or a domain for LDAP identity provider, and so on.
          type: string
        serviceMarker:
          description: Identity provider service tag (local, ldap, active-directory, pam, etc.)
          enum:
          - local
          - ldap
          - active-directory
          type: string
      required:
      - host
      - port
      - selector
      type: object
    IdentityProviderAccountInfo:
      description: Identity Provider Sevice Account information.
      properties:
        name:
          description: Identity Provider service account username.
          type: string
        password:
          description: Identity Provider service account password.
          type: string
      required:
      - name
      - password
      type: object
    IdentityProviderConfig:
      description: Identity Provider Configuration.
      properties:
        groupMemberAttribute:
          description: Group member attribute.
          type: string
        groupSearchAttribute:
          description: Group search attribute.
          type: string
        groupSearchBase:
          description: Group search base.
          type: string
      type: object
    IdentityProviderLink:
      properties:
        alive:
          description: Connectivity liveliness indicator, false when the last check failed
          type: boolean
        checkEnabled:
          description: Check enablement indicator
          type: boolean
        checkInterval:
          description: Connectivity check interval in ISO-8601 duration format
          type: string
        lastAlive:
          description: A moment link was alive last time
          format: date-time
          type: string
        lastChecked:
          description: A moment connectivity was alive last time
          format: date-time
          type: string
        networkTimeoutSeconds:
          description: Timeout for a individual network request when operating on a link
          type: integer
        operationTimeoutSeconds:
          description: Time for the whole operation to complete (e.g., LDAP performing search)
          type: integer
      type: object
    IdentityProviders:
      description: Identity Providers
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentityProvider'
          type: array
      type: object
    IdentitySource:
      description: Identity source.
      properties:
        base:
          description: Identity source domain.
          type: string
        configPassword:
          description: Password of the identity source configUser.
          type: string
        configUser:
          description: Identity source user distinguished name with privileges to retrieve the groups and users.
          type: string
        createdDate:
          description: Date the identity source was created.
          format: date-time
          type: string
        description:
          description: Identity source description.
          type: string
        enabled:
          default: true
          description: Indicator whether the identity source service is enabled.
          type: boolean
        groupMemberAttribute:
          description: The identity source attribute defining which users belong to the group.
          type: string
        groupNameAttribute:
          description: The attribute distinguishing group names.
          type: string
        groupObjectTypeName:
          description: The identity source group object class.
          type: string
        groupSearchPath:
          description: 'The identity source group search path. '
          type: string
        id:
          description: Identity source ID.
          type: string
        port:
          description: Identity source port.
          type: string
        serverAddress:
          description: Identity source host name or IP address.
          type: string
        serverType:
          description: Identity source type. LDAP or AD.
          enum:
          - ldap
          - ad
          type: string
        userIdAttribute:
          description: The attribute distinguishing users.
          type: string
        userObjectTypeName:
          description: The identity source user object class.
          type: string
        userSearchPath:
          description: 'The identity source user search path. '
          type: string
      type: object
    IdentitySourceGroup:
      description: Identity source group names resource.
      properties:
        name:
          description: The name of the identity source group.
          type: string
      type: object
    IdentitySourceGroupUser:
      description: Identity source group usernames resource.
      properties:
        name:
          description: The usernames in the identity source group.
          type: string
      type: object
    IdentitySourceGroupUsers:
      description: Response body of the list of Identity Source group usernames.
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentitySourceGroupUser'
          type: array
      type: object
    IdentitySourceGroups:
      description: Response body of the list of Identity Source group names.
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentitySourceGroup'
          type: array
      type: object
    IdentitySourceGroupsMapping:
      description: Identity source groups.
      properties:
        groups:
          description: Identity source groups.
          items:
            type: string
          type: array
          uniqueItems: true
        identitySourceId:
          description: Identity source ID.
          type: string
      required:
      - groups
      type: object
    IdentitySources:
      description: Response body of the list of Identity Sources.
      properties:
        content:
          items:
            $ref: '#/components/schemas/IdentitySource'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    InfrastructureNode:
      properties:
        details:
          $ref: '#/components/schemas/InfrastructureNodeDetails'
        expandable:
          description: Indicate whether the node is expandable.
          type: boolean
        id:
          description: Node ID.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        name:
          description: The name of this node.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: false
        parents:
          description: parent nodes information.
          items:
            $ref: '#/components/schemas/ParentNode'
          type: array
        selectable:
          description: Indicate whether this node is selectable.
          type: boolean
        selectionStatus:
          description: Indicate whether this node is selected in Protection Policy or Resource Group.
          enum:
          - UNSELECTED
          - PARTIAL_SELECTED
          - SELECTED
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        type:
          description: Infrastructure node types for SQL, FS, VMware, and Protection Group
          enum:
          - ALWAYS_ON_AVAILABILITY_GROUPS
          - APPLICATION_HOST
          - APPLICATION_SYSTEM
          - ASSET
          - CLUSTER_SHARED_VOLUMES
          - CLUSTERCOMPUTERESOURCE
          - COMPUTERESOURCE
          - DATABASES
          - DATACENTER
          - DATASTORE
          - ESX_HOST
          - ESX_CLUSTER
          - PROTECTION_GROUP
          - VCENTER
          - VIRTUAL_APP
          - VIRTUAL_MACHINE
          - VM_FOLDER
          - VM_RESOURCEPOOL
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    InfrastructureNodeDetails:
      description: 'Details for infrastructure node, only support filtering on these following fields: name, details.asset.lastAvailableCopyTime, details.asset.protectionPolicy.id'
      properties:
        appServer:
          $ref: '#/components/schemas/AppServer'
        asset:
          $ref: '#/components/schemas/Asset'
        host:
          $ref: '#/components/schemas/Host'
        protectionGroup:
          $ref: '#/components/schemas/ProtectionGroup'
        vmEntity:
          $ref: '#/components/schemas/VmwareEntity'
      type: object
    InfrastructureNodes:
      properties:
        content:
          items:
            $ref: '#/components/schemas/InfrastructureNode'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    InventorySource:
      properties:
        _embedded:
          $ref: '#/components/schemas/InventorySourceEmbedded'
        address:
          description: IP address or hostname of the inventory source.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        credentials:
          $ref: '#/components/schemas/Id'
        details:
          $ref: '#/components/schemas/InventorySourceDetails'
        externalTenant:
          $ref: '#/components/schemas/InventorySourceExternalTenant'
        id:
          description: ID of the inventory source.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscovered:
          description: The last time the discovery was performed for the inventory source.
          format: date-time
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryResult:
          $ref: '#/components/schemas/DiscoveryResult'
        lastDiscoveryTaskId:
          description: The task ID of the inventory source when last discovered.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        local:
          description: 'Indicates whether the inventory source is integrated storage.

            Valid values are the following:

            - True (This is integrated storage)

            - False (Default is false)

            '
          type: boolean
        name:
          description: User-customized name for the inventory source.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        port:
          description: The port of the inventory source.
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        purpose:
          description: Indicates how the inventory source is used.
          enum:
          - NAS_SHARE
          - POWERSTORE_BLOCK
          - VAULT
          type: string
        type:
          description: Type of the inventory source.
          enum:
          - CLOUD_DIRECTOR
          - CLOUD_SNAPSHOT_MANAGER
          - CDR
          - DATA_MANAGER_APPLIANCE
          - DATA_MANAGER_VAULT
          - DATADOMAINMANAGEMENTCENTER
          - DDSYSTEM
          - DEFAULTAPPGROUP
          - EXTERNALDATADOMAIN
          - GENERICNASMANAGEMENTSERVER
          - KUBERNETES
          - ORACLEGROUP
          - POWERSCALEMANAGEMENTSERVER
          - POWERSTOREMANAGEMENTSERVER
          - PPDM
          - SMISPROVIDER
          - SQLGROUPS
          - UNITYMANAGEMENTSERVER
          - VCENTER
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        unsupportedFeatures:
          description: If set, indicates if there are any unsupported features.
          items:
            enum:
            - DISCOVERY
            - QUICK_RECOVERY
            type: string
          readOnly: true
          type: array
        vendor:
          $ref: '#/components/schemas/VendorEnum'
        version:
          description: Version of the inventory source.
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - name
      - type
      type: object
    InventorySourceCustomAppGroup:
      properties:
        defaultGroup:
          description: Identifies whether this group is the SQL server default group.
          type: boolean
        ipRules:
          $ref: '#/components/schemas/InventorySourceIpRules'
        oracle:
          $ref: '#/components/schemas/InventorySourceOracle'
        unapprovedHostCount:
          description: Number of hosts that are not approved by AppMgr whitelist.
          format: int32
          type: integer
      type: object
    InventorySourceCustomStorageGroup:
      properties:
        vcmAttributes:
          $ref: '#/components/schemas/InventorySourceVcmAttributes'
      type: object
    InventorySourceDataDomain:
      description: InventorySource Data Domain.
      properties:
        mtreeReplicationConnectHost:
          description: The mtree replication connect host address for mtree replication between the DM5500 and the Cyber Recovery Vault.
          type: string
      type: object
    InventorySourceDetails:
      properties:
        customAppGroup:
          $ref: '#/components/schemas/InventorySourceCustomAppGroup'
        customStorageGroup:
          $ref: '#/components/schemas/InventorySourceCustomStorageGroup'
        dataDomain:
          $ref: '#/components/schemas/InventorySourceDataDomain'
        k8s:
          $ref: '#'
        model:
          type: string
        nas:
          $ref: '#/components/schemas/InventorySourceNas'
        ppdm:
          $ref: '#/components/schemas/InventorySourcePpdm'
        vCenter:
          $ref: '#/components/schemas/InventorySourceVCenter'
      type: object
    InventorySourceEmbedded:
      properties:
        location:
          $ref: '#/components/schemas/EmbeddedIdName'
      readOnly: true
      type: object
    InventorySourceExternalTenant:
      description: InventorySource External Tenant.
      properties:
        id:
          description: Id of the external tenant
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the external tenant
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - id
      type: object
    InventorySourceIpRanges:
      properties:
        max:
          description: String representation of an IPv4 or IPv6 address. The inclusive maximum for this range definition.
          type: string
        min:
          description: String representation of an IPv4 or IPv6 address. The inclusive minimum for this range definition.
          type: string
      type: object
    InventorySourceIpRules:
      properties:
        ipList:
          description: Set of string representations of IPv4 or IPv6 addresses.
          items:
            type: string
          type: array
        ipRanges:
          description: Set of IP ranges, each defined by its minimum and maximum values.
          items:
            $ref: '#/components/schemas/InventorySourceIpRanges'
          type: array
        subnetworks:
          description: "\t\nSet of subnetworks, each defined by its IP address and mask."
          items:
            $ref: '#/components/schemas/InventorySourceSubnetworks'
          type: array
      type: object
    InventorySourceK8s:
      description: InventorySource K8s.
      properties:
        configurations:
          description: List of pod configurations or config map entries
          items:
            properties:
              key:
                type: string
              type:
                type: string
              value:
                type: string
            type: object
          type: array
        distributionType:
          description: Distribution type can be one of TANZU_GUEST_CLUSTER, VANILLA_ON_VSPHERE or NON_VSPHERE
          type: string
        vCenterId:
          type: string
      type: object
    InventorySourceNas:
      description: InventorySource Nas.
      properties:
        protocol:
          enum:
          - NFS
          - CIFS
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageApplianceName:
          description: Associated storage name
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    InventorySourceOracle:
      properties:
        rman:
          $ref: '#/components/schemas/Rman'
        tnsAlias:
          description: Transparent Network Substrate (TNS) alias is needed only for DB authentication and wallet.
          type: string
        tnsLocation:
          description: TNS location is needed only for DB authentication and wallet.
          type: string
      type: object
    InventorySourcePatchRequest:
      description: Partially update an inventory source.
      properties:
        details:
          $ref: '#/components/schemas/InventorySourcePatchRequestDetailsVCenter'
        id:
          type: string
      type: object
    InventorySourcePatchRequestDetailsVCenter:
      properties:
        vCenter:
          $ref: '#/components/schemas/InventorySourcePatchRequestDetailsVCenterDisableAutoSoftwarePackagesManage'
      type: object
    InventorySourcePatchRequestDetailsVCenterDisableAutoSoftwarePackagesManage:
      properties:
        disableAutoSoftwarePackagesManage:
          type: boolean
      type: object
    InventorySourcePpdm:
      properties:
        direction:
          description: The direction of replica meta-data synchronization.  Value is one of INCOMING, OUTGOING, BI_DIRECTIONAL
          enum:
          - INCOMING
          - OUTGOING
          - BI_DIRECTIONAL
          type: string
        enabled:
          default: true
          description: Allow synchronization of the PowerProtect Data Manager system.
          type: boolean
        systemId:
          description: The system ID of the PowerProtect Data Manager system.
          type: string
      type: object
    InventorySourceSubnetworks:
      properties:
        ipAddress:
          description: IP address of the inventory source.
          type: string
        netmask:
          $ref: '#/components/schemas/Netmask'
      type: object
    InventorySourceVCenter:
      properties:
        assetSource:
          description: 'Indicate whether the vCenter is an asset source.

            Valid values are the following:

            - True: The default value.

            - False: It indicates the vCenter is not an asset source.'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        cloudType:
          description: 'Indicate whether the vCenter is deployed in VMC. Valid values are the following:

            - VMC

            - NONE'
          enum:
          - NONE
          - VMC
          type: string
        disableAutoSoftwarePackagesManage:
          description: 'Determine whether the host configuration and upgrade process can automatically install the VIB on the ESXi hosts of this inventory source.

            Valid values are the following:

            - True: Disables automatic installation of the VIB on the ESXi hosts of this inventory source.

            - False: The default setting.'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        hosting:
          description: 'Indicate whether the vCenter is hosting the current PowerProtect Data Manager system.

            Valid values are the following:

            - True (The vCenter is hosting the current PowerProtect Data Manager system.)

            - False (It defaults to false.)'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        internal:
          description: 'Identify whether the inventory source is an internal vCenter.

            Valid values are the following:

            - True (This is an internal vCenter.)

            - False (It defaults to false.)'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        vSphereUiIntegration:
          description: Indicate whether to register a PowerProtect Data Manager vSphere extension, it is set to enabled by default, and should be presented to the user in the UI.
          type: boolean
      type: object
    InventorySourceVcmAttributes:
      properties:
        ddboostUserCredsId:
          description: ID of DD Boost user credential for VCM.
          type: string
        external:
          description: Default value is false for VMware vCenter Configuration Manager (VCM).
          type: boolean
      type: object
    InventorySources:
      properties:
        content:
          items:
            $ref: '#/components/schemas/InventorySource'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    InventorySourcesBatchPostRequest:
      description: Request payload for POST /api/v2/inventory-sources-batch
      properties:
        requests:
          items:
            $ref: '#/components/schemas/InventorySourcesBatchPostRequestRequests'
          type: array
      required:
      - requests
      title: InventorySourcesBatchPostRequest
      type: object
    InventorySourcesBatchPostRequestBody:
      properties:
        address:
          type: string
        credentials:
          $ref: '#/components/schemas/InventorySourcesBatchPostRequestBodyCredentials'
        details:
          $ref: '#/components/schemas/InventorySourcesBatchPostRequestBodyDetails'
        name:
          type: string
        port:
          type: integer
        type:
          enum:
          - GENERICNASMANAGEMENTSERVER
          - DATADOMAINMANAGEMENTCENTER
          - SMISPROVIDER
          - DDSYSTEM
          - SQLGROUPS
          - ORACLEGROUP
          - VCENTER
          - EXTERNALDATADOMAIN
          - CDR
          - KUBERNETES
          - POWERSTOREMANAGEMENTSERVER
          - POWERSCALEMANAGEMENTSERVER
          - PPDM
          - CLOUD_SNAPSHOT_MANAGER
          - CLOUD_DIRECTOR
          - DATA_MANAGER_APPLIANCE
          - DATA_MANAGER_VAULT
          - UNITYMANAGEMENTSERVER
          type: string
      required:
      - address
      - credentials
      - details
      - name
      - port
      - type
      type: object
    InventorySourcesBatchPostRequestBodyCredentials:
      properties:
        id:
          type: string
      type: object
    InventorySourcesBatchPostRequestBodyDetails:
      properties:
        nas:
          $ref: '#/components/schemas/InventorySourcesBatchPostRequestBodyDetailsNas'
      required:
      - nas
      type: object
    InventorySourcesBatchPostRequestBodyDetailsNas:
      properties:
        protocol:
          enum:
          - NFS
          - CIFS
          type: string
      required:
      - protocol
      type: object
    InventorySourcesBatchPostRequestRequests:
      properties:
        body:
          $ref: '#/components/schemas/InventorySourcesBatchPostRequestBody'
        id:
          type: string
      required:
      - body
      - id
      type: object
    JobRule:
      properties:
        field:
          type: string
        value:
          type: string
      title: JobRule
      type: object
    K8sCluster:
      properties:
        address:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    K8sClusters:
      description: List of kubernetes clusters in a PowerProtect Data Manager system.
      properties:
        content:
          items:
            $ref: '#/components/schemas/K8sCluster'
          type: array
      type: object
    KeyValuesPair:
      description: A pair of key and list of values.
      properties:
        key:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    LastOperation:
      properties:
        Detail:
          type: string
        Operation:
          enum:
          - configure
          - disable_application
          - enable_application
          - monitor
          - backup
          - restore
          - delete_backup
          - redeploy
          - telemetry
          - upgrade
          - version
          - setup_network
          type: string
        Status:
          enum:
          - Pending
          - Queued
          - Running
          - Success
          - Ready
          - Failure
          - Cancelled
          - Cancelling
          - Stopped
          - Stopping
          - StoppingFailed
          - Mounting
          - Mounted
          - Unmounting
          - Unmounted
          type: string
      type: object
    LdapDefaultConfig:
      description: LDAP default configuration.
      properties:
        directory:
          $ref: '#/components/schemas/LdapDefaultConfigDirectory'
        nonSecurePort:
          description: Default port number for non secure protocol.
          type: integer
        secure:
          description: Secure connection indicator.
          type: boolean
        securePort:
          description: Default port number for secure SSL protocol.
          type: integer
      type: object
    LdapDefaultConfigDirectory:
      description: Configuration parameters for directory service.
      properties:
        groupMemberAttribute:
          description: Group member attribute.
          type: string
        groupSearchAttribute:
          description: Group search attribute.
          type: string
        groupSearchBase:
          description: Group search base.
          type: string
      type: object
    LdapIdentityProvider:
      description: LDAP Identity Provider.
      properties:
        availableSince:
          description: Available Since Date.
          format: date-time
          type: string
        config:
          $ref: '#/components/schemas/IdentityProviderConfig'
        description:
          description: LDAP Identity Provider description.
          type: string
        enabled:
          default: true
          description: Indicator whether the LDAP identity provider service is enabled.
          type: boolean
        host:
          description: Host must not include protocol specification (ldap://, ldaps://, etc.)
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: LDAP Identity Provider locator.
          type: string
        port:
          description: Port number
          type: integer
        secure:
          description: Secure connection indicator, internally selects either ldap:// or ldaps://
          type: boolean
        selector:
          description: This parameter defines an LDAP domain in dot notation, e.g. new.exchdns.com instead of dc=new,dc=exchdns,dc=com as before.
          type: string
        serviceAccount:
          $ref: '#/components/schemas/IdentityProviderAccountInfo'
        serviceMarker:
          enum:
          - ldap
          - active-directory
          - local
          type: string
      required:
      - description
      - host
      - port
      - secure
      - selector
      type: object
    LdapIdentityProviderResponse:
      description: LDAP Identity Provider response.
      properties:
        availableSince:
          description: Available Since Date.
          format: date-time
          type: string
        config:
          $ref: '#/components/schemas/IdentityProviderConfig'
        description:
          description: Active Directory identity provider description
          type: string
        enabled:
          default: true
          description: Indicator whether the LDAP identity provider service is enabled.
          type: boolean
        host:
          description: Host must not include protocol specification (ldap://, ldaps://, etc.)
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: Active Directory Identity Provider locator.
          type: string
        port:
          description: Port number
          type: integer
        secure:
          description: Secure connection indicator, internally selects either ldap:// or ldaps://
          type: boolean
        selector:
          description: This parameter defines an LDAP domain in dot notation, e.g. new.exchdns.com instead of dc=new,dc=exchdns,dc=com as before.
          type: string
        serviceAccount:
          $ref: '#/components/schemas/IdentityProviderAccountInfo'
        serviceMarker:
          description: Identity Provider service marker.
          enum:
          - local
          - ldap
          - active-directory
          type: string
      required:
      - availableSince
      - description
      - host
      - locator
      - secure
      - selector
      - serviceMarker
      type: object
    LdapIdentityProviders:
      description: LDAP Identity Providers.
      properties:
        content:
          items:
            $ref: '#/components/schemas/LdapIdentityProviderResponse'
          type: array
      type: object
    License:
      description: License
      properties:
        activationDate:
          type: string
        daysLeftForExpiry:
          format: int32
          type: integer
        id:
          type: string
        key:
          type: string
        licenseKeys:
          items:
            $ref: '#/components/schemas/LicenseKey'
          type: array
        status:
          enum:
          - VALID
          - INVALID
          type: string
        swid:
          type: string
        type:
          enum:
          - TRIAL
          - EMERGENCY
          - CAPACITY
          - SOCKET
          - APPLIANCE
          type: string
      type: object
    LicenseKey:
      description: License Key
      properties:
        endDate:
          type: string
        featureCode:
          type: string
        featureName:
          type: string
        frontendCapacityInTB:
          format: double
          type: number
        gracePeriod:
          type: string
        licenseType:
          type: string
        numberOfSockets:
          type: integer
        plc:
          type: string
        productLine:
          type: string
        startDate:
          type: string
        uomCode:
          type: string
        uomName:
          type: string
      type: object
    Licenses:
      description: Get Licenses.
      properties:
        content:
          items:
            $ref: '#/components/schemas/License'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Link:
      description: The reference link
      properties:
        href:
          description: The href attribute of link.
          type: string
        rel:
          description: The rel attribute of link.
          type: string
      type: object
    LocalIdentityAccount:
      description: Local Identity Provider Account.
      properties:
        availableSince:
          description: A moment in time this account had been created
          format: date-time
          type: string
        emailAddress:
          description: Email address of the identity provider account.
          type: string
        firstName:
          description: First name of the identity provider account.
          type: string
        lastName:
          description: Last name of the identity provider account.
          type: string
        locator:
          description: Identity Account locator.
          type: string
        name:
          description: Account name
          type: string
      type: object
    LocalIdentityAccounts:
      description: Local Identity Provider Accounts.
      properties:
        content:
          items:
            $ref: '#/components/schemas/LocalIdentityAccount'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    LocalIdentityAuthEntries:
      description: Local Identity Auth Entries
      properties:
        content:
          items:
            $ref: '#/components/schemas/LocalIdentityAuthEntry'
          type: array
      type: object
    LocalIdentityAuthEntry:
      description: Local Identity Auth Entry
      properties:
        accountLocator:
          description: Account locator
          type: string
        accountName:
          description: Account name
          type: string
        accountPassword:
          description: Account password
          type: string
        availableSince:
          description: Date time when the auth entry was created.
          format: date-time
          type: string
        forceChange:
          default: true
          description: Force password change on the next login
          type: boolean
        lastModified:
          description: Date time when the auth entry was last modified.
          format: date-time
          type: string
        locator:
          description: Authentication Entry locator.
          type: string
      type: object
    LocalIdentityProvider:
      description: Local Identity Provider.
      properties:
        description:
          description: Description of the identity provider.
          type: string
        enabled:
          default: true
          description: Indicator whether the local identity provider service is enabled.
          type: boolean
        host:
          description: A host name or IP address of the referenced identity service
          type: string
        link:
          $ref: '#/components/schemas/IdentityProviderLink'
        locator:
          description: Identity Provider locator.
          type: string
        port:
          description: A port override if different from the default one for the referenced identity service
          type: integer
        selector:
          description: Identity provider selector, such as local for local identity provider, or a domain for LDAP identity provider, and so on.
          type: string
        serviceMarker:
          description: Identity provider service tag (local, ldap, active-directory, pam, etc.)
          enum:
          - local
          - ldap
          - active-directory
          type: string
        totalAccounts:
          description: Number of Local Identity Provider accounts.
          type: integer
      required:
      - host
      - selector
      type: object
    LocalIdentityProviders:
      description: Local Identity Providers
      items:
        $ref: '#/components/schemas/LocalIdentityProvider'
      type: array
    Location:
      description: Location
      properties:
        id:
          description: The ID of the location.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lat:
          description: The latitude of the location.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lon:
          description: The longitude of the location.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of the location.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    Locations:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Location'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Lockbox:
      description: enter description here
      properties:
        lastUpdatedTime:
          type: string
        name:
          type: string
        newPassphrase:
          type: string
        passphrase:
          type: string
      type: object
    LogBundle:
      description: A log bundle resource contains the information necessary to request, monitor, and access a completed log bundle.  A user provides the bundle start date and time and a formula. The server attempts to generate that log bundle by populating the other fields as information is available.
      properties:
        bundleStartDate:
          description: 'An ISO8601 date (specified in server time) of the start date of logging data to be included in the log bundle.  Bundle start date is the most recent date to be provided in the log bundle.  The date is inclusive of every hour of that day. For example, a date of 2015-05-11 is interpreted as 2015-05-11T23:59:59.999.

            NOTE: The date is assumed to be in the server timezone.'
          type: string
        filename:
          description: The filename of the bundle. Only populated if the bundle is COMPLETE.
          type: string
        generationEndDateTime:
          description: An ISO8601 date and time with timezone (specified in server time) of the date that the log bundle was cancelled, failed, or completed.
          format: date-time
          type: string
        generationStartDateTime:
          description: An ISO8601 date and time with timezone that specifies when the job started according to the server time.
          format: date-time
          type: string
        id:
          description: The unique ID of the log bundle resource.
          type: string
        logBundleFiles:
          description: Contains a link that provides access to download the physical log bundle file. The file is not transferred over the message bus. Only populated if the bundle is COMPLETE.
          items:
            $ref: '#/components/schemas/LogBundleFile'
          type: array
        logBundleFormula:
          $ref: '#/components/schemas/LogBundleFormula'
        percentComplete:
          description: If the log bundle is BUILDING, this value is a number from 0-100 representing the percentage of completion of the building log bundle. If the log bundle is FAILED, CANCELLED, COMPLETE, or DELETING, this value is 100.
          format: int32
          type: integer
        platform:
          description: The bundle creation request for the specified platform type. Supported values include 'STANDALONE', 'INTEGRATED_APPLIANCE', and 'SOFTWARE_INTEGRATED'.
          enum:
          - STANDALONE
          - INTEGRATED_APPLIANCE
          - SOFTWARE_INTEGRATED
          type: string
        sizeOnDiskInBytes:
          description: The size of the log bundle in bytes. Only populated if the bundle is COMPLETE.
          format: int64
          type: integer
        sourceSystems:
          description: Specifies source systems ('DATA_MANAGER', 'INTEGRATED_STORAGE', 'V_PROXY', 'CLOUD_DR_SERVER', 'REPORTING_SERVICE') of logs to be included in the log bundle.
          items:
            type: string
          type: array
        status:
          description: 'One of: [BUILDING, FAILED, CANCELLED, COMPLETED, DELETING]


            Allowed states by operation include the following.

            POST: No status allowed. If provided, it is ignored.

            PUT: CANCELLED is allowed to cancel the job. Any other entry is ignored.

            DELETE: DELETE does not accept a body. DELETE uses the REST verb and not a PUT status update.

            '
          type: string
      required:
      - bundleStartDate
      - logBundleFormula
      type: object
    LogBundleCreateResponse:
      description: Log Bundle Create Async Response
      properties:
        id:
          type: string
      type: object
    LogBundleDeleteResponse:
      description: Log Bundle Delete Response.
      properties:
        id:
          type: string
      type: object
    LogBundleFile:
      description: Log bundle file.
      properties:
        fileName:
          type: string
        sourceSystems:
          items:
            type: string
          type: array
        url:
          type: string
      type: object
    LogBundleFormula:
      description: 'A log bundle formula describes the contents of a log bundle including a set of

        log categories, log sources, and a duration.  If there are duplicate log sources in the log categories or log sources that are provided, only one copy of that log source is provided in the resulting log bundle.'
      properties:
        createdDate:
          description: An ISO8601 with timezone formatted date (in server time) specifying the date and time that this formula was created.
          type: string
        description:
          description: A description of the contents of the formula.
          type: string
        duration:
          description: 'An ISO8601 duration (no date or times) to collect for the log bundle. It starts from the log bundle start date and extends backwards in time (into history).  For version 1, only day durations are allowed. The only allowable format is P[n]D, where [n] is the number of days of logs.  A duration of 1 day (P1D) is equivalent to requesting 24 hours. Based on the description of bundleStartDate, a duration of P1D with a start date of 2015-05-11 is interpreted as follows: 2015-05-11T23:59:59.999-00:00 to 2015-05-10T23:59:59.999-00:00'
          type: string
        id:
          description: The unique ID of the formula.
          type: string
        includeAllLogCategories:
          description: If set to true, this formula includes available log categories at the time that it is used to generate a log bundle.  If set to false, or unspecified, this formula includes only the log categories included in the log category list (which may be all current log categories). If includeAllLogCategories is set to true and the logCategoryList is populated, this value takes precedence.  In this case, all log categories are included and the logCategoryList is ignored.
          type: boolean
        includeAllLogSources:
          description: If set to true, this formula includes all available log sources at the time that it is used to generate a log bundle.  If set to false, or unspecified, this formula includes only the log sources that are included in the log source list (which may be all current log sources).  If includeAllLogSources is set to true and the logSourceList is populated, this value takes precedence.  In this case, all log sources are included and the log source list is ignored.
          type: boolean
        logCategoryList:
          description: An array of log categories that this formula contains. An empty array or null indicates none.
          items:
            $ref: '#/components/schemas/IdLink'
          type: array
        logSourceList:
          description: An array of log sources that this formula contains. An empty array or null indicates none.
          items:
            $ref: '#/components/schemas/IdLink'
          type: array
        name:
          description: A short name of the formula.
          type: string
      type: object
    LogBundleRange:
      description: Start date and end date are in RFC3339 format.
      properties:
        EndDate:
          type: string
        StartDate:
          type: string
      type: object
    LogBundles:
      description: 'Log Bundles. '
      properties:
        content:
          items:
            $ref: '#/components/schemas/LogBundle'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    LogDiskInfo:
      description: Represents the current disk information for the partition on which logs and log bundles reside.  This information can be used together with a log bundle estimate to determine if a desired log bundle has enough room to be fully created.
      properties:
        availableDiskSpaceBytes:
          description: The available/unused disk space (in bytes) of the partition on which log files and bundles reside.
          format: int64
          type: integer
        totalDiskSpaceBytes:
          description: The total disk space (in bytes) of the partition on which log files and bundles reside.
          format: int64
          type: integer
      required:
      - availableDiskSpaceBytes
      - totalDiskSpaceBytes
      type: object
    LogDiskInfos:
      description: Log Sources.
      properties:
        content:
          items:
            $ref: '#/components/schemas/LogDiskInfo'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    LogExport:
      properties:
        id:
          type: string
        lastModifyTime:
          description: An ISO8601 date and time with timezone (specified in server time) of the date that the log bundle was cancelled, failed, or completed.
          format: date-time
          type: string
        logExportTargetActivityId:
          type: string
        progress:
          type: number
        status:
          enum:
          - NONE
          - COLLECTING
          - COLLECTED
          type: string
      title: LogExport
      type: object
    LogExportRequest:
      properties:
        endTime:
          type: string
        filterType:
          enum:
          - ACTIVITY_ID
          - TRACING_CONTEXT
          type: string
        filterValue:
          type: string
        startTime:
          type: string
      required:
      - filterType
      - filterValue
      title: LogExportRequest
      type: object
    LogExports:
      properties:
        content:
          items:
            $ref: '#/components/schemas/LogExport'
          type: array
        page:
          $ref: '#/components/schemas/LogBundleFile'
      title: LogExports
      type: object
    Logging:
      description: enter description here
      properties:
        configurable:
          type: boolean
        logLocation:
          type: string
      type: object
    LoginCredentials:
      description: User login credentials.
      properties:
        password:
          description: The password to log in.
          type: string
        rsa:
          $ref: '#/components/schemas/Rsa'
        username:
          description: The username to log in.
          type: string
      required:
      - password
      - username
      type: object
    ManageMountedCopyResponse:
      properties:
        taskId:
          description: ID of a PowerProtect Data Manager task. This is the ID sub-field of the task link that is also contained in this object.
          type: string
      type: object
    MarkHostAsDeletedResponse:
      description: The response for marking an host such as data base related host or file system host as "DELETED" status.
      properties:
        activityId:
          description: The ID of the activity.
          type: string
      type: object
    MessageBulk:
      description: Represents a request to acknowledge alerts.
      properties:
        acknowledgement:
          $ref: '#/components/schemas/AlertAcknowledgement'
        acknowledgementCount:
          description: Number of alerts that were successfully updated with acknowledgment.
          format: int32
          type: integer
        acknowledgementReceivedCount:
          description: The number of alerts accepted from request.
          format: int32
          type: integer
        bulkResults:
          items:
            $ref: '#/components/schemas/MessageBulkResult'
          type: array
        messageIds:
          description: List of alert IDs to acknowledge.
          items:
            type: string
          type: array
      required:
      - acknowledgement
      - messageIds
      type: object
    MessageBulkResult:
      description: The response object from bulk operations.
      properties:
        acknowledgement:
          $ref: '#/components/schemas/AlertAcknowledgement'
        errorResponseObject:
          $ref: '#/components/schemas/ErrorResponseObject'
        id:
          description: Message ID for failed update.
          type: string
      type: object
    MessageDetails:
      description: This page contains details for validation message.
      properties:
        message:
          description: Message text.
          type: string
        messageArgs:
          description: Message components.
          items:
            type: string
          type: array
        messageID:
          description: ID of the message.
          type: string
        reason:
          description: Message reason.
          type: string
        remediation:
          description: Message remediation, if available.
          type: string
      required:
      - message
      - reason
      title: MessageDetails
      type: object
    MessageFilter:
      description: 'Message filter, which specifies the minimum severity and facility for a syslog configuration.

        '
      properties:
        facility:
          description: Available facilities.
          type: string
        minSeverity:
          description: Available minimum serverities.
          enum:
          - EMERGENCY
          - ALERT
          - CRITICAL
          - ERROR
          - WARNING
          - NOTICE
          - INFORMATIONAL
          - DEBUG
      required:
      - facility
      - minSeverity
      type: object
    MessageSource:
      description: The PowerProtect Data Manager from which the alert message is initiated.
      properties:
        description:
          description: Origin resource description
          type: string
        id:
          description: Origin resource id
          type: string
        type:
          description: Originating source type
          enum:
          - DATA_MANAGER
          - OPERATING_ENVIRONMENT
          - PROTECTION_STORAGE
          type: string
      required:
      - type
      type: object
    MountParams:
      description: This object contains the parameters used to mount the source disk data associated with a copy (specified by copyId) to the target VM (specified by targetVmAssetId).
      properties:
        copyId:
          description: The PowerProtect Data Manager copy id containing the source disk data to be mounted to the target vm.
          type: string
        elevateUser:
          description: 'If true, perform restore or browse using elevated (administrator) authority.


            The user must have appropriate authority in the guest VM OS by e.g. being a member of the Administrators group (Windows) or being allowed to run vflrbrowse via sudo without prompting for a password.'
          type: boolean
        noMount:
          description: When true the actual mount operation is not performed. This setting is used as a mechanism to validate the credentials provded in targetUser and targetPassword, and to support Browsing of the target directories on the VM. (e.g. when performing batch operations) without incurring the costs of performing a mount.
          type: boolean
        removeAgent:
          default: false
          description: This flag controls whether the FLR agent (installed on the target VM as part of the FLR process) is removed when the FLR session is deleted. If the flag is true then the agent is uninstalled otherwise it is not.
          type: boolean
        targetPassword:
          description: Password of the user that will own the recovered files.
          type: string
        targetUser:
          description: Name of the user that will own the recovered files. If the user name is not specified, PowerProtect Data Manager will look for a credential attched to the target VM. If that credential does not exists then PowerProtect Data Manager will look for a credential associated with the PLC that copy was created.
          type: string
        targetVmAssetId:
          description: The VM asset id corresponding to the target VM that will be used to mount the source disk data.
          type: string
        timeout:
          default: 300
          description: Timeout, in seconds, of the mount operation.
          format: int32
          type: integer
      required:
      - copyId
      - targetVmAssetId
      type: object
    MountResponse:
      description: This object is returned from several FLR APIs. It contains the ID of the FLR session and a reference to a task of the PowerProtect Data Manager.
      properties:
        flrSessionId:
          description: The ID of the FLR session.
          type: string
        taskId:
          description: The ID of the task used to track the status of the called API that returned this response object.
          type: string
      type: object
    MssqlAppServerAttribute:
      deprecated: true
      properties:
        aagGuid:
          type: string
        availabilityGroup:
          type: string
        clusterName:
          type: string
        fciGuid:
          type: string
        lastTransactionTimestamp:
          format: date-time
          type: string
        localAppServerName:
          type: string
        networkName:
          type: string
      type: object
    NameValuePairInteger:
      description: Name value pair. The value type is integer.
      properties:
        name:
          description: Name of the value.
          type: string
        value:
          description: Value of the name. Type of integer.
          format: int32
          type: integer
      type: object
    NameValuePairString:
      description: Name value pair. The value type is string.
      properties:
        name:
          description: Name of the value.
          type: string
        value:
          description: Value of the name. Type of string.
          type: string
      type: object
    NasCredential:
      description: Credential Model
      properties:
        password:
          type: string
        username:
          type: string
      title: NasCredential
      type: object
    NasSessionRef:
      description: Info about all available nas sessions.
      properties:
        CapacityUnits:
          format: int32
          type: integer
      type: object
    Netmask:
      properties:
        notation:
          description: 'Captures the netmask for this subnetwork in this format.

            One of:

            - CIDR

            - DECIMAL

            - BINARY'
          enum:
          - CIDR
          - DECIMAL
          - BINARY
          type: string
        value:
          description: The value of the netmask in the representation as specified by the type.
          type: string
      type: object
    Network:
      description: Virtual Network Configurations
      properties:
        gateway:
          description: Optional gateway, not supported in 19.5
          type: string
        id:
          description: 'Optimus: would be acm network id

            Miles: would generate an ID

            For default VLAN, the id would be 0, Miles and Optimus'
          type: string
        ipAddressFamily:
          default: IPv4
          description: The VLAN IP address type. It must be one of these values [IPv4, IPv6, Dual].
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
        ips:
          description: IP address or IP range of addresses. Each IP address or IP address range is one item. This object must be empty in the IPv6 VLAN.
          items:
            minLength: 1
            type: string
          type: array
        ipv6s:
          description: IPv6 address or IP range of addresses. Each IPv6 address or IPv6 address range is one item. This object must be empty in the IPv4 VLAN.
          items:
            type: string
          type: array
        mtu:
          description: MTU (maximum transmission unit) for the virtual network.
          maximum: 9000
          minimum: 1500
          type: integer
        name:
          description: Name of the virtual network. Cannot be changed if already used by an asset. For default VLAN, the name is "Default Network."
          type: string
        netmask:
          description: Subnet mask for the virtual network. This object must be empty in the IPv6 VLAN.
          type: string
        prefix:
          description: Subnet prefix for the virtual network. This object must be empty in the IPv4 VLAN.
          type: string
        purposes:
          description: The purpose of the VLAN. It must be combined with "MANAGEMENT_DATA", "MANAGEMENT" or "DATA".
          items:
            type: string
          type: array
        routes:
          description: 'Optionally add a route. PowerProtect Data Manager servers may not need connect to all VLANs (for example, some DD VLANs), but you can configure connectable gateways in PowerProtect Data Manager existing VLANs.

            Route configuration may be useful for an external route, for example, to cloud.

            For Optimus, ACM don''t store route, so can''t pass in routes when invoke PUT.

            '
          items:
            $ref: '#/components/schemas/NetworkRoutes'
          type: array
        status:
          default: init
          description: 'Output only, indicating request result.

            **init:** Inititalized, not yet saved to system

            **synced:** Fully synchronized to system

            **changed:** Changed but not fully synchronized to system

            **failed:** Save VLAN failed.

            '
          enum:
          - init
          - synced
          - failed
          - changing
          - deleting
          type: string
        tags:
          description: The tags for the virtual network.
          items:
            type: string
          type: array
        type:
          default: any
          description: This field is obsolete in 19.10 and later releases and is set to null.
          enum:
          - any
          - data
          - management
          type: string
        usages:
          description: 'Don''t needed when create network.

            Only can input for usage update API.'
          items:
            $ref: '#/components/schemas/NetworkUsages'
          type: array
        vlanId:
          description: ID of the VLAN. Value is read-only after setting it. For default VLAN, the ID is 0. For other VLANs, values range from 1 to 4094.
          maximum: 4094
          minimum: 0
          type: integer
        vmNetworkName:
          default: DPG_VM_PUBLIC_DATA_NETWORK
          description: 'For Optimus only.


            For Miles, host specific, refer to usage''s same field

            '
          type: string
      required:
      - mtu
      - name
      - vlanId
      - ipAddressFamily
      - purposes
      type: object
    NetworkInterfaceReplacement:
      properties:
        newAddress:
          type: string
        oldAddress:
          type: string
      type: object
    NetworkInterfaceStorageUnit:
      properties:
        ipAddress:
          type: string
        networkId:
          type: string
        networkName:
          type: string
      title: NetworkInterfaceStorageUnit
      type: object
    NetworkMoref:
      properties:
        moref:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    NetworkPurpose:
      description: Indicates the purpose of a network.
      enum:
      - MANAGEMENT
      - DATA
      - MANAGEMENT_DATA
      title: NetworkPurpose
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    NetworkRequirement:
      description: Required IP count per component type.
      properties:
        networks:
          items:
            $ref: '#/components/schemas/NetworkRequirementNetwork'
          type: array
      type: object
    NetworkRequirementNetwork:
      description: Network Requirement Network
      properties:
        id:
          type: string
        ipAddressFamily:
          default: IPv4
          description: The VLAN IP address type. It must be one of these values [IPv4, IPv6, Dual].
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
        servers:
          items:
            $ref: '#/components/schemas/NetworkRequirementServer'
          type: array
      type: object
    NetworkRequirementServer:
      description: Network Requirement Server
      properties:
        ipCount:
          minimum: 0
          type: integer
        ipv6Count:
          description: The number of IPv6 addresses required for a given server type (serverType). For example, if you have three SEARCH servers, at least three IPv6 addresses are required. You can provide three single IPv6 addresses such as ["1111::11, 1111::12, 1111::13"], or one IPv6 address range such as ["1111::11-1111::13].
          type: integer
        type:
          enum:
          - DATA_MANAGER
          - SEARCH
          - V_PROXY
          type: string
      type: object
    NetworkRoutes:
      properties:
        destination:
          description: 'Route target IP range or hostname.

            If type is host, enter IP address or FQDN.

            If type is subnet, then use only IP address.'
          type: string
        gateway:
          description: 'Gateway IP or proxy server.

            Optional.

            '
          type: string
        netmask:
          description: Netmask applied to source IP address, whether need support short format. Optional, only for subnet type.
          type: string
        prefix:
          description: Prefix applied to source IPv6 address. Optional, and only for subnet type.
          type: string
        type:
          default: subnet
          description: '**subnet:** Subnet. Requires netmask.

            **host:** Single IP address or FQDN. Does not require netmask.

            '
          enum:
          - subnet
          - host
          type: string
      type: object
    NetworkSettings:
      properties:
        networkKey:
          type: integer
        networkLabel:
          type: string
        networkMoref:
          type: string
        reconnectNic:
          type: boolean
      type: object
    NetworkUsages:
      properties:
        device:
          description: The device that host used to create alias/virtual interface
          type: string
        inUse:
          default: false
          description: Indicate whether IP is in use by the specific server. Changed by status and user input.
          type: boolean
        ip:
          description: Real used IP by host from specified ips
          type: string
        ipv6:
          description: The IPv6 address that is used by the host.
          type: string
        ipv6InUse:
          description: Indicate whether IPv6 is in use by the specific server. Changed by status and user input.
          type: boolean
        lastUpdateAt:
          description: usage update time.
          type: string
        networkInterface:
          description: Network interface that the host created to acquire IP for
          type: string
        networkMoref:
          description: Interface moref of the network.
          type: string
        portGroupType:
          description: Port group type of the network.
          enum:
          - VGT
          - VST
          type: string
        purposeMismatch:
          description: Indicate whether the server mismatches the purpose of the VLAN.
          type: boolean
        referenceId:
          description: 'Based on server type, store corresponding id

            For PowerProtect Data Manager, vProxy and search, would be node id.

            For VSO related servers, would be empty for first release.'
          type: string
        serverType:
          description: Node type
          enum:
          - DATA_MANAGER
          - V_PROXY
          - SEARCH
          type: string
        status:
          description: 'init: specified but not allied yet

            failed: acquire ip failed, maybe because ip conflict

            synced: successfully applied about network and route

            released: can be reuse by other server, and can be deleted from usage

            changed: some changes stored to DB but not apply to server yet'
          enum:
          - init
          - failed
          - released
          - synced
          - deleting
          - changing
          - abandoned
          type: string
        vmNetworkName:
          description: 'Miles only.

            VM''s network card''s network name, for additional VLAN, should be the one tag as 4095 in vSphere'
          type: string
      type: object
    Networks:
      description: Get all VLAN networks response model, not the original Network model.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Network'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    NfsExport:
      description: NFS export details response.
      properties:
        activeNfsv3Clients:
          description: Number of active NFSv3 clients that are registered for the NFS export.
          type: integer
        activeNfsv4Clients:
          description: Number of active NFSv4 clients that are registered for the NFS export.
          type: integer
        clients:
          description: List of clients that are registered for the NFS export.
          items:
            $ref: '#/components/schemas/Client'
          type: array
        exportId:
          description: Export ID of the NFS export configuration that is retrieved from the storage system where the NFS export is stored.
          type: string
        mtreeName:
          description: Name of the mtree for which the NFS export is configured.
          type: string
        nfsv3Mounts:
          description: Number of NFSv3 mounts that are active on the NFS export.
          type: integer
        numberOfClients:
          description: Number of clients that are registered for the NFS export.
          type: integer
        path:
          description: Path of the asset for which the NFS export is configured.
          type: string
        storageArrayId:
          description: Storage array ID of the storage system where the NFS export is configured.
          type: string
      title: NfsExport
      type: object
    NfsExports:
      description: NFS exports list response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/NfsExport'
          type: array
      title: NfsExports
      type: object
    Node:
      description: enter description here
      properties:
        components:
          items:
            $ref: '#/components/schemas/SubComponent'
          type: array
        id:
          type: string
        lastNodeStatusUpdated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        lastUpdatedBy:
          type: string
        powerProtectModel:
          type: string
        powerProtectVersion:
          type: string
        restrictions:
          items:
            $ref: '#/components/schemas/Restrictions'
          type: array
        status:
          enum:
          - INITIALIZING
          - SHUTDOWN
          - PENDING
          - CONFIGURING
          - FAILED
          - RESTORE
          - RESTORE_INIT
          - RESTORE_READY
          - RESTORE_RUNNING
          - RESTORE_COMPLETED
          - RESTORE_FAILED
          - OPERATIONAL
          - OPERATIONAL_INIT
          - OPERATIONAL_RUNNING
          - PARTIALLY_OPERATIONAL
          - MAINTENANCE
          - MAINTENANCE_INIT
          - MAINTENANCE_READY
          - MAINTENANCE_RUNNING
          - MAINTENANCE_FAILED
          - QUIESCE
          - QUIESCE_INIT
          - QUIESCE_READY
          - QUIESCE_RUNNING
          - QUIESCE_FAILED
          - LOCKDOWN
          type: string
        statusDescription:
          type: string
        systemId:
          type: string
        uptimeInDays:
          type: string
        version:
          type: string
      required:
      - id
      - status
      type: object
    NodeCredentials:
      description: Credentials node.
      properties:
        id:
          description: Credentials ID.
          type: string
      required:
      - id
      type: object
    NodeSummary:
      description: Summary of node status.
      properties:
        hostname:
          description: Node FQDN or IP address.
          type: string
        id:
          description: Node ID.
          type: string
        status:
          description: Node status.
          type: string
      type: object
    Nodes:
      description: Get all nodes.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Node'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ODataRequestRestModelMapStringObject:
      description: Data request rest model Map(String, Object)
      properties:
        body:
          properties:
            enabled:
              type: boolean
            id:
              type: string
          type: object
        id:
          type: string
      title: ODataRequestRestModelMapStringObject
      type: object
    ObjectiveValue:
      properties:
        copyType:
          enum:
          - ALL
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          type: string
        name:
          enum:
          - INTERVAL
          - START_TIME
          - DURATION
          - VERIFY_DELETED
          - RETENTION_TIME
          - RETENTION_LOCK
          - ALLOW_IN_CLOUD
          - LOCATION_OPTION
          - LOCATIONS
          - BACKUP
          - REPLICA
          - CLOUD_TIER
          - CLOUD_DR
          type: string
        typedValues:
          items:
            $ref: '#/components/schemas/TypedValue'
          type: array
        valueCardinality:
          enum:
          - SINGLE
          - FLAT_LIST
          - TYPED_LIST
          type: string
      type: object
    Options:
      properties:
        minimumProxyVersion:
          type: string
        quiesceWaitTime:
          format: int32
          type: integer
      type: object
    OracleAppServerAttribute:
      deprecated: true
      properties:
        dbDomain:
          type: string
        dbId:
          type: string
        dbUniqueName:
          type: string
        lastJobId:
          format: int64
          type: integer
        lastJobStartTime:
          format: date-time
          type: string
        sid:
          type: string
      type: object
    OracleControlSpFileInfo:
      properties:
        files:
          items:
            properties:
              relativePath:
                type: string
            type: object
          type: array
        oracleControlSpFileInfo:
          properties:
            controlSpFileInfo:
              properties:
                autoBackupPath:
                  type: string
                controlFilePath:
                  type: string
                spFilePath:
                  type: string
              type: object
            hasControlFile:
              type: boolean
            hasSPFile:
              type: boolean
          type: object
      title: OracleControlSpFileInfo
      type: object
    OracleDBProperties:
      properties:
        rmanProperties:
          $ref: '#/components/schemas/RmanProperties'
        tnsAdmin:
          type: string
        tnsName:
          type: string
      type: object
    OracleRestoredOptionsControlSpFileInfo:
      properties:
        controlSpFileInfo:
          description: The relative path of spfile, control file, and autobackup file pieces. This property includes a flag that indicates whether the control file and spfile are present.
          properties:
            autoBackupPath:
              description: The relative path of the autobackup piece. This property can assume an empty value.
              type: string
            controlFilePath:
              description: The relative path of the control file piece. This property can assume an empty value.
              type: string
            spFilePath:
              description: The relative path of the spfile piece. This property can assume an empty value.
              type: string
          type: object
        files:
          items:
            type: string
          type: array
        hasControlFile:
          description: Boolean to indicate whether controlfile is part of the copy.
          type: boolean
        hasSpFile:
          description: Boolean to indicate whether spfile is part of the copy.
          type: boolean
      type: object
    OsUser:
      description: PowerProtect Data Manager Os User Rest Model.
      properties:
        description:
          type: string
        expirationDays:
          format: int32
          minimum: -1
          type: integer
        newPassword:
          type: string
        numberOfDaysToExpire:
          format: int32
          type: integer
        password:
          type: string
        remainingExpirationDays:
          format: int32
          type: integer
        userName:
          type: string
      required:
      - userName
      type: object
    Outbound:
      description: User can add or delete multiple outbounds, whenever they need access external server, they can add outbound first.
      properties:
        destination:
          type: string
        port:
          type: string
        rule:
          enum:
          - ACCEPT
          - DROP
          type: string
        usedBy:
          type: string
      required:
      - destination
      - port
      - usedBy
      type: object
    Owner:
      description: The owner of the activity.
      properties:
        name:
          description: Name of the owner.
          type: string
        ownerResource:
          $ref: '#/components/schemas/OwnerResource'
      type: object
    OwnerResource:
      description: Information about owner.
      properties:
        id:
          description: Id of the owner resource.
          type: string
        resourceType:
          description: Type of the owner resource.
          type: string
      type: object
    PPDMEULA:
      description: PowerProtect Data Manager EULA Rest Model.
      properties:
        accepted:
          type: boolean
        acceptedTime:
          type: string
        link:
          type: string
      type: object
    PageInfo:
      description: The page information that is usually used to describe the content of an API response, including page number, page size, total elements count, and total page count.
      properties:
        maxPageableElements:
          description: The max number of pageable elements.
          type: integer
        number:
          description: The page number.
          type: integer
        queryState:
          description: The query token. Only used for serial query. Under Tasks, see *Page the result*.
          type: string
        size:
          description: The number of elements on each page.
          type: integer
        totalElements:
          description: The total number of elements across all pages.
          type: integer
        totalPages:
          description: The total number of pages.
          type: integer
      type: object
    ParentNode:
      properties:
        id:
          description: parent node id.
          type: string
        name:
          description: parent node name.
          type: string
      type: object
    ParentProtectionPolicy:
      properties:
        backupMechanism:
          description: The backup mechanism that the protection policy is configured to perform.
          enum:
          - SBT
          - OIM
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupRank:
          description: The priority order (with 1 being highest) in which to attempt to create a backup for an ORACLE_DATA_GUARD protection group using the BACKUP_BY_RANK backup strategy.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionEngine:
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        type:
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      title: ParentProtectionPolicy
      type: object
    PartIdentifier:
      description: Identifiers that exist for the part.
      properties:
        partIdType:
          type: string
        partValue:
          type: string
    Partition:
      description: enter description here
      properties:
        availableSize:
          description: The available size of this partition. The availableSize in 64 bits.
          format: int64
          type: integer
        fileSystem:
          type: string
        mount:
          type: string
        name:
          type: string
        totalSize:
          description: The total size of this partition. The totalSize in 64 bits.
          format: int64
          type: integer
      type: object
    PatchAssetDatabase:
      properties:
        nfsShare:
          $ref: '#/components/schemas/PatchAssetDetailsDatabaseNfsShare'
        relativeNFSDirectory:
          description: Folder path relative to the top level path where the NFS export is mounted.
          type: string
        relativeWorkingDirectory:
          description: Folder path relative to the top level path where temporary files are stored.
          type: string
      type: object
    PatchAssetDetailsDatabaseNfsShare:
      properties:
        name:
          description: Name of the NFS share.
          type: string
        version:
          description: NFS version.
          type: string
      required:
      - name
      - version
      type: object
    PatchAssetRequest:
      properties:
        backupBranch:
          description: A sequence number which when changed causes the promoteToFull field to be set to true.
          format: int64
          type: integer
        backupDetails:
          items:
            $ref: '#/components/schemas/AssetBackupDetails'
          type: array
        credentials:
          description: Credentials of Asset.
          items:
            $ref: '#/components/schemas/PatchAssetRequestCredentials'
          type: array
        details:
          properties:
            database:
              $ref: '#/components/schemas/PatchAssetDatabase'
            k8s:
              $ref: '#/components/schemas/PatchAssetRequestKubernetesAttribute'
            vm:
              $ref: '#/components/schemas/PatchAssetRequestVmAttribute'
          type: object
        extendedData:
          $ref: '#/components/schemas/AssetExtendedData'
        id:
          type: string
        preferredHostRef:
          $ref: '#/components/schemas/AssetPreferredHostRef'
        promoteToFull:
          description: If true, then the next time this asset is protected it must be with a full backup.
          type: boolean
        protectionGroupRef:
          description: Protection group to which the asset is assigned.
          properties:
            id:
              description: ID of the protection group.
              type: string
            memberRole:
              description: The role that this asset plays in the protection group.
              enum:
              - GENERIC
              - LOGICAL_STANDBY
              - PHYSICAL_STANDBY
              - PRIMARY
              - SNAPSHOT_STANDBY
              type: string
          type: object
        protectionPolicy:
          $ref: '#/components/schemas/PatchAssetRequestProtectionPolicy'
        protectionProtocol:
          description: The protection protocol supported by the asset.
          enum:
          - BOOSTFS
          - NFS
          type: string
      type: object
    PatchAssetRequestCredentials:
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ConnectionTypeEnum'
      type: object
    PatchAssetRequestExcludeDisksDetailsVmDisks:
      properties:
        excluded:
          type: boolean
        key:
          type: integer
        name:
          type: string
      type: object
    PatchAssetRequestKubernetesAttribute:
      description: The Kubernetes details for an asset.
      properties:
        persistentVolumeClaim:
          $ref: '#/components/schemas/PatchAssetRequestPersistentVolumeClaim'
      type: object
    PatchAssetRequestPersistentVolumeClaim:
      description: Persistent volume claim (PVC) properties of the Kubernetes asset (for PVC only).
      properties:
        excluded:
          description: Excluded from its parent namespace
          type: boolean
      type: object
    PatchAssetRequestProtectionPolicy:
      properties:
        backupRank:
          description: The priority order (with 1 being highest) in which to attempt to create a backup for an ORACLE_DATA_GUARD protection group using the BACKUP_BY_RANK backup strategy.
          format: int32
          type: integer
        id:
          type: string
      title: PatchAssetRequestProtectionPolicy
      type: object
    PatchAssetRequestVmAttribute:
      properties:
        dataMoverType:
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
        disableCbt:
          type: boolean
        disableQuiescing:
          type: boolean
        disks:
          items:
            $ref: '#/components/schemas/PatchAssetRequestExcludeDisksDetailsVmDisks'
          type: array
      type: object
    Paths:
      description: ''
      properties:
        path:
          description: Path constructed using diskName, assetId, copyStartDate
          minLength: 1
          type: string
        pathHash:
          description: Asset_id acts as pathHash
          minLength: 1
          type: string
        sliceSsid:
          description: 'DiskName '
          minLength: 1
          type: string
        type:
          description: '"type" value has to be set as FILE/FOLDER accordingly.'
          enum:
          - FILE
          - FOLDER
          minLength: 1
          type: string
      title: Paths
      type: object
    PersistentVolumeClaims:
      description: PersistentVolumeClaims is used in CopyK8s for K8S copy details.
      properties:
        appConsistentType:
          description: Type of Application Consistent Backup per PCS for PVC if present.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataMover:
          description: 'The type of dataMover used (either for FCD or non FCD based backups) (Per PVC).

            The dataMover will help identify if the backup copy chosen for restore is a FCD backup. Expected values for dataMover as of today is "VDDK" or "FSAGENT". "VDDK" as data mover indicates that PVC that was backed up is backed by a first class disk.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        excluded:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        size:
          type: number
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageClass:
          description: 'Storage Class of the PVC that was backed up. (Per PVC).

            storageClass can be used by UI to show the original storage class of the PVC and help choose another storage class in the alternate cluster.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        uid:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      title: PersistentVolumeClaims
      type: object
    Plugin:
      properties:
        arch:
          enum:
          - AMD64
          - X86
          type: string
        binaryPath:
          type: string
        createdAt:
          format: date-time
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/PluginEndpoint'
          type: array
          uniqueItems: true
        id:
          type: string
        name:
          type: string
        os:
          enum:
          - WINDOWS
          - LINUX
          type: string
        tenantId:
          type: string
        updatedAt:
          format: date-time
          type: string
        version:
          type: string
      type: object
    PluginEndpoint:
      properties:
        method:
          enum:
          - GET
          - HEAD
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          - TRACE
          type: string
        path:
          type: string
      type: object
    PostCertificateChainRequest:
      description: The POST request body for adding a certificate into the truststore by using a certificate chain.
      properties:
        certificateChain:
          description: The certificate chain.
          type: string
        fingerprint:
          description: Fingerprint of the certificate.
          type: string
        host:
          description: The certificate host.
          type: string
        id:
          description: Certificate ID.
          type: string
        issuerName:
          description: Issuer name of the certificate.
          type: string
        notValidAfter:
          description: Not valid after timestamp (ISO 8601 format).
          format: date-time
          type: string
        notValidBefore:
          description: Not valid before timestamp (ISO 8601 format).
          format: date-time
          type: string
        port:
          description: The certificate port.
          type: string
        state:
          description: Certificate state.
          enum:
          - ACCEPTED
          - REJECTED
          - UNKNOWN
          - EXPIRED
          - MISMATCHED
          - MALFORMED
          - PREAUTHORIZED
          type: string
        subjectName:
          description: Subject name of the certificate.
          type: string
        type:
          description: The certificate type, either ROOT or HOST.
          enum:
          - ROOT
          - HOST
          - INTERMEDIATE
          type: string
        verify:
          description: To verify that the server's host certificate is signed by the root certificate of the certificate chain, set this value to true. The default value is false.
          type: boolean
      required:
      - host
      - port
      title: PostCertificateChainRequest
      type: object
    PostNfsExportDeletionRequest:
      description: Post NFS Export deletion request body.
      properties:
        path:
          description: 'Path of the asset from where the NFS export configuration needs to be deleted. An example of an asset path: SU/TLP/relativeNfsExportPath.'
          type: string
      required:
      - path
      title: PostNfsExportDeletionRequest
      type: object
    PostNfsExportRequest:
      description: Post NFS Export request body.
      properties:
        clients:
          description: List of client addresses for which the NFS export is configured. The client must be a valid IP address, hostname, or netgroup IP.
          items:
            type: string
          type: array
        path:
          description: 'Path of the asset for which the NFS export is configured. An example of an asset path: SU/TLP/relativeNfsExportPath.'
          type: string
      required:
      - path
      - clients
      title: PostNfsExportRequest
      type: object
    PostReportResponse:
      properties:
        id:
          description: Run ID of the report.
          type: string
      type: object
    PostResetLockboxRequest:
      description: POST reset lockbox request body.
      properties:
        newPassphrase:
          description: The new lockbox passphrase.
          type: string
        passphrase:
          description: The current lockbox passphrase.
          type: string
      required:
      - passphrase
      title: PostResetLockboxRequest
      type: object
    PostResetLockboxResponse:
      description: POST reset lockbox response.
      title: PostResetLockboxResponse
      type: string
    PostSyncInstanceResponse:
      description: Post Sync Instance Response
      properties:
        activityId:
          type: string
        cutoffTime:
          description: The end window time for query the metadata.
          type: string
        directions:
          items:
            $ref: '#/components/schemas/SyncInstanceDirection'
          type: array
        id:
          type: string
        level:
          description: Level of synchronization.
          enum:
          - FULL
          - INCREMENTAL
          type: string
        owner:
          $ref: '#/components/schemas/SystemId'
        resilienceScaned:
          type: boolean
        since:
          description: The start window time for query the metadata.
          type: string
        storageContextPairs:
          items:
            $ref: '#/components/schemas/StorageContextPairs'
          type: array
        type:
          description: Type of synchronization.
          enum:
          - REPLICA
          - PROTECTION
          type: string
      type: object
    PreCheckMessage:
      properties:
        errorResponse:
          $ref: '#/components/schemas/ComponentErrorResponse'
        severity:
          enum:
          - INFORMATIONAL
          - WARNING
          - CRITICAL
          type: string
        shortName:
          type: string
      type: object
    PreUpgradeHealthCheck:
      description: This page contains PUHC(Pre-Upgrade Health Check) details.
      properties:
        endTime:
          description: End time of pre-upgrade health check.
          format: date-time
          type: string
        initiated:
          description: The way pre-upgrade health check was initiated.
          enum:
          - UPGRADE
          - STANDALONE
          - DOWNLOAD
          type: string
        startTime:
          description: Start time of pre-upgrade health check.
          format: date-time
          type: string
      title: PreUpgradeHealthCheck
      type: object
    PreferredAddress:
      description: Preferred address contains the enum (IPV4/IPV6/FQDN/WWPN) and string value
      properties:
        type:
          $ref: '#/components/schemas/PreferredAddressType'
        value:
          type: string
      title: Preferred Address
      type: object
    PreferredAddressType:
      enum:
      - IPV4
      - IPV6
      - FQDN
      - WWPN
      title: PreferredAddressType
      type: string
    PreferredInterface:
      properties:
        networkAddress:
          type: string
        networkLabel:
          type: string
        networkName:
          type: string
        purposes:
          items:
            $ref: '#/components/schemas/NetworkPurpose'
          type: array
        readiness:
          $ref: '#/components/schemas/Readiness'
        scope:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        speed:
          format: double
          type: number
        tags:
          description: The tags for the virtual network.
          items:
            type: string
          type: array
      type: object
    Privilege:
      description: Privilege.
      properties:
        category:
          description: Category.
          type: string
        description:
          description: Description.
          type: string
        name:
          description: Name.
          type: string
      type: object
    ProtectionDetail:
      description: 'Response from activity details API : GET /api/v2/protectionDetails'
      properties:
        assetHistoryId:
          description: The asset associated with the protection.
          type: string
        assetId:
          type: string
        backupLevel:
          description: To indicate the backup type, adhoc or scheduled.
          type: string
        bytesTransferred:
          description: Transfer rate value.
          format: int32
          type: number
        completionStatus:
          description: The result status when the protection activity completed.
          enum:
          - FAILED
          - SUCCESS
          type: string
        completionTime:
          description: When the protection activity was completed.
          format: date-time
          type: string
        copyId:
          description: A unique copy ID. Only DD copies are supported.
          type: string
        createdAt:
          description: When this protection detail was created.
          format: date-time
          type: string
        dataTargetId:
          description: The data target associated with the protection.
          type: string
        error:
          $ref: '#/components/schemas/ProtectionDetailError'
        id:
          description: The unique ID of this protection detail.
          type: string
        initiatedType:
          description: To indicate the backup type, adhoc or scheduled.
          type: string
        nextScheduledTime:
          description: The next scheduled time for protection details
          format: date-time
          type: string
        plcId:
          description: The protection policy that is associated with the protection.
          type: string
        protectionPolicyId:
          description: The protection policy that is associated with the protection.
          type: string
        replicatedCopyId:
          description: A unique replicated copy ID.
          type: string
        replicatedDataTargetId:
          description: The replicated data target associated with the protection.
          type: string
        stageId:
          description: The stage associated with the protection.
          type: string
        startTime:
          description: When the protection activity was started.
          format: date-time
          type: string
        transferDuration:
          description: Transfer rate value.
          format: int32
          type: number
        type:
          description: The type of protection activity that was performed.
          enum:
          - PROTECT
          - REPLICATE
          - CLOUD_TIER
          - PROMOTE
          - CLOUD_PROTECT
          type: string
      type: object
    ProtectionDetailError:
      description: The information for error of protection details.
      properties:
        code:
          description: The error code for protection details.
          type: string
        extendedReason:
          description: The extended reason for protection details.
          type: string
        reason:
          description: The error reason for protection details.
          type: string
        remediation:
          description: The remediation message for protection details.
          type: string
      type: object
    ProtectionDetails:
      description: Get all protection details in the PowerProtect Data Manager system.
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProtectionDetail'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionEngine:
      description: Protection engine information.
      properties:
        _embedded:
          $ref: '#/components/schemas/EngineEmbedded'
        credentials:
          $ref: '#/components/schemas/EngineCredential'
        detail:
          $ref: '#/components/schemas/EngineDetail'
        id:
          description: ID.
          type: string
        ipAddress:
          description: IP address of the protection engine (VPE or vRPA cluster).
          type: string
        name:
          description: Name to associate with the protection engine (for example, the vRPA cluster name).
          type: string
        registeredAt:
          description: When the cluster was registered to the PowerProtect Data Manager.
          format: date-time
          type: string
        status:
          description: Status of the protection engine.
          type: string
        type:
          description: Engine type (vRPA or VPE).
          enum:
          - VPE
          type: string
      required:
      - credentials
      - detail
      - ipAddress
      - name
      - status
      - type
      type: object
    ProtectionEngineManagement:
      description: Perform engine management requests.
      properties:
        engineId:
          description: protection engine id
          type: string
        engineType:
          description: Protection engine type (VPE or vRPA).
          enum:
          - VPE
          type: string
        jobId:
          description: Job ID for the operation.
          type: string
        operation:
          description: Management request operation.
          enum:
          - START_PROXIES
          - STOP_PROXIES
          type: string
        options:
          $ref: '#/components/schemas/Options'
      required:
      - engineId
      - engineType
      - operation
      type: object
    ProtectionEngines:
      description: Get Protection Engine Resource.
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProtectionEngine'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionGroup:
      description: A resource used to apply a special set of behaviors to a collection of assets when a protection policy is executed against those assets, other than the usual behavior where the protection of each asset is treated independently of all the others in the policy.
      properties:
        autoAssignToPolicy:
          description: If this is true, member assets will be automatically assigned to the protection policy specified by the protectionPolicyRef property.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupStrategy:
          description: Backup strategy of the protection group.
          enum:
          - BACKUP_ALL
          - BACKUP_BY_RANK
          - BACKUP_PRIMARY_ONLY
          - BACKUP_STANDALONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createdAt:
          description: When the protection group was created.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: Detailed description of the protection group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: ID of the protection group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastAvailableCopyTime:
          description: Time of most recently created copy as derived from the protection group's member assets.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryStatus:
          description: The last discovery status of the protection group as derived from the protection group's member assets.
          enum:
          - NEW
          - DETECTED
          - NOT_DETECTED
          - DELETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        memberAssetType:
          description: Asset type of the protection group's member assets.
          enum:
          - ORACLE_DATABASE
          - POWERSTORE_BLOCK
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the protection group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        naturalIds:
          description: The natural ids of the protection group. Used to determine which assets should belong to this protection group.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        operatingSystems:
          description: An array of strings containing the union of all the values in the member assets’ operatingSystem.name field.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionPolicyRef:
          description: The protection policy to which auto policy assignment will be applied if the autoAssignToPolicy property is true.
          properties:
            backupMechanism:
              description: The backup mechanism that the protection policy is configured to perform.
              enum:
              - SBT
              - OIM
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            id:
              description: ID of the protection policy.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            name:
              description: Name of the protection policy.
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
          type: object
        protectionStatus:
          description: Protection status of the protection group depending on the backup strategy and whether it is assigned to a protection policy.
          enum:
          - PROTECTED
          - UNPROTECTED
          - EXCLUDED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        supportedProtectionProtocols:
          description: The intersection of the supportedProectionProtocols field on an application server that is associated with an asset, which is a member of the protection group.
          items:
            enum:
            - DDBOOST
            - BOOSTFS
            type: string
          type: array
          x-ppdm-filter: false
          x-ppdm-sort: false
        type:
          description: Type of the protection group.
          enum:
          - ORACLE_DATA_GUARD
          - STORAGE_DIRECT_APPLICATION
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        updatedAt:
          description: When the protection group was last updated.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionGroups:
      description: Get all protection groups in the PowerProtect Data Manager system.
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProtectionGroup'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionPolicies:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProtectionPolicy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionPoliciesBatchRequest:
      description: Array of protection policy request.
      properties:
        body:
          $ref: '#/components/schemas/ProtectionPoliciesBatchRequestBody'
        id:
          description: Request id.
          type: string
      required:
      - body
      - id
      type: object
    ProtectionPoliciesBatchRequestBody:
      description: Request body content.
      properties:
        enabled:
          description: 'Indicates whether the protection policy is enabled or disabled.

            - false means to set the protection policy to be disabled state.

            - true means to set the protection policy to be enabled state.'
          type: boolean
        id:
          description: ID of the protection policy.
          type: string
      required:
      - id
      type: object
    ProtectionPoliciesBatchRequests:
      description: Protection policies batch request body.
      properties:
        requests:
          items:
            $ref: '#/components/schemas/ProtectionPoliciesBatchRequest'
          type: array
      type: object
    ProtectionPolicy:
      description: The model representing the protection policy.
      properties:
        assetType:
          description: The type of an asset
          enum:
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - NAS_SHARE
          - POWERSTORE_BLOCK
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        category:
          description: 'The protection policy category. Valid values are the following:

            - CENTRALIZED_PROTECTION

            - EXCLUSION

            - SELF_SERVICE_PROTECTION'
          enum:
          - CENTRALIZED_PROTECTION
          - EXCLUSION
          - SELF_SERVICE_PROTECTION
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        complianceInterval:
          description: Compliance interval. For example, "PT6H" for 6 hours.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        createdAt:
          description: When the protection policy was created.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        credentials:
          $ref: '#/components/schemas/ProtectionPolicyCredential'
        dataConsistency:
          description: 'Data consistency selection on the protection policy. Valid values are the following:

            - CRASH_CONSISTENT

            - APPLICATION_CONSISTENT'
          enum:
          - CRASH_CONSISTENT
          - APPLICATION_CONSISTENT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: An optional description for the protection policy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        details:
          $ref: '#/components/schemas/ProtectionPolicyDetails'
        enabled:
          description: Indicates whether the protection policy is enabled or disabled.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        encrypted:
          description: VMware backup encryption setting.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        filterIds:
          description: IDs of exclusion filters that are associated with the protection policy.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        forceFull:
          description: Deprecated.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: ID of the protection policy. This should not be passed for a POST request, but should be passed for a PUT request.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: User customized name for the protection policy.
          maxLength: 150
          minLength: 1
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        passive:
          description: Indicates whether the protection policy is passive or not.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        priority:
          description: Priority of the protection policy.
          exclusiveMinimum: false
          format: int32
          minimum: 1
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        slaId:
          description: ID of associated service level agreement.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stages:
          items:
            $ref: '#/components/schemas/ProtectionPolicyStage'
          type: array
        summary:
          $ref: '#/components/schemas/ProtectionPolicySummary'
        targetStorageProvisionStrategy:
          description: 'To indicate if this protection policy is greenfield or brownfield, possible values:

            - USE_CONFIGURED  - Means mark as brownfield.

            - AUTO_PROVISION  - Means mark as greenfield. (default value)'
          enum:
          - AUTO_PROVISION
          - USE_CONFIGURED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: 'The protection policy type. Valid values are the following:

            - ACTIVE

            - EXCLUDED'
          enum:
          - ACTIVE
          - EXCLUDED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        updatedAt:
          description: When the protection policy was updated.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - assetType
      - enabled
      - encrypted
      - name
      - priority
      - type
      type: object
    ProtectionPolicyAdhocProtectionRequest:
      description: Manual protection at the protection policy level.
      properties:
        assetIds:
          description: 'The list of asset IDs for manual backup.

            If the asset ID list is not empty, the listed assets for manual backup come from the same protection policy (the one that is specified).

            If the asset list is null or empty, the manual backup occurs for all assets in the specified protection policy.'
          items:
            type: string
          type: array
        protectionGroupIds:
          description: The list of protection group IDs for manual backup.
          items:
            type: string
          type: array
        stages:
          items:
            $ref: '#/components/schemas/AdhocProtectionStage'
          type: array
      type: object
    ProtectionPolicyAdhocProtectionResponse:
      description: Response of policy-based manual protection (backup, replication).
      properties:
        results:
          items:
            $ref: '#/components/schemas/AdhocProtectionResult'
          type: array
      type: object
    ProtectionPolicyAssetAssignments:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Asset'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionPolicyBackupRequest:
      description: Manual backup at protection policy level.
      properties:
        assetIds:
          description: 'The list of asset Ids for manual backup.

            If the asset Id list is not empty, all those asset should come from the same specified protection policy.

            If the asset list is null or empty, it means manual backup should be triggered for all assets under the specified protection policy.'
          items:
            type: string
          type: array
        backupType:
          description: 'Backup type, the value could be one of below.

            - FULL

            - GEN0

            - DIFFERENTIAL

            - LOG

            - INCREMENTAL

            - CUMULATIVE

            - SYNTHETIC_FULL

            - AUTO_FULL


            **Note:**

            - Each asset type has its supported backup types, the provided backup type should match those supported backup types.'
          enum:
          - FULL
          - GEN0
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          - SYNTHETIC_FULL
          - AUTO_FULL
          type: string
        disableProtectionPolicyProcessing:
          default: false
          description: 'Boolean flag indicate whether copies created by manual backup should be processed by stages (e.g. promotion, replication, cloudtier, etc.) configured in the corresponding protection policy, for now the value is always false.

            '
          type: boolean
        retention:
          $ref: '#/components/schemas/ProtectionPolicyStageRetentionTime'
      type: object
    ProtectionPolicyCredential:
      description: Protection policy credential information.
      properties:
        id:
          description: ID of the Protection policy credential.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        type:
          description: Connection type.
          enum:
          - OS
          - VCENTER
          - DBUSER
          - DB_WALLET
          - RMAN
          - RMAN_WALLET
          - DB
          - SAPHANA_DB_USER
          - SAPHANA_SYSTEMDB_USER
          - NAS
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    ProtectionPolicyDetails:
      description: Protection policy details information.
      properties:
        oracle:
          $ref: '#/components/schemas/ProtectionPolicyOracle'
        vm:
          $ref: '#/components/schemas/ProtectionPolicyVm'
      type: object
    ProtectionPolicyOracle:
      description: Oracle related information on protection policy.
      properties:
        dbConnection:
          $ref: '#/components/schemas/DbConnection'
        rmanConnection:
          $ref: '#/components/schemas/ConnectionInfo'
      type: object
    ProtectionPolicySetting:
      description: The common setting that the protection policy supports.
      properties:
        id:
          default: PROTECTION_POLICY_SETTING
          minLength: 1
          readOnly: true
          type: string
        properties:
          items:
            properties:
              name:
                default: disabledScheduledOperationsWhenPolicyDisabled
                description: The setting controls which jobs continue to run when a protection policy is disabled. Disabling a protection policy just stops the primary backup schedules, but other protection jobs will continue to run. You can change this default behavior. For example, to stop replication and cloud tier jobs from running while a protection policy is disabled, add REPLICATION and CLOUD_TIER to the PROTECTION_POLICY_SETTING. PROMOTION controls extended retention jobs. MANAGE is for compliance verification jobs. Add or remove these values, as needed.
                minLength: 1
                readOnly: true
                type: string
              type:
                default: LIST
                minLength: 1
                readOnly: true
                type: string
              value:
                default: PROTECTION
                enum:
                - PROTECTION
                - REPLICATION
                - PROMOTION
                - CLOUD_TIER
                - MANAGE
                minLength: 1
                type: string
            type: object
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    ProtectionPolicyStage:
      description: Protection policy stages information.
      properties:
        attributes:
          $ref: '#/components/schemas/ProtectionPolicyStageAttributes'
        extendedRetentions:
          $ref: '#/components/schemas/ProtectionPolicyStageExtendedRetentions'
        id:
          description: ID of stage in protection policy. This should be a UUID format string and unique in one policy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        operations:
          items:
            $ref: '#/components/schemas/ProtectionPolicyStageOperation'
          type: array
          uniqueItems: true
        options:
          $ref: '#/components/schemas/ProtectionPolicyStageOptions'
        passive:
          deprecated: true
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        retention:
          $ref: '#/components/schemas/ProtectionPolicyStageRetention'
        slaId:
          description: ID of associated service level agreement.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        sourceStageId:
          description: Id of Source Stage. This is required if the type is PROMOTION, REPLICATION, CLOUD_TIER, CDR, SNAPSHOT, VAULT. It should be pointed to the source stage's ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        target:
          $ref: '#/components/schemas/ProtectionPolicyStageTarget'
        type:
          description: 'Type of stage. Valid values are the following:

            - PRIMARY

            - PROTECTION

            - PROMOTION

            - REPLICATION

            - CLOUD_TIER

            - CDR

            - SNAPSHOT

            - VAULT'
          enum:
          - PRIMARY
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - CLOUD_TIER
          - CDR
          - SNAPSHOT
          - VAULT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - id
      - passive
      - type
      type: object
    ProtectionPolicyStageAttributes:
      description: Protection policy stage attributes.
      properties:
        cloudTier:
          $ref: '#/components/schemas/ProtectionPolicyStageCloudTier'
        exchange:
          $ref: '#/components/schemas/ProtectionPolicyStageExchange'
        fileSystem:
          $ref: '#/components/schemas/ProtectionPolicyStageFileSystem'
        mssql:
          $ref: '#/components/schemas/ProtectionPolicyStageMssql'
        oracle:
          $ref: '#/components/schemas/ProtectionPolicyStageOracle'
        powerStoreBlock:
          $ref: '#/components/schemas/ProtectionPolicyStagePowerStoreBlock'
        protection:
          $ref: '#/components/schemas/ProtectionPolicyStageProtection'
        sapHana:
          $ref: '#/components/schemas/ProtectionPolicyStageSapHana'
        vm:
          $ref: '#/components/schemas/ProtectionPolicyStageVm'
        vmax:
          $ref: '#/components/schemas/ProtectionPolicyStageVmax'
      type: object
    ProtectionPolicyStageCloudTier:
      description: Cloud tier confiuration for the stage.
      properties:
        cloudUnit:
          $ref: '#/components/schemas/ProtectionPolicyStageCloudUnit'
        tierAfter:
          $ref: '#/components/schemas/ProtectionPolicyStageCloudTierAfter'
      type: object
    ProtectionPolicyStageCloudTierAfter:
      description: Time configuration when the cloud tier happens for the stage.
      properties:
        interval:
          description: Time inverval used with unit.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        unit:
          description: 'Time unit. Valid values are the following:

            - YEAR

            - MONTH

            - WEEK

            - DAY'
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageCloudUnit:
      description: Cloud unit where the tier location is for cloud tier.
      properties:
        id:
          description: Cloud unit ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Cloud unit name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageExchange:
      description: Exchange configuration for the stage.
      properties:
        consistencyCheck:
          description: 'The Exchange consistency check for the database and transaction log files. Default is NONE. Supported enum:

            - NONE

            - ALL

            - LOGS_ONLY

            - DATABASE_ONLY'
          enum:
          - NONE
          - ALL
          - LOGS_ONLY
          - DATABASE_ONLY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        troubleShootingOption:
          description: 'The troubleshooting option that is associated with this Exchange stage. For example: debugEnabled=true.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageExtendedRetentionItem:
      description: It is used to set a retention for a specified backup type.
      properties:
        retention:
          $ref: '#/components/schemas/ProtectionPolicyStageRetention'
        selector:
          description: The backup type that the retention is set for. The operation ID (OperationId) has a higher priority than the backup type (backupType) when both of them are used to indicate one specified backup type.
          properties:
            backupTimePattern:
              description: Only valid for self-service protection policy. This property is used to match the copy creation time.
              properties:
                dayOfMonth:
                  description: Day of the month (1-31). If the day of the month less than the value, will use the last day of the month. For example, if dayOfMonth is 31, for April, it will be 30th, and for Febrary, it will be 29th for leap year, and 28th for non-leap year.
                  exclusiveMaximum: false
                  maximum: 31
                  minimum: 1
                  type: integer
                frequency:
                  enum:
                  - WEEKLY
                  - MONTHLY
                  - YEARLY
                  type: string
                genericDay:
                  description: FIRST, LAST - Using MONTHLY with LAST indicates the last day of month.
                  enum:
                  - FIRST
                  - LAST
                  type: string
                month:
                  enum:
                  - JANUARY
                  - FEBRUARY
                  - MARCH
                  - APRIL
                  - MAY
                  - JUNE
                  - JULY
                  - AUGUST
                  - SEPTEMBER
                  - OCTOBER
                  - NOVEMBER
                  - DECEMBER
                  type: string
                weekDays:
                  items:
                    enum:
                    - SUNDAY
                    - MONDAY
                    - TUESDAY
                    - WEDNESDAY
                    - THURSDAY
                    - FRIDAY
                    - SATURDAY
                    type: string
                  maxItems: 7
                  type: array
                  uniqueItems: true
                weekOfMonth:
                  description: Used for monthly schedule. The integer indicates the week of the month, for example, the first (1), second (2), or third (3) week of a month, and so on.
                  type: integer
              type: object
            backupType:
              description: Backup type links to the specified backup type which is applicable for the specific policy type. It can be used for both protection and replication stages of centralized protection policy and self-service protection policy.
              enum:
              - FULL
              - SYNTHETIC_FULL
              - LOG
              - DIFFERENTIAL
              - INCREMENTAL
              - CUMULATIVE
              type: string
            operationId:
              description: Operation id which links to the specific operation in the protection stage - for centralized protection policy only
              type: string
              x-ppdm-filter: true
              x-ppdm-sort: true
            tags:
              description: "Array of string, each string represents a tag. The array is used to match the copy tags.\n- Each tag (string) contains two parts: \"Tag Category||Tag Name\".\n- Supports the following two tags in 19.11.\n  - \"OperationId||xxx-001\"  // Only for centralized protection policy\n  - \"RetentionId||xxx-002\"\n- The copy matches the selector when any of the copy tags matches any tag in this tags array."
              items:
                type: string
              type: array
          type: object
      required:
      - selector
      title: ProtectionPolicyStageExtendedRetentionItem
      type: object
    ProtectionPolicyStageExtendedRetentions:
      description: Array of retention configuration. It should be null when the user uses the same retention for all backup types. Policy API does not restrict to set longer retention in stage.retention than other retentions in extendedRetentions.
      items:
        $ref: '#/components/schemas/ProtectionPolicyStageExtendedRetentionItem'
      title: ProtectionPolicyStageExtendedRetentions
      type: array
    ProtectionPolicyStageFileSystem:
      description: File system configuration for the stage.
      properties:
        troubleShootingOption:
          description: 'The troubleshooting option that is associated with this file system stage. For example: debugEnabled=true.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageMssql:
      description: Microsoft SQL (MSSQL) configuration for the stage.
      properties:
        autoPromote:
          description: The backup auto promote option associated with this MSSQL stage.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        backUpExpirationDays:
          description: The backup expiration days associated with this MSSQL stage.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        excludeSystemDatabase:
          description: The exclude system database associated with this MSSQL stage.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        parallelism:
          description: The parallel streams associated with this MSSQL stage.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        troubleShootingOption:
          description: 'The troubleshooting option associated with this MSSQL stage. For example: debugEnabled=true.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageOperation:
      description: Protection policy stage operation configuration.
      properties:
        backupType:
          description: 'Operation type. Valid values are the following:

            - FULL

            - DIFFERENTIAL

            - LOG

            - INCREMENTAL

            - CUMULATIVE

            - SYNTHETIC_FULL'
          enum:
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          - SYNTHETIC_FULL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: Unique id for the operation in the list of operations. It should be a UUID format string. This is required if need to define different retention time for different operation.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        selector:
          description: "\t\nSelect the copies for Replication and Cloud Tier stage.\n\n- When selector is null or empty, all copies are selected.\n- When backupType and tags are both provided, the copy that matches both is selected."
          properties:
            backupType:
              description: Used to match the copy backup level.
              enum:
              - FULL
              - SYNTHETIC_FULL
              - LOG
              - DIFFERENTIAL
              - INCREMENTAL
              - CUMULATIVE
              type: string
            tags:
              description: "Array of string, each string represents a tag. The array is used to match the copy tags.\n- Each tag (string) contains two parts: \"Tag Category||Tag Name\".\n- Supports the following two tags in 19.11.\n  - \"OperationId||xxx-001\"  // Only for centralized protection policy\n  - \"RetentionId||xxx-002\"\n- The copy matches the selector when any of the copy tags matches any tag in this tags array."
              items:
                type: string
              type: array
          type: object
        type:
          deprecated: true
          description: 'Operation type. Valid values are the following:

            - FULL

            - DIFFERENTIAL

            - LOG

            - INCREMENTAL

            - CUMULATIVE

            - AUTO_FULL'
          enum:
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          - AUTO_FULL
          - SYNTHETIC_FULL
          - GEN0
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    ProtectionPolicyStageOptions:
      description: Free-form policy stage options in JSON
      properties:
        blockSize:
          description: The block size is the number of bytes of data that the Oracle database reads for backup operation.
          type: string
        continueOn:
          description: 'Attribute to control the backup behavior if data or ACLs for files or folders are not getting backed up. Valid values include:

            - ACL_ACCESS_DENIED

            - DATA_ACCESS_DENIED

            - FILENAME_LENGTH_LIMIT_REACHED'
          items:
            enum:
            - ACL_ACCESS_DENIED
            - DATA_ACCESS_DENIED
            - FILENAME_LENGTH_LIMIT_REACHED
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        debugEnabled:
          description: 'Indicates if logs need to enable DEBUG mode or not. Default to behavior of false if no value provided.

            - false: INFO level set for logging

            - true: DEBUG level set for logging'
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        excludeNonCriticalDynamicDisks:
          description: Indicate whether to include or exclude non-critical disk.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        filesPerSet:
          description: 'Specifies the maximum number of files to place in a backup set. The default value for FILESPERSET is the lower of these two values: 64, and the number of files/channel.'
          type: integer
        ignoreMissingSystemStateFiles:
          description: Indicate whether to ignore missing Volume Snapshot Service (VSS) files.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        ignoreThirdPartyServices:
          description: Indicate whether to ignore third-party services when identifying critical volumes.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        indexingEnabled:
          description: 'Indicates if the protection policy for NAS assets enables the metadata indexing for backup. Default to behavior of false if no value provided.

            - false: No indexing for a backup copy

            - true: Indexing for the backup copy'
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        maximumOpenFiles:
          description: Determines the maximum number of input files that a backup or copy can have open at a given time (default value is 8).
          type: integer
        promotionType:
          description: "SQL pass thru Option: \nRepresents the backup promotion type when backupLevel is LOG/DIFF_INCR . \n\"ALL\": \tPromote any database that is not eligible for LOG/DIFF backup to a FULL backup. \n\n\"NONE\": \tSkip any database that is not eligible for LOG/DIFF backup.\n\n\"NONE_WITH_WARNINGS\": \tSkip any database that is not eligible for LOG/DIFF backup but provide user a warning.  Warning is provided in the return value.\n\nDefault behavior for SQL AppAgent if promotionType is not supplied is to use \"ALL\""
          enum:
          - ALL
          - NONE
          - NONE_WITH_WARNINGS
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        sectionSize:
          description: Specifies the SECTION SIZE parameter for multisection backups. The SECTION SIZE parameter enables RMAN to create a multisection backup.
          type: string
        skipOn:
          description: 'Attribute to control the backup behavior. Valid values include:

            - FILENAME_LENGTH_LIMIT_REACHED'
          items:
            enum:
            - FILENAME_LENGTH_LIMIT_REACHED
            type: string
          type: array
        skipSimpleDatabase:
          description: "SQL pass thru option:\nThe backup promotion behavior for database in SIMPLE recovery model when backupLevel is LOG.\n\nfalse: \tPromote  backup to FULL for database in SIMPLE recovery model if backupLevel specified is LOG.\n\ntrue: \tSkip backup of database in SIMPLE recovery model if backupLevel specified is LOG.\n"
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        skipUnprotectableState:
          description: Skip SQL database assets that are in a state that prevents protection from occurring.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        syncCatalog:
          description: "Attribute to control different recovery catalog options. Valid values include:\n  -NONE: This option is to not sync recovery catalog with control file.\n  -SYNC: This option is to sync recovery catalog with control file. synchronously after backup.\n  -ASYNC: This option is to sync recovery catalog with control file. asynchronously after backup."
          enum:
          - NONE
          - SYNC
          - ASYNC
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        systemStateRecoveryOnly:
          description: Indicate whether to back up only the System State Recovery (SSR) components.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageOracle:
      description: Oracle configuration for the stage.
      properties:
        archiveLogDeletionDays:
          description: The archive log deletion days for this Oracle stage. 0 indicates to delete the archive log immediately. Empty indicates not to delete the archive log.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        parallelism:
          description: The parallel streams that are associated with this Oracle stage.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        troubleShootingOption:
          description: 'The troubleshooting option that is associated with this Oracle stage. For example: debugEnabled=true.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStagePowerStoreBlock:
      description: PowerStore configuration for the stage.
      properties:
        backupSite:
          description: 'The back-end uses this option to know how to orchestrate the snapshot. Valid values are the following:

            - PRIMARY_ARRAY

            - REPLICA_ARRAY

            - PRIMARY_AND_REPLICA_ARRAY'
          enum:
          - PRIMARY_ARRAY
          - REPLICA_ARRAY
          - PRIMARY_AND_REPLICA_ARRAY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageProtection:
      description: Dedicated configuration for protection stage only.
      properties:
        backupMechanism:
          description: 'Backup mechanism. Valid values are the following:

            - SBT: Default value. Choose this value to use the original backup technology.

            - OIM: ORACLE incremental merge. This value creates a copy of the database, and it can apply the incremental changes to the database periodically to update the image copy.'
          enum:
          - SBT
          - OIM
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        backupMode:
          enum:
          - FSS
          - VSS
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        forceFullRules:
          description: 'Force full conditions. Valid values are following:

            - VSO_NODE_FAILURE'
          items:
            enum:
            - VSO_NODE_FAILURE
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageRetention:
      description: Singular retention configuration
      properties:
        id:
          description: The unique ID of the retention.
          type: string
        interval:
          description: Retention interval. Used with unit.
          format: int32
          minimum: 1
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageSystemRetentionLock:
          description: Enable or disable storage system retention lock.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        unit:
          description: 'Retention interval unit. Valid values are the following:

            - DAY

            - WEEK

            - MONTH

            - YEAR'
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - interval
      - unit
      title: ''
      type: object
    ProtectionPolicyStageRetentionTime:
      description: Protection policy copy retention time.
      properties:
        interval:
          description: Retention interval. Used with unit.
          format: int32
          minimum: 1
          type: integer
        unit:
          description: 'Retention interval unit. Valid values are the following:

            - DAY

            - WEEK

            - MONTH

            - YEAR'
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
          type: string
      required:
      - interval
      - unit
      type: object
    ProtectionPolicyStageSapHana:
      description: SAP HANA configuration for the stage.
      properties:
        troubleShootingOption:
          description: 'The troubleshooting option that is associated with this SAP HANA stage. For example: debugEnabled=true.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageTarget:
      description: Data target storage system information for the stage.
      properties:
        dataTargetId:
          description: ID of data target location in storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        preferredInterfaceId:
          description: Preferred connection interface ID of the storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageSystemId:
          description: ID of the storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - storageSystemId
      type: object
    ProtectionPolicyStageVm:
      description: VM configuration for the stage.
      properties:
        appConsistentProtection:
          description: The application-consistent protection associated with this virtual machine stage.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        dataMoverType:
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        disableQuiescing:
          description: Indicate whether to turn off the quiescing snapshot for VM backups, the default value is false. This option is available only for the primary backup stage of VM Crash Consistent policy.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        excludeSwapFiles:
          description: The exclude swap files setting associated with this virtual machine stage.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicyStageVmax:
      description: VMax configuration for the stage.
      properties:
        postSnapshotFileName:
          description: The postSnapshotFileName of Vmax.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        preSnapshotFileName:
          description: The preSnapshotFileName of Vmax.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ProtectionPolicySummary:
      description: Protection policy summary statistics.
      properties:
        lastExecutionStatus:
          description: 'The last execution status for the protection policy.

            - SUCCEEDED

            - FAILED

            - CANCELLED

            - COMPLETED_WITH_EXCEPTIONS

            - IDLE

            - UNKNOWN

            - SKIPPED'
          enum:
          - SUCCEEDED
          - FAILED
          - CANCELLED
          - COMPLETED_WITH_EXCEPTIONS
          - IDLE
          - UNKNOWN
          - SKIPPED
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        numberOfAssets:
          description: Number of assets included in the protection policy.
          format: int64
          readOnly: true
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        numberOfJobFailures:
          description: Number of job failures for the protection policy in the last 24 hours.
          format: int64
          readOnly: true
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        numberOfSlaFailures:
          description: Number of service level agreement compliance failures for the protection policy in the last 24 hours.
          format: int64
          readOnly: true
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        numberOfSlaSuccess:
          description: Number of service level agreement compliance successes for the protection policy in the last 24 hours.
          format: int64
          readOnly: true
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalAssetCapacity:
          description: Total capacity of assets included in the protection policy.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalAssetProtectionCapacity:
          description: Total protection capacity of assets included in the protection policy.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    ProtectionPolicyVm:
      description: VM related information on protection policy.
      properties:
        metadataIndexingEnabled:
          description: Enable or disable VM backup metadata indexing feature.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        protectionEngine:
          description: 'Protection engine type. Valid values are the following:

            - VMDIRECT

            -HYPERVISORDIRECT'
          enum:
          - VMDIRECT
          - HYPERVISORDIRECT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - protectionEngine
      type: object
    ProtectionProtocolEnum:
      description: The protection protocol supported by the asset.
      enum:
      - BOOSTFS
      - NFS
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    ProtectionRule:
      description: Detailed information of the protection rule.
      properties:
        _embedded:
          $ref: '#/components/schemas/AssetEmbedded'
        action:
          description: Action type of asset rule. "MOVE_TO_GROUP" means move the assets in the asset rule to the related protection policy.
          enum:
          - MOVE_TO_GROUP
          - NOT_SUPPORTED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        actionResult:
          description: Protection policy ID that associated with the asset rule.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        assignedAssetsCount:
          description: Shows how many assets are assigned.
          format: int32
          type: integer
        category:
          enum:
          - PRIMITIVE
          - COMPOUND
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        conditionConnector:
          deprecated: true
          description: Operator for conditions.
          enum:
          - AND
          - OR
          - NONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        conditions:
          description: Conditions of the protection rule that indicates how to filter assets.
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        description:
          description: Detailed description of the asset rule.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        displayDescription:
          description: The display format of the condition(s)
          type: string
        id:
          description: ID of the asset rule
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceType:
          description: Inventory source type that the asset rule is for.
          enum:
          - CLOUD_NATIVE_ENTITY
          - CLOUD_DIRECTOR_VAPP
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - KUBERNETES
          - POWERSTORE_BLOCK
          - NAS_SHARE
          - DR
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastRunAt:
          description: Last running time for the asset rule.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        logicalOperator:
          enum:
          - AND
          - OR
          - NONE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        managedBy:
          description: 'Enum indicating the protection rule is managed by which component.

            If the value is null, it means the protection rule is not managed by any component, user could modify it at will; otherwise, the corresponding management component owns the modification responsibility, user modification is not recommended.'
          enum:
          - PROTECTION_POLICY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of the asset rule.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        priority:
          description: Priority of the asset rule. High priority asset rule is run in advance.
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        rules:
          items:
            $ref: '#/components/schemas/ProtectionRule'
          type: array
        tenant:
          $ref: '#/components/schemas/Id'
      type: object
    ProtectionRuleExecution:
      description: Detail information of dynamic filter execution.
      properties:
        assetRuleIds:
          description: Id list of dynamic filters.
          items:
            type: string
          type: array
        inventorySourceType:
          description: Type of inventory source.
          enum:
          - CLOUD_NATIVE_ENTITY
          - CLOUD_DIRECTOR_VAPP
          - POWERSTORE_BLOCK
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - NAS_SHARE
          - DR
          type: string
      type: object
    ProtectionRules:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ProtectionRule'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ProtectionRulesConflictPreviewRequest:
      properties:
        previewAction:
          description: ''
          enum:
          - CREATE
          - EDIT
          type: string
        protectionRule:
          $ref: '#/components/schemas/ProtectionRule'
      required:
      - previewAction
      - protectionRule
      title: ProtectionRulesConflictPreviewRequest
      type: object
    ProtectionSummary:
      properties:
        maxNoOfProtectableVms:
          format: int64
          type: integer
        noOfProtectedVms:
          format: int64
          type: integer
        totalProtectedSizeInBytes:
          format: int64
          type: integer
      type: object
    ProviderParameter:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    ProxyDeploymentConfig:
      description: Proxy Deployment Config.
      properties:
        AdditionalVMNetworks:
          items:
            $ref: '#/components/schemas/VProxyDeploymentNetworkConfig'
          type: array
        Dns:
          type: string
        Fqdn:
          type: string
        Gateway:
          type: string
        IPProtocol:
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
        InterfaceName:
          type: string
        IpAddress:
          type: string
        IpV6Address:
          type: string
        IpV6AutoAssign:
          type: boolean
        IpV6Gateway:
          type: string
        IpV6PrefixLen:
          format: int32
          type: integer
        Location:
          $ref: '#/components/schemas/VmDeploymentLocation'
        MacAddress:
          type: string
        MultiVlanEnabled:
          type: boolean
        NTPServer:
          type: string
        NetMask:
          type: string
        NetworkMoref:
          type: string
        OvaFile:
          type: string
        RootCredential:
          $ref: '#/components/schemas/VProxyCredential'
        Timezone:
          type: string
        VMName:
          type: string
        Vlans:
          items:
            $ref: '#/components/schemas/ProxyDeploymentConfigVlans'
          type: array
      type: object
    ProxyDeploymentConfigRoutes:
      properties:
        Gateway:
          type: string
        IpV6Gateway:
          type: string
        IpV6PrefixLen:
          format: int32
          type: integer
        Netmask:
          type: string
        Source:
          type: string
        Type:
          type: string
      type: object
    ProxyDeploymentConfigVlans:
      properties:
        Gateway:
          type: string
        IpAddress:
          type: string
        IpV6Address:
          type: string
        IpV6AutoAssign:
          type: boolean
        IpV6Gateway:
          type: string
        IpV6PrefixLen:
          format: int32
          type: integer
        Mtu:
          type: integer
        Netmask:
          type: string
        Routes:
          items:
            $ref: '#/components/schemas/ProxyDeploymentConfigRoutes'
          type: array
        VlanId:
          type: integer
      type: object
    ProxyLogBundleSessionsConfig:
      description: Manages proxy log bundle session configuration during POST.
      properties:
        AcceptedLanguage:
          enum:
          - en
          type: string
        ClientSessionData:
          properties: {}
          type: object
        IdleTimeout:
          format: int64
          type: integer
        LogBundleRange:
          $ref: '#/components/schemas/LogBundleRange'
        LogDetail:
          type: string
        LogLevel:
          type: string
        LogTag:
          type: string
        NoCancelOnTimeout:
          type: boolean
        ProxySpec:
          items:
            $ref: '#/components/schemas/ProxyLogBundleSpec'
          type: array
        SessionId:
          type: string
      type: object
    ProxyLogBundleSessionsStatus:
      description: Manage proxy log bundle session status.
      properties:
        ApplicationData:
          type: string
        ApplicationVersion:
          type: string
        Description:
          type: string
        EndTime:
          type: string
        Error:
          $ref: '#/components/schemas/ResourceStatusError'
        Progress:
          format: int64
          type: integer
        ProxyLogBundleStatus:
          items:
            $ref: '#/components/schemas/ProxyLogBundleStatus'
          type: array
        StartTime:
          type: string
        State:
          enum:
          - Pending
          - Queued
          - Running
          - Success
          - Ready
          - Failure
          - Cancelled
          - Cancelling
          - Stopped
          - Stopping
          - StoppingFailed
          - Mounting
          - Mounted
          - Unmounting
          - Unmounted
          type: string
        Warnings:
          items:
            type: string
          type: array
      type: object
    ProxyLogBundleSpec:
      properties:
        LogBundlePath:
          type: string
        ProxySessionId:
          type: string
      type: object
    ProxyLogBundleStatus:
      properties:
        Error:
          $ref: '#/components/schemas/ResourceStatusError'
        FilesCollected:
          format: int32
          type: integer
        LogBundle:
          type: string
        ProxySessionId:
          type: string
        State:
          enum:
          - Pending
          - Queued
          - Running
          - Success
          - Ready
          - Failure
          - Cancelled
          - Cancelling
          - Stopped
          - Stopping
          - StoppingFailed
          - Mounting
          - Mounted
          - Unmounting
          - Unmounted
          type: string
      type: object
    ProxySessionOverride:
      properties:
        CapacityPercentage:
          format: int32
          type: integer
        ControlPercentage:
          format: int32
          type: integer
        Datastores:
          items:
            type: string
          type: array
        TransportSessions:
          $ref: '#/components/schemas/ConfigurableTransportSessions'
      type: object
    ProxyStatus:
      description: Proxy Status.
      properties:
        Detail:
          type: string
        Status:
          enum:
          - Deploying
          - Deployed
          - Registering
          - Registered
          - DisablePending
          - Disabled
          - Ready
          - Failed
          - DeletePending
          - Deleted
          - MaintenancePending
          - Upgraded
          - PowereonPending
          - PoweroffPending
          - Poweredoff
          type: string
      type: object
    PutAlertAcknowledgement:
      description: Put Alert Acknowledgement.
      properties:
        acknowledgement:
          $ref: '#/components/schemas/AlertAcknowledgement'
        id:
          type: string
      type: object
    PutAssetRequest:
      description: Update credential of the asset.
      properties:
        credentialId:
          description: The ID of the credential.
          type: string
        details:
          properties:
            vm:
              $ref: '#/components/schemas/PutAssetRequestVmAttribute'
          type: object
        id:
          description: The ID of an asset.
          type: string
        type:
          description: The type of an asset, such as VMWARE_VIRTUAL_MACHINE.
          enum:
          - VMWARE_VIRTUAL_MACHINE
          type: string
      required:
      - credentialId
      - id
      - type
      type: object
    PutAssetRequestVmAttribute:
      properties:
        dataMoverType:
          enum:
          - INHERIT_FROM_POLICY
          - SDM
          - VADP
          type: string
      type: object
    PvcStorageMapping:
      properties:
        pvcName:
          type: string
        storageClasses:
          items:
            type: string
          type: array
      type: object
    PvcStorageMappings:
      description: List of storage classes per PVC.
      properties:
        content:
          items:
            $ref: '#/components/schemas/PvcStorageMapping'
          type: array
      type: object
    QueryCopiesRequest:
      properties:
        filter:
          type: string
        orderby:
          type: string
        page:
          format: int64
          type: integer
        pageNumber:
          format: int64
          type: integer
      title: QueryCopiesRequest
      type: object
    QueryLatestCopiesRequest:
      properties:
        filter:
          type: string
      type: object
    RPAConnectivity:
      properties:
        rpaUid:
          format: int64
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - OK
          - WARNING
          - ERROR
          - UNKNOWN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    Readiness:
      description: Indicates if the resource is ready to be used.
      enum:
      - READY
      - NOT_READY
      title: Readiness
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    RecallAndRetierCopyResponse:
      properties:
        taskId:
          type: string
      title: RecallAndRetierCopyResponse
      type: object
    RecoverOptions:
      description: Server DR recovery configuration flags
      properties:
        replacementDataDomain:
          $ref: '#/components/schemas/ReplacementDataDomain'
        restoreApplianceOnStandalone:
          description: Boolean flag to restore ithica backup on standalone system
          type: boolean
        vaultRecovery:
          description: Flag to disable 2FA for CyberRecovery
          type: boolean
      type: object
    RecoveryContext:
      properties:
        description:
          description: Description for the recovery context.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        id:
          type: string
        local:
          description: The name of an asset.
          type: boolean
          x-ppdm-filter: false
          x-ppdm-sort: false
        name:
          description: The name of an asset.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        systemTenantId:
          description: The tenant ID on the target PowerProtect Data Manager system
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
      required:
      - description
      - id
      - local
      - name
      - systemTenantId
      type: object
    RecoveryContexts:
      properties:
        content:
          items:
            $ref: '#/components/schemas/RecoveryContext'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    RefreshAccessTokenRequest:
      description: Refresh token.
      properties:
        grant_type:
          description: 'A type of an authorization grant that is a credential that the client uses to obtain an access token

            as described by RFC 6749 Section 1.3'
          enum:
          - authorization_code
          - password
          - client_credentials
          - refresh_token
          type: string
        refresh_token:
          description: 'The refresh token that is issued by the authorization server

            to obtain a new access token when the current

            access token becomes invalid or expires.'
          pattern: ^[\w\-]+?\.[\w\-]+?\.[\w\-]+?$
          type: string
        scope:
          description: The scope of the access token as described by RFC 6749 Section 3.3
          type: string
      required:
      - grant_type
      type: object
    RemoteUpgradePackage:
      description: Remote Upgrade Package Information.
      properties:
        checksum:
          type: string
        criticality:
          enum:
          - URGENT
          type: string
        description:
          type: string
        externalId:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          type: string
        madeAvailable:
          format: date-time
          type: string
        packageName:
          type: string
        packagePath:
          type: string
        packageVersion:
          type: string
        releaseNotesLink:
          type: string
        sizeInBytes:
          format: double
          type: number
        state:
          enum:
          - AVAILABLE
          - DOWNLOADED
          - DOWNLOADING
          - IGNORED
          - FAILED
          type: string
        title:
          type: string
      type: object
    RemoteUpgradePackageDownload:
      description: Get a page result of Device Connection.
      properties:
        content:
          items:
            properties: {}
            type: object
          type: array
      type: object
    RemoteUpgradePackageDownloadProgress:
      description: Get a page result of Remote Upgrade Package Information.
      properties:
        errorMsg:
          type: string
        percentageCompleted:
          format: double
          type: number
        transferRate:
          format: double
          type: number
      type: object
    RemoteUpgradePackages:
      description: Get Remote Upgrade Packages.
      properties:
        content:
          items:
            $ref: '#/components/schemas/RemoteUpgradePackage'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ReplacementDataDomain:
      description: Data Domain mapping object
      properties:
        address:
          description: FQDN or IP for Data Domain
          type: string
        name:
          description: Name of Data Domain
          type: string
        networkInterfaces:
          description: Provides old and new network interface address
          items:
            $ref: '#/components/schemas/NetworkInterfaceReplacement'
          type: array
        originalName:
          description: Original name of Data Domain
          type: string
        password:
          description: Password
          type: boolean
        port:
          description: Port Number for Data Doimain
          type: integer
        recoveredStorageUnits:
          description: List of Storage Units
          items:
            type: string
          type: array
        username:
          description: Username
          type: string
      type: object
    ReplicationEncryptionMode:
      description: Replication Encryption Mode
      enum:
      - ENABLED
      - DISABLED
      - MIXED
      - NOT_SUPPORTED
      title: ReplicationEncryptionMode
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    ReportExportStatusResponse:
      properties:
        status:
          description: Status of the report export.
          enum:
          - RUNNING
          - QUEUED
          - READY
          - FAILED
          type: string
      type: object
    ReportResponse:
      description: The result of a report. Most of the fields in the response can be used in the filter and orderby attributes. See documentation for the specific report to learn about supported filter and orderby attributes.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SampleReportResponse'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ReportStatusResponse:
      properties:
        status:
          description: Status of the report.
          enum:
          - RUNNING
          - QUEUED
          - READY
          - FAILED
          type: string
      type: object
    RequestedCheck:
      properties:
        groupName:
          type: string
        name:
          type: string
      type: object
    ReservedBy:
      description: Details about the session that reserved this proxy.
      properties:
        SessionId:
          type: string
        SessionType:
          type: string
      type: object
    ResetOsUserPasswordRequest:
      properties:
        newPassword:
          type: string
        userName:
          type: string
      title: ResetOsUserPasswordRequest
      type: object
    ResetPasswordRequest:
      description: Reset password credentials.
      properties:
        newPassword:
          description: The new password to replace current one.
          type: string
        resetToken:
          description: Temporary token to reset password.
          type: string
      required:
      - newPassword
      - resetToken
      type: object
    ResetPasswordResponse:
      description: Reset Password response.
      properties:
        username:
          description: The reset password username.
          type: string
      required:
      - username
      type: object
    Resource:
      description: The reference to a resource that is associated with this activity.
      properties:
        id:
          description: The reference ID.
          type: string
        name:
          description: The reference name.
          type: string
        type:
          description: The reference type.
          type: string
      type: object
    ResourceCloudUnit:
      properties:
        name:
          type: string
          x-ppdm-filter: false
          x-ppmd-sort: false
        profileName:
          type: string
          x-ppdm-filter: false
          x-ppmd-sort: false
        providerName:
          type: string
          x-ppdm-filter: false
          x-ppmd-sort: false
        state:
          type: string
          x-ppdm-filter: false
          x-ppmd-sort: false
        storageArrayId:
          type: string
      type: object
    ResourceStatusError:
      properties:
        Classifications:
          items:
            type: string
          type: array
        Code:
          format: int32
          type: integer
        Remedy:
          items:
            type: string
          type: array
        Retryable:
          type: boolean
        Text:
          type: string
      type: object
    RestoreFilesRequest:
      description: This object is contains information used to restores files to a target VM.
      properties:
        filePaths:
          description: Array of the names of files to restore.
          items:
            type: string
          type: array
        overwriteExisting:
          default: true
          description: Flag indicating whether existing files should be overwritten.
          type: boolean
        restoreToOriginalPath:
          default: false
          description: Flag indicating whether the files should be restored to their original locations. The target directory field must be empty or null if this flag is set to true.
          type: boolean
        targetDirectory:
          description: Directory on the destination VM where to restore files to. This string must be null or empty if the "restoreToOriginalPath" flag is set to true.
          type: string
      required:
      - filePaths
      type: object
    RestoreFilesResponse:
      properties:
        taskId:
          description: The ID of the PowerProtect Data Manager task that is used to track the status of the called API that returned this response object.
          type: string
      type: object
    RestoreGroup:
      description: The restore groups.
      properties:
        assetSelector:
          $ref: '#/components/schemas/RestorePlanAssetSelector'
        assetType:
          enum:
          - VMWARE_VIRTUAL_MACHINE
          type: string
        copySelector:
          $ref: '#/components/schemas/RestorePlanCopySelector'
        description:
          description: An optional description for the restore plan.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        extendedData:
          description: The extended data.
          discriminator:
            mapping:
              VMWARE_VIRTUAL_MACHINE: '#/components/schemas/RestoreGroupTargetVmInfo'
            propertyName: assetType
          oneOf:
          - $ref: '#/components/schemas/VmExtendedData'
        id:
          description: The restore group ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Unique name of the restore group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        priority:
          default: 1
          description: Priority inside the restore group - or dependency. It should be bigger than zero and smaller value has higher priority. E.g. 1 has higher priority than 2.
          format: int64
          type: integer
        restoreType:
          description: 'The restore type.

            Valid values are the following:

            TO_PRODUCTION

            TO_ALTERNATE'
          enum:
          - TO_PRODUCTION
          - TO_ALTERNATE
          - INSTANT_ACCESS
          - IR_TO_PRODUCTION
          - IR_TO_ALTERNATE
          - DIRECT_TO_ESX
          - TO_EXISTING
          - TO_EXPORT
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          enum:
          - CONFIG_INCOMPLETE
          - READY
          type: string
        stateReason:
          description: The state reason of the restore group.
          type: string
      type: object
    RestoreGroupNetworkSettings:
      description: Network setting that allows NICs to be re-mapped to different networks at the time of restore.
      properties:
        default:
          properties:
            dest:
              properties:
                networkMoref:
                  type: string
              type: object
          type: object
        mappings:
          items:
            properties:
              dest:
                properties:
                  networkMoref:
                    type: string
                type: object
              source:
                properties:
                  dataCenterMoref:
                    type: string
                  inventorySourceId:
                    type: string
                  networkMoref:
                    type: string
                type: object
            type: object
          type: array
        reconnectNic:
          type: boolean
      type: object
    RestoreGroupTargetVmInfo:
      properties:
        clusterMoref:
          description: The Managed Object Reference (MoRef) of the Compute Cluster that the new VM should be placed into. This reference is only required if the hostMoref is not provided.
          type: string
        credentials:
          $ref: '#/components/schemas/VMCredentials'
        dataCenterMoref:
          description: The MoRef of the datacenter that the new VM should be placed into. This reference is required except when performing a direct-to-ESXi host restore.
          type: string
        deleteBackingFile:
          description: When performing a restore to original, and one or more disks in the current VM did not exist at the time of the backup, those disks are removed from the VM. This flag controls whether the disk files are also deleted from the datastore.
          type: boolean
        disk:
          $ref: '#/components/schemas/RestoreGroupVirtualDiskMap'
        esxHost:
          $ref: '#/components/schemas/EsxHostInfo'
        folderMoref:
          description: The MoRef of the VM folder to place the new VM into. If not provided the root folder of the datacenter is used as the destination.
          type: string
        hostMoref:
          description: The MoRef of the host to restore the VM into. If the clusterMoref is provided and that cluster has DRS enabled, then this parameter is optional and an appropriate host is chosen automatically using DRS.
          type: string
        inventorySourceId:
          description: The ID of the vCenter inventory source to restore the VM into. Optional for restore to original.
          type: string
        network:
          $ref: '#/components/schemas/RestoreGroupNetworkSettings'
        recoverConfig:
          description: If true, then during restore to original the VM configuration settings are restored along with the data on the disks. Defaults to true, but is automatically set to false if the VM has any RDM disks or any disks are excluded in the backup.
          type: boolean
        resourcePoolMoref:
          description: The optional MoRef of a resource pool to restore the VM into.
          type: string
        spbmRestoreDirective:
          description: Controls whether to attempt to assign any storage policies that are saved in the backup when restoring the VM.
          enum:
          - 'OFF'
          - FROM_COPY
          type: string
        tagRestoreDirective:
          description: Controls whether to attempt to assign any tags that are saved in the backup when restoring the VM. If the vCenter does not have a tag with the same name, a new tag is created with that name, if possible.
          enum:
          - 'OFF'
          - FROM_COPY
          type: string
        vmPowerOn:
          description: Controls whether to power on the VM after the restore is complete. For instant restore, this action happens before the VM is moved to permanent storage. For restore to original, if not set, the current power state of the VM is preserved.
          type: boolean
        vmReconnectNic:
          description: Controls whether to reconnect all NICs on the VM after the restore is complete.  This setting is ignored if the network parameter is provided.
          type: boolean
      type: object
      x-tags:
      - FieldType
    RestoreGroupVirtualDiskMap:
      description: Indicate how and where to restore the disks.
      properties:
        default:
          description: The disks will be restored to this datastore and use this provisioning type by default.
          properties:
            datastoreMoref:
              description: The datastore MoRef in vCenter.
              type: string
            provisioningType:
              enum:
              - THICK
              - THICK_LAZY
              - THICK_EAGER
              - THIN
              type: string
          type: object
      type: object
    RestorePlan:
      description: The model of the restore plan.
      properties:
        createdAt:
          description: The time when this restore plan was created.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: An optional description for the restore plan.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        fallbackStrategy:
          description: Define the fallback strategy when the dependent jobs fail.
          enum:
          - CANCEL_ON_FAILURE
          - CONTINUE_ON_FAILURE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: Unique identifier of the restore plan.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastRun:
          $ref: '#/components/schemas/lastRun'
        name:
          description: Unique name of the restore plan.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        resourceGroupIds:
          description: ID of resource groups for IBAC.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        restoreGroups:
          items:
            $ref: '#/components/schemas/RestoreGroup'
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        schedule:
          $ref: '#/components/schemas/RestorePlanSchedule'
        state:
          description: The state of the restore plan.
          enum:
          - CONFIG_INCOMPLETE
          - READY
          - RUNNING
          - SCHEDULED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stateReason:
          description: The state reason of the restore plan.
          type: string
        updatedAt:
          description: The time when this restore plan was updated.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - name
      title: RestorePlan
      type: object
      x-tags:
      - Resource
    RestorePlanAssetSelector:
      description: The asset selector.
      properties:
        assetCount:
          format: int32
          type: integer
        assetIds:
          items:
            type: string
          type: array
        type:
          enum:
          - MANUAL
          - RULE_BASED
          - POLICY_BASED
          type: string
      type: object
      x-ppdm-filter: false
      x-ppdm-sort: false
    RestorePlanCopySelector:
      description: The copy selector.
      properties:
        fallbackStrategy:
          description: Use the latest copy or fail the restore for the asset if no copy based on the condition is found. The default value is USE_LATEST.
          enum:
          - USE_LATEST
          - FAIL_RESTORE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        storageSystemId:
          description: The storage system ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: Use the latest copy or use an external filter to select copy. The default value is USE_LATEST.
          enum:
          - USE_LATEST
          - USE_LATEST_IN_TIME_RANGE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
      x-ppdm-filter: false
      x-ppdm-sort: false
    RestorePlanSchedule:
      description: The schedule model of restore plans.
      properties:
        startTime:
          description: The scheduled start time.
          format: date-time
          type: string
      type: object
    RestorePlans:
      description: The model of restore plans.
      properties:
        content:
          description: The content of restore plans.
          items:
            $ref: '#/components/schemas/RestorePlan'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    RestoredCopies:
      properties:
        content:
          items:
            $ref: '#/components/schemas/RestoredCopy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    RestoredCopiesDetails:
      description: Restored copies details.
      properties:
        targetCloudInfo:
          $ref: '#/components/schemas/TargetCloudInfo'
        targetDatabaseInfo:
          $ref: '#/components/schemas/TargetDatabaseInfo'
        targetFileSystemInfo:
          $ref: '#/components/schemas/TargetFileSystemInfo'
        targetK8sInfo:
          $ref: '#/components/schemas/TargetK8sInfo'
        targetNasInfo:
          $ref: '#/components/schemas/TargetNasInfo'
        targetOracleDatabaseInfo:
          $ref: '#/components/schemas/TargetOracleDatabaseInfo'
        targetStorageInfo:
          $ref: '#/components/schemas/TargetStorageInfo'
        targetVmInfo:
          $ref: '#/components/schemas/TargetVmInfo'
      type: object
      x-ppdm-filter: false
      x-ppdm-sort: false
    RestoredCopy:
      description: Restored copies REST model.
      properties:
        activityId:
          description: The activity ID for the restore activity. Activity can be Task, Job, or JobGroup.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        completionTime:
          description: Restoration completion time.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        copyId:
          deprecated: true
          description: ID of copy to be restored.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        copyIds:
          description: IDs of copy to be restored.
          items:
            type: string
          type: array
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: Description of particular restored copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        dryRun:
          description: For Oracle to generate RMAN scripts only.
          type: boolean
        expirationTime:
          description: When the restore is expired, VMDM service involves the restore session to remove (cleanup) its NAS datastore and resource.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: ID of particular restored copy.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        options:
          $ref: '#/components/schemas/RestoredCopyOptions'
        restoreEntireBackupTransaction:
          description: Restore all copies that have the same backup transaction ID (backupTransactionId).
          type: boolean
        restoreType:
          description: Restore operation type of particular restored copy.
          enum:
          - INSTANT_ACCESS
          - IR_TO_PRODUCTION
          - IR_TO_ALTERNATE
          - TO_PRODUCTION
          - TO_ALTERNATE
          - TO_EXISTING
          - DIRECT_TO_ESX
          - TO_CLOUD
          - TO_EXPORT
          - TO_FLR
          - TO_MOUNT
          - RECOVER_VMDKS
          - TO_CLONE
          type: string
        restoredCopiesDetails:
          $ref: '#/components/schemas/RestoredCopiesDetails'
        startTime:
          description: Restoration start time.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        state:
          description: State of particular restored copy.
          enum:
          - WAITING
          - RUNNING
          - STOPPING
          - COMPLETED
          - MOUNTED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          description: Status of particular restored copy.
          enum:
          - UNKNOWN
          - SUCCESS
          - PARTIALSUCCESS
          - PARTIALCANCELLED
          - CANCELLED
          - FAILED
          - VMOTIONED
          - DELETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - description
      - restoreType
      type: object
    RestoredCopyOptions:
      description: 'Agent free-form JSON key pair options.

        '
      properties:
        advanceSpFileParameters:
          description: 'Oracle pass-through field that specifies the key-value pairs of advance spfile parameters.

            It is only applicable when the restoreSpfile parameter is true.'
          items:
            properties:
              paramName:
                description: Specifies the parameter name.
                type: string
              paramValue:
                description: Specifies the parameter value.
                type: string
          type: array
        allowOverwrite:
          description: Indicate the strategy recovery will use to handle conflict of the contents in the destination NAS Server/Folder. the value must be either 'false' or 'true
          type: string
        changeDbId:
          description: Oracle pass-through field that applies only for the DR workflow and is used to change the DBID of the database.
          type: boolean
        controlSpFileBackupData:
          description: 'Oracle pass-through field that provides the relative path of the spfile, control file, and autobackup file pieces.

            This property includes a flag that indicates whether the control file and spfile are present.'
          items:
            $ref: '#/components/schemas/OracleRestoredOptionsControlSpFileInfo'
        crossCheckBackup:
          description: This option is for Oracle disaster recovery. Indicates to perform crosscheck backup.
          type: boolean
        databaseRole:
          description: Oracle pass-through field for restore dataguard support.
          enum:
          - NONE
          - PRIMARY
          - STANDBY
          type: string
        disconnectDatabaseUsers:
          description: 'Microsoft SQL Server requires that there are no database user connections when starting a database restore.

            This option will automatically disconnect any active database users prior to restoring the database.

            - false: do not disconnect active database users from database prior to starting a database restore.

            - true: disconnect active database users prior to starting a database restore.'
          type: boolean
        enableAutoCleanup:
          description: Indicate if DR/INSTANT_ACCESS_RECOVERY fails whether to cleanup the database or not.
          type: boolean
        enableCompressedRestore:
          description: 'VMDM Pass thru field:

            DD Boost compressed restore improves backup read performance by using data compression techniques.

            This option enables DD Boost compressed restore. If the restore is performed under low bandwidth

            conditions, enabling this flag may help improve DD Boost read performance.


            When set to false, the DD Boost data stream is not compressed.


            When set to true, the DD Boost data stream is compressed.'
          type: boolean
        enableDebug:
          description: 'SQL Pass thru field:

            indicates if debug log should be enabled for the agent or not.'
          type: boolean
        fileRelocationOptions:
          $ref: '#/components/schemas/RestoredCopyOptionsFileRelocationOptions'
        forceDatabaseOverwrite:
          description: 'SQL Pass thru field:

            indicates the database should be overwritten by the restore, which specifies the "FORCE" flag for T-SQL RESTORE statement.'
          type: boolean
        openDatabase:
          description: 'Oracle pass-through field for opening the database after recovery.

            It is only applicable for DR and live DB restore and not for archive-only restore.'
          type: boolean
        performTailLogBackup:
          description: 'SQL Pass thru field:

            indicates if tail log backup should be performed.

            '
          type: boolean
        pitInfo:
          description: Oracle pass-through field for point-in-time (PIT) information.
          properties:
            endLogSeq:
              description: This property is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_SEQ.
              type: string
            endScn:
              description: This property is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_SCN. The value must be integer type.
              type: string
            endTime:
              description: The end time is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_TIME.
              type: string
            startLogSeq:
              description: This property is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_SEQ.
              type: string
            startScn:
              description: This property is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_SCN. The value must be integer type.
              type: string
            startTime:
              description: The start time is used when restoreCategory = RESTORE_LOG and restoreSubCategory = PIT_TIME.
              type: string
            targetLogSeq:
              description: The restoreSubCategory property = PIT_SEQ, which is the target log sequence number for point-in-time recovery.
              type: string
            targetScn:
              description: The restoreSubCategory property = PIT_SCN, which is the target SCN number for point-in-time recovery.
              type: string
            targetTime:
              description: 'When restoreCategory = "DISASTER_RECOVERY", restoreSubCategory = "BACKUP_TIME" and targetTime = backupEndTime.

                When restoreCategory = DISASTER_RECOVERY or RESTORE_DB, restoreSubCategory = PIT_TIME or user specified time.'
              type: string
          type: object
        primaryHasDDConnection:
          description: SDMNG restore options. This option indicates whether the primary PowerStore has a DD connection or not.
          type: boolean
        recoveryState:
          description: 'SQL Pass thru field.

            If not specified, application assumes default is "RECOVERY".'
          enum:
          - RECOVERY
          - NO_RECOVERY
          type: string
        requestedProxy:
          description: 'VMDM Pass thru field:

            The proxy host name. Restore using this specified proxy.'
          type: string
        restoreBiosUuid:
          description: 'The field for VM restore that determines whether a restored VM''s BIOS UUID is set to value from the backup or if the VM is given a new BIOS UUID.

            Restoring the BIOS UUID is effectively always true for Restore-to-Original operations hence this field is ignored for these operations.

            - false: A new BIOS UUID is generated for a restored VM. This is the default behavior if restoredBiosUuid is not specified.

            - true: The BIOS UUID of a restored VM is set to the value from the backup.'
          type: boolean
        restoreLocation:
          description: 'File system pass-through field for restore location.

            If not specified, application assumes default is "ORIGINAL".'
          enum:
          - ORIGINAL
          - ALTERNATE
          type: string
        restoreOriginalMachineConfig:
          description: The field for Cloud DR restore, that marks if set original MAC id of restored VM
          type: boolean
        restoreSpFile:
          description: 'Oracle pass-through field for restoring the spfile.

            This property is used if the destination host is different than the target host,

            the spfile is not provided by the user, and the restoreCategory property is DR.'
          type: boolean
        restoreSubCategory:
          description: 'Oracle pass-through field for restore subcategory property.

            When restoreCategory property = DISASTER_RECOVERY, the supported restoreSubCategory values are "BACKUP_TIME", "PIT_TIME", "PIT_SCN", "PIT_SEQ".

            When restoreCategory = RESTORE_DB, the supported restoreSubCategory values are "CURRENT_TIME", "PIT_TIME", "PIT_SCN", "PIT_SEQ".

            When restoreCategory = RESTORE_LOG, the supported restoreSubCategory values are "ARCH_ALL", "PIT_TIME", "PIT_SCN", "PIT_SEQ".'
          enum:
          - BACKUP_TIME
          - CURRENT_TIME
          - PIT_TIME
          - PIT_SCN
          - PIT_SEQ
          - ARCH_ALL
          type: string
        restoreTlpAcls:
          description: This option indicates whether to restore top level ACLs or not.
          type: boolean
        retainFolderHierarchy:
          description: 'File system pass-through field that indicates if restored files should maintain the folder structure.

            If not specified, application assumes default is true.'
          type: boolean
        stopAtTime:
          description: 'SQL Pass thru field:


            The time when SQL should stop rolling forward transactions for the TLOG backup being restored.'
          type: string
        targetInstallLocation:
          description: 'Oracle pass-through field for the Oracle home location of the destination host.

            To restore to the original database, the applicationSystem property already exists.

            To restore to an alternate location, the application system does not exist,

            and the installation location of the destination database is required. For DR workflows, this value is taken as input from the UI.'
          type: string
        targetSid:
          description: Oracle pass-through field. Name (SID) of the destination asset for restore. For the DR workflow, this value is taken as input from the UI.
          type: string
        updateTimeOut:
          description: This option indicates interval for which NAS Pillar waits to cancel a particular Backup/Recover Session.
          type: integer
        vcenterId:
          description: The vCenter ID for Cloud DR restore.
          type: string
      type: object
    RestoredCopyOptionsFileRelocationOptions:
      description: SQL or Oracle pass-through field that defines the file relocation options for restore.
      properties:
        targetArchLogFileLocations:
          description: The target file path where all database archive log files are relocated during the restore must have a validated file system path when fileRelocationType is "CUSTOM_LOCATION". This property must be an array of paths. The maximum value for logfilelocations is 31.
          items:
            type: string
          type: array
        targetControlFiles:
          description: This property describes Oracle options. The target file path where all database control files are relocated during the restore must have a validated file system path when fileRelocationType is "CUSTOM_LOCATION". A maximum of eight control files is supported for an Oracle database.
          items:
            type: string
          type: array
        targetDataFileLocation:
          description: The target file path where all database data files will be relocated during the restore which should have a valid file system path when  fileRelocationType is "CUSTOM_LOCATION".
          type: string
        targetFRAFileLocation:
          description: The target file path specifies the Fast Recovery Area.
          type: string
        targetLogFileLocation:
          description: The target file path where all database log files will be relocated during the restore which should have a validate file system path when fileRelocationType is "CUSTOM_LOCATION"
          type: string
        targetRedoLogFileLocations:
          description: The target file path where all database redo log files are relocated during the restore must have a validated file system path when fileRelocationType is "CUSTOM_LOCATION". This property must be an array of paths. The maximum log file location is five.
          items:
            type: string
          type: array
        targetRootLevelFolderLocation:
          description: The target root level path where all the database related files will be relocated to single path.
          type: string
        type:
          description: "ORIGINAL_LOCATION:\tThis indicates that the database is being restored to the original location\nDEFAULT_LOCATION:\tIndicates the user is restoring the database to an alternate location and has specified to restore the database to the default data and log file paths of the target instance specified.\nCUSTOM_LOCATION:\tIndicates the user is restoring the database to an alternate location and has specified to restore the database to the default data and log file paths specified."
          enum:
          - ORIGINAL_LOCATION
          - DEFAULT_LOCATION
          - CUSTOM_LOCATION
          type: string
      type: object
    RestoredFilesBatchRequest:
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/MountParams'
          - $ref: '#/components/schemas/RestoreFilesRequest'
        id:
          description: A value that uniquely identifies each request in the batch.
          minLength: 1
          type: string
      required:
      - id
      type: object
    RestoredFilesBatchRequests:
      description: ''
      properties:
        requests:
          items:
            $ref: '#/components/schemas/RestoredFilesBatchRequest'
          minItems: 1
          type: array
      required:
      - requests
      type: object
    RestoredFilesBatchResponse:
      properties:
        body:
          $ref: '#/components/schemas/RestoredFilesBatchResponseBody'
        id:
          description: The original ID from the request.
          minLength: 1
          type: string
        status:
          description: The HTTP status code for each request.  Normally it is 202, but each request MAY fail.
          type: number
      required:
      - id
      - status
      type: object
    RestoredFilesBatchResponseBody:
      properties:
        activityId:
          description: The ID of the PowerProtect Data Manager job that will process this request.
          minLength: 1
          type: string
        error:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - activityId
      type: object
    RestoredFilesBatchResponses:
      description: ''
      properties:
        responses:
          items:
            $ref: '#/components/schemas/RestoredFilesBatchResponse'
          minItems: 1
          type: array
      required:
      - responses
      type: object
    RestoredTargetCompatibilities:
      description: RestoredTargetCompatibilities
      properties:
        compatibilityFailureReason:
          description: Reason for  compatibility failure.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetName:
          description: Name of the target.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: Type of restore target.
          enum:
          - COMPATIBLE
          - INCOMPATIBLE
          - UNKNOWN
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    RestoredVmAsset:
      description: This field stores the details of the newly created VM.  It is not an input parameter; it is set by the system.
      properties:
        assetRef:
          type: string
        vmRef:
          type: string
      type: object
    Restrictions:
      description: "Restrictions that are enforced independently of the node state. For example, providing a \"restricted OPERATIONAL\" mode.\n\nSupported restrictions:\n   noScheduledStorageAccess   If \"true\", this restriction prevents scheduled workflows that interact with storage.\n   cancelAllActivities   If \"true\", this restriction cancels all activities while the system enters maintenance mode, excluding the power off job.\n"
      properties:
        name:
          enum:
          - noScheduledStorageAccess
          - cancelAllActivities
          type: string
        value:
          type: string
      type: object
    RetentionLock:
      properties:
        enable:
          type: boolean
        mode:
          enum:
          - COMPLIANCE
          - GOVERNANCE
          type: string
      type: object
    RetierRetentionTime:
      description: ''
      properties:
        retierRetentionTime:
          description: The amount of time the recalled asset will stay on the data domain before being retiered back to cloud."
          format: date-time
          type: string
      type: object
    RetryActivityResult:
      properties:
        errorResponseObject:
          $ref: '#/components/schemas/ErrorResponseObject'
        newJobId:
          type: string
        retryJobId:
          type: string
      type: object
    RevertResponse:
      description: The response of revert upgrade package request.
      properties:
        activityId:
          description: The activityId of revert upgrade package job.
          type: string
        id:
          description: The id of upgrade package.
          type: string
      required:
      - activityId
      - id
      title: RevertResponse
      type: object
    Rman:
      properties:
        rmanCredsId:
          type: string
        rmanTnsAlias:
          type: string
        rmanTnsLocation:
          type: string
      type: object
    RmanProperties:
      properties:
        rmanCredentialId:
          type: string
        rmanTnsAdmin:
          type: string
        rmanTnsName:
          type: string
      type: object
    Role:
      description: Role.
      properties:
        description:
          description: Role description.
          type: string
        displayName:
          description: Role display name.
          maxLength: 2147483647
          minLength: 1
          pattern: ^[a-zA-Z0-9.@_]*$
          type: string
        hiddenRole:
          description: Hidden role.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: Role ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        localAssignees:
          description: The number of Local Identity Provider account users assigned with the role.
          type: integer
        name:
          description: Role name.
          maxLength: 2147483647
          minLength: 1
          pattern: ^[a-zA-Z0-9.@_]*$
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        privilegeList:
          description: Privilege list.
          items:
            $ref: '#/components/schemas/Privilege'
          type: array
        remoteAssignees:
          description: The number of remote Identity Provider groups assigned with the role.
          type: integer
        systemRole:
          description: System role.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        transferable:
          description: Transferable.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    Roles:
      description: Response body of the list of Roles.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Rsa:
      description: RSA SecurID information for MFA.
      properties:
        passcode:
          description: RSA SecurID passcode for MFA.
          type: string
      required:
      - passcode
      title: Rsa
      type: object
    Rule:
      description: The rule resource associates a filter with a rule action.
      properties:
        action:
          description: The action performed.
          enum:
          - ASSIGN_RESOURCE_GROUP
          type: string
        actionArgs:
          items:
            $ref: '#/components/schemas/ActionArg'
          type: array
        filterRef:
          $ref: '#/components/schemas/FilterRef'
        id:
          description: The ID of the rule.
          type: string
        lastRunAt:
          description: The date when the rule was last run.
          format: time
          type: string
        name:
          description: The name of the rule.
          type: string
      title: Rule
      type: object
    RulePatchBody:
      description: Allows a rule to be modified.
      properties:
        id:
          description: The ID of the rule.
          type: string
        name:
          description: The name of the rule.
          type: string
      title: RulePatchBody
      type: object
    RulePostBody:
      description: Rule associates a filter ID with a rule action.
      properties:
        action:
          description: The action performed.
          enum:
          - ASSIGN_RESOURCE_GROUP
          type: string
        actionArgs:
          items:
            $ref: '#/components/schemas/ActionArg'
          type: array
        filterRef:
          $ref: '#/components/schemas/FilterRef'
        lastRunAt:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of the rule.
          type: string
      title: RulePostBody
      type: object
    RunReportParameters:
      properties:
        filter:
          description: The filter expression.
          type: string
        orderby:
          description: The attributes and fields to sort by.
          type: string
        page:
          description: The page number for pagination.
          type: integer
        pageSize:
          description: The number for records per page.
          type: integer
        reportTemplateId:
          description: ID of the report template to be used to run the report.
          type: string
      type: object
    SWRepoFile:
      properties:
        Agents:
          items:
            $ref: '#/components/schemas/AgentInfo'
          type: array
        LastModified:
          type: string
        Name:
          type: string
        Path:
          type: string
        Size:
          format: int64
          type: integer
        Version:
          type: string
      type: object
    SWRepoFiles:
      properties:
        content:
          items:
            $ref: '#/components/schemas/SWRepoFile'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SampleReportResponse:
      properties:
        assetType:
          description: Asset Type.
          type: string
        successful:
          description: Count of successful jobs.
          type: number
      type: object
    Schedule:
      description: For the replication stage, a null schedule indicates that the replication starts when the primary backup completes.
      properties:
        dayOfMonth:
          description: Day of the month (1-31). If the day of the month less than the value, will use the last day of the month. For example, if dayOfMonth is 31, for April, it will be 30th, and for Febrary, it will be 29th for leap year, and 28th for non-leap year.
          format: int32
          maximum: 31
          minimum: 1
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        duration:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        frequency:
          enum:
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        genericDay:
          enum:
          - FIRST
          - LAST
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        interval:
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        month:
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        weekDays:
          items:
            enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            type: string
          maxItems: 7
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        weekOfMonth:
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ScheduleInfo:
      description: Protection schedule details
      properties:
        description:
          type: string
        nextScheduledTime:
          description: The next scheduled time for the activity. Follows the ISO 8601 date format.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          enum:
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
    SdrAction:
      description: '**SDR Action Detail** is the summary for server disaster recovery action data information.'
      properties:
        backupRef:
          $ref: '#/components/schemas/SdrBackupRef'
        elapsedSeconds:
          description: Server disaster recovery action elapsed seconds.
          format: int32
          type: integer
        error:
          description: Server disaster recovery action error.
          type: string
        id:
          description: Server disaster recovery action ID.
          type: string
        progress:
          description: Server disaster recovery action progress status.
          format: int32
          type: integer
        startTime:
          description: Server disaster recovery action start time.
          format: date-time
          type: string
        state:
          description: Server disaster recovery action state.
          type: string
        type:
          description: Server disaster recovery type.
          type: string
      type: object
    SdrBackup:
      description: '**SDR Backup Detail** is the summary for server disaster recovery backup data information.'
      properties:
        EventTriggerSource:
          description: Server disaster recovery Event trigger of backup
          type: string
        backupConsistencyType:
          description: Server disaster recovery Backup type.
          type: string
        backupTriggerSource:
          description: Server disaster recovery source of backup trigger.
          type: string
        checksum:
          description: Server disaster recovery backup checksum.
          type: string
        components:
          items:
            $ref: '#/components/schemas/SdrComponent'
          type: array
          uniqueItems: true
        configType:
          description: Configuration type of the server disaster recovery backup.
          type: string
        consistency:
          description: Server disaster recovery backup consistency.
          type: string
        creationTime:
          description: Server disaster recovery backup creation time.
          format: date-time
          type: string
        deployedPlatform:
          description: Platform on which server disaster recovery was running at the time of backup.
          type: string
        elapsedSeconds:
          description: Server disaster recovery backup elapsed seconds.
          format: int32
          type: integer
        error:
          description: Server disaster recovery backup error.
          type: string
        hostname:
          description: Server disaster recovery backup host name.
          type: string
        id:
          description: Server disaster recovery backup ID.
          type: string
        lockboxPassphrase:
          description: Server disaster recovery backup lockbox passphrase.
          type: string
        mfrManifestId:
          description: Server disaster recovery backup manifest ID.
          type: string
        mfrReplicationId:
          description: Server disaster recovery backup replication ID.
          type: string
        name:
          description: Server disaster recovery backup name.
          type: string
        noScheduledStorageAccess:
          type: boolean
        nodeId:
          description: Server disaster recovery backup node ID.
          type: string
        recover:
          description: Server disaster recovery backup recover flag.
          type: boolean
        recoverOptions:
          $ref: '#/components/schemas/RecoverOptions'
        sequenceNumber:
          description: Server disaster recovery backup sequence number.
          format: int32
          type: integer
        sizeInBytes:
          description: Server disaster recovery backup size.
          format: int64
          type: integer
        state:
          description: Server disaster recovery backup state.
          type: string
        version:
          description: Server disaster recovery backup version.
          type: string
        workflowTaskId:
          description: A PowerProtect Data Manager identifier for the task to associate this operation with.
          type: string
      type: object
    SdrBackupPostResponse:
      description: '**SDR Backup Post Response** is the response from the POST Create Backups API.'
      properties:
        activityId:
          description: Parent activity ID of the Server Disaster Recovery backup job.
          type: string
        id:
          description: Server Disaster Recovery backup ID.
          type: string
        taskId:
          deprecated: true
          description: Task ID of the Server Disaster Recovery backup job. (deprecated)
          type: string
      type: object
    SdrBackupRef:
      description: '**SDR Backup Ref Detail** is the summary for server disaster recovery action reference data object information.'
      properties:
        id:
          description: Server disaster recovery backup ID.
          type: string
      type: object
    SdrBackups:
      description: Server disaster recovery backup info.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SdrBackup'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SdrComponent:
      description: '**Component Detail** is the summary for Data Component register/unregister data information.'
      properties:
        backupPath:
          description: Toggle indicating backup path.
          type: string
        backupStatus:
          description: Toggle indicating backup status.
          type: string
        backupsEnabled:
          default: true
          description: Toggle indicating whether the data component actively creates backups. Default is true.
          type: boolean
        id:
          description: Unique ID of the data component.
          type: string
        isComponentInternal:
          description: Whether component is internal.
          type: boolean
        lastActivityId:
          description: Activity ID of the data component.
          type: string
        name:
          description: Name of the data component.
          type: string
        version:
          description: Version of the data component.
          type: string
      type: object
    SdrConfiguration:
      description: '**SDR Configuration Detail** is the summary for server disaster recovery configuration data information.'
      properties:
        activityId:
          description: Server disaster recovery configuration activity ID.
          type: string
        backupsEnabled:
          description: Server disaster recovery configuration backup enabled setting.
          type: boolean
        credentialId:
          description: Server disaster recovery configuration DD Boost credential ID (only for DD Boost).
          type: string
        credentialPassword:
          description: Server disaster recovery configuration credential password (only for DD Boost when restoring disaster recovery backup).
          type: string
        credentialType:
          description: Server disaster recovery configuration credential password type (PPDM or DDBOOST) (only for DD Boost when restoring disaster recovery backup).
          type: string
        credentialUsername:
          description: Server disaster recovery configuration DD Boost credential username (only for DD Boost when restoring disaster recovery backup).
          type: string
        id:
          description: Server disaster recovery configuration ID.
          type: string
        replicationTargets:
          description: Server disaster recovery configuration remote repository DDs for replication.
          items:
            $ref: '#/components/schemas/SdrReplicationTarget'
          type: array
        repositoryFilesystem:
          description: 'Server disaster recovery configuration filesystem: NETWORK_FILE_SYSTEM or BOOST_FILE_SYSTEM'
          type: string
        repositoryHost:
          description: Server disaster recovery configuration host.
          type: string
        repositoryPath:
          description: Server disaster recovery configuration path or DD Boost storage unit name.
          type: string
        retentionLockEnabled:
          description: Server disaster recovery configuration retention lock enabled setting.
          type: boolean
        type:
          description: Server disaster recovery configuration type - Integrated Storage or DD.
          type: string
      required:
      - repositoryHost
      - repositoryPath
      - type
      type: object
    SdrConfigurations:
      description: Server disaster recovery backup information.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SdrConfiguration'
          type: array
      type: object
    SdrEventNotification:
      description: Server disaster recovery event notification information.
      properties:
        componentName:
          description: Name of the component initiating the request. (Ex. configManager, AAA)
          type: string
        reason:
          description: Reason for generating event notification. (Ex. asset_update, credential_change, policy_update, user_add, inventorySource_add)
          type: string
        type:
          description: Type of event notification.
          enum:
          - BACKUP_NOTIFY
          type: string
      required:
      - type
      - componentName
      - reason
      title: SdrEventNotification
      type: object
    SdrHost:
      description: '**SDR Host Detail** is the summary for server disaster recovery host data information.'
      properties:
        hostname:
          description: Server disaster recovery host name.
          type: string
        id:
          description: Server disaster recovery host ID.
          type: string
        nodeId:
          description: Server disaster recovery host node ID.
          type: string
        version:
          description: Server disaster recovery host version.
          type: string
      type: object
    SdrHosts:
      properties:
        content:
          description: Server disaster recovery backup host info.
          items:
            $ref: '#/components/schemas/SdrHost'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SdrReplicationTarget:
      description: '**SDR Replication Target** is the summary for server disaster recovery replication configuration data information.'
      properties:
        credentialId:
          description: Server disaster recovery Configuration Replication DD Boost credential ID.
          type: string
        dataTargetId:
          description: Server disaster recovery Configuration replication data target ID.
          type: string
        lastActivityId:
          description: Server disaster recovery configuration activity ID for configuring remote repository.
          type: string
        storageSystemId:
          description: Server disaster recovery Configuration DD storage system ID.
          type: string
        type:
          description: Replication Target type.
          enum:
          - DATA_DOMAIN_SYSTEM
          type: string
      type: object
    SearchCluster:
      description: Search Cluster Information
      properties:
        activityId:
          description: Activity ID for the operation
          type: string
        config:
          $ref: '#/components/schemas/SearchClusterConfig'
        id:
          description: ID.
          type: string
        maintenanceMode:
          description: Search cluster is in maintenance mode.
          type: boolean
        name:
          description: Name to associate with the search cluster.
          type: string
        state:
          description: State of the search cluster.
          enum:
          - INACTIVE
          - OPERATIONAL
          - DISABLED
          - DISABLE_PENDING
          - SUSPENDED
          - DEGRADED
          - FAILED
          type: string
        stateDetail:
          description: Detail of the search cluster state.
          type: string
        summary:
          $ref: '#/components/schemas/SearchClusterSummary'
        suspendedBy:
          description: User last update the cluster.
          enum:
          - USER
          - SYSTEM
          type: string
        updatedBy:
          description: User who last updated the cluster.
          type: string
      required:
      - name
      - state
      type: object
    SearchClusterConfig:
      description: Configuration properties of the search cluster.
      properties:
        activityId:
          description: Activity ID for the operation
          type: string
        indexRetentionDays:
          description: Days after which the indexing catalog should be deleted.
          format: int32
          type: integer
      type: object
    SearchClusterLogBundle:
      description: Log Bundle Resource
      properties:
        config:
          $ref: '#/components/schemas/SearchClusterLogBundleConfig'
        id:
          description: ID.
          type: string
        status:
          $ref: '#/components/schemas/SearchClusterLogBundleStatus'
      required:
      - config
      - status
      type: object
    SearchClusterLogBundleConfig:
      properties:
        logBundleRange:
          $ref: '#/components/schemas/SearchClusterLogBundleRange'
        logDirectory:
          description: Location of the log directory.
          type: string
      required:
      - logBundleRange
      - logDirectory
      type: object
    SearchClusterLogBundleRange:
      description: Date range to select files based on modification time.
      properties:
        endDate:
          description: Range end date.
          type: string
        startDate:
          description: Range start date.
          type: string
      required:
      - endDate
      - startDate
      type: object
    SearchClusterLogBundleStatus:
      properties:
        logBundlePath:
          description: The generated log bundle.
          readOnly: true
          type: string
        progress:
          description: Current log bundle collection progress.
          format: int32
          readOnly: true
          type: integer
        state:
          description: Current log bundle state.
          enum:
          - Pending
          - Queued
          - Running
          - Ready
          - Failure
          readOnly: true
          type: string
        taskId:
          description: Task ID for the operation.
          readOnly: true
          type: string
      type: object
    SearchClusterManagement:
      description: Management Request Information
      properties:
        activityId:
          description: Activity ID for the operation
          type: string
        clusterId:
          description: Cluster ID for the operation.
          type: string
        operation:
          description: Operation to be carried out.
          enum:
          - ENABLE
          - DISABLE
          - SUSPEND
          - RESUME
          - POWER_ON
          - POWER_OFF
          - UPGRADE
          - ENTER_MAINTENANCE_MODE
          - EXIT_MAINTENANCE_MODE
          - DEPLOY_NODES
          - DELETE_NODES
          - RETRY_UPGRADE
          type: string
      required:
      - clusterId
      - operation
      type: object
    SearchClusterSummary:
      description: Current summary of the search cluster.
      properties:
        diskCacheNfsServer:
          description: NFS server hosting disk cache.
          type: string
        lastIndexingActivitySyncTime:
          description: Last time PowerProtect Data Manager indexing activities were synced.
          format: date-time
          type: string
        lastMetadataSyncTime:
          description: Last index synchronization time.
          format: date-time
          type: string
        lastUpdateMilestone:
          description: The last successful update milestone completed.
          type: string
        nodes:
          description: Summary of node status.
          items:
            $ref: '#/components/schemas/NodeSummary'
          type: array
        totalAssets:
          description: Total assets targeted for index.
          format: int64
          type: integer
        totalAssetsIndexed:
          description: Total assets indexed.
          format: int64
          type: integer
        totalDiskCapacity:
          description: Aggregate disk capacity of all nodes.
          format: int64
          type: integer
        totalDiskUsage:
          description: Aggregate disk usage of all nodes.
          format: int64
          type: integer
        totalFailed:
          description: Total nodes in failed state.
          format: int32
          type: integer
        totalNodes:
          description: Total deployed search nodes.
          format: int32
          type: integer
        updateRetryCount:
          description: Number of times the update has been retried since it was last successful.
          format: int64
          type: integer
      type: object
    SearchClusters:
      description: Get Search Clusters.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SearchCluster'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SearchNode:
      description: Search Node Information
      properties:
        activityId:
          description: Activity ID for the operation
          type: string
        adminCredentials:
          $ref: '#/components/schemas/NodeCredentials'
        deploymentConfig:
          $ref: '#/components/schemas/SearchNodeDeploymentConfig'
        hostName:
          description: FQDN or IP address of the search node.
          type: string
        id:
          description: ID.
          type: string
        instanceUuid:
          description: Instance ID of the search node.
          type: string
        inventorySourceId:
          description: The vCenter inventory source ID where the node is deployed.
          type: string
        nodeType:
          description: 'Node type: Master, Secondary.'
          type: string
        rootCredentials:
          $ref: '#/components/schemas/NodeCredentials'
        status:
          $ref: '#/components/schemas/SearchNodeStatus'
        vmMoref:
          description: VM managed object reference (MoRef) of the search node.
          type: string
      required:
      - deploymentConfig
      - hostName
      - inventorySourceId
      - nodeType
      type: object
    SearchNodeAdditionalVMNetworks:
      properties:
        fqdn:
          type: string
        gateway:
          type: string
        interfaceName:
          type: string
        ipAddress:
          type: string
        ipProtocol:
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
        ipV6Address:
          type: string
        ipV6AutoAssign:
          type: boolean
        ipV6Gateway:
          type: string
        ipV6PrefixLen:
          type: integer
        macAddress:
          type: string
        multiVlanEnabled:
          type: boolean
        netMask:
          type: string
        networkMoref:
          type: string
        vlans:
          items:
            $ref: '#/components/schemas/SearchNodeAdditionalVMNetworksVlans'
          type: array
      type: object
    SearchNodeAdditionalVMNetworksRoutes:
      properties:
        gateway:
          type: string
        ipV6Gateway:
          type: string
        ipV6PrefixLen:
          type: integer
        netmask:
          type: string
        source:
          type: string
        type:
          type: string
      type: object
    SearchNodeAdditionalVMNetworksVlans:
      properties:
        gateway:
          type: string
        ipAddress:
          type: string
        ipV6Address:
          type: string
        ipV6AutoAssign:
          type: boolean
        ipV6Gateway:
          type: string
        ipV6PrefixLen:
          type: integer
        mtu:
          type: integer
        netmask:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/SearchNodeAdditionalVMNetworksRoutes'
          type: array
        vlanId:
          type: integer
      type: object
    SearchNodeDeploymentConfig:
      description: Deployment properties of the node.
      properties:
        additionalVMNetworks:
          items:
            $ref: '#/components/schemas/SearchNodeAdditionalVMNetworks'
          type: array
        dns:
          description: List of DNS servers separated by comma.
          type: string
        fqdn:
          description: VM FQDN.
          type: string
        gateway:
          description: IP gateway.
          type: string
        ipAddress:
          description: VM IP address.
          type: string
        ipProtocol:
          description: 'IP Protocol: IPv4 (default), IPv6, or Dual'
          type: string
        ipV6Address:
          description: VM IP address when using IPv6.
          type: string
        ipV6AutoAssign:
          type: boolean
        ipV6Gateway:
          description: IPv6 gateway.
          type: string
        ipV6PrefixLen:
          description: IPv6 network mask.
          type: integer
        location:
          $ref: '#/components/schemas/SearchNodeDeploymentLocation'
        multiVlanEnabled:
          type: boolean
        netMask:
          description: Network mask.
          type: string
        networkMoref:
          description: Network MoRef for the node VM.
          type: string
        ovafile:
          description: OVA file name to use for deployment.
          type: string
        timeZone:
          description: Time zone (default is cuurent PowerProtect Data Manager timezone).
          type: string
        vlans:
          items:
            $ref: '#/components/schemas/SearchNodeAdditionalVMNetworksVlans'
          type: array
        vmName:
          description: VM name.
          type: string
      required:
      - additionalVMNetworks
      - dns
      - fqdn
      - gateway
      - ipAddress
      - ipProtocol
      - location
      - netMask
      - networkMoref
      - ovafile
      - vmName
      type: object
    SearchNodeDeploymentLocation:
      description: Deployment location of the node.
      properties:
        clusterMoref:
          description: Specify cluster MoRef. Optional if a host MoRef or resource pool MoRef is specified.
          type: string
        datastoreMoref:
          description: Moref of datastore to use for node storage.
          type: string
        folderMoref:
          description: VM folder Moref.
          type: string
        hostMoref:
          description: Specify Host moref. Not required if hostMoref is provided.
          type: string
        resourcePoolMoref:
          description: Specify a resource pool or a cluster. Not required if hostMoref is provided.
          type: string
      required:
      - datastoreMoref
      type: object
    SearchNodeManagement:
      description: Manage Search Cluster Node
      properties:
        activityId:
          description: Activity ID for the operation
          type: string
        nodeId:
          description: Node II for the operation.
          type: string
        operation:
          description: Operation to be carried out.
          enum:
          - REDEPLOY
          - DECOMMISSION
          type: string
      required:
      - nodeId
      - operation
      type: object
    SearchNodeStatistics:
      description: Statistics of the Node
      properties:
        diskCapacity:
          description: Maximum disk capacity in bytes.
          format: int64
          type: integer
        diskUsage:
          description: Current disk usage in bytes.
          format: int64
          type: integer
      type: object
    SearchNodeStatus:
      description: Status of the node.
      properties:
        aliases:
          description: Aliases as known to DNS.
          items:
            type: string
          type: array
        deployed:
          description: Specifies if the node VM is deployed.
          type: boolean
        deployedTime:
          description: Time when proxy was deployed (UTC ISO 8601 format).
          type: string
        hostedComputeResource:
          description: Hosted compute resource for the node.
          type: string
        lastCheckedTime:
          description: Last time periodic health check was performed (UTC ISO 8601 format).
          type: string
        nodeStats:
          $ref: '#/components/schemas/SearchNodeStatistics'
        nodeStatus:
          description: Current node status.
          enum:
          - Deploying
          - Deployed
          - Registering
          - Registered
          - DisablePending
          - Disabled
          - Ready
          - Failed
          - DeletePending
          - Deleted
          - MaintenancePending
          - Upgraded
          - PowereonPending
          - PoweroffPending
          - Poweredoff
          type: string
        nodeStatusDetail:
          description: Detail of the node status.
          type: string
        powerState:
          description: VM power state. Value is On, Off, or Suspended.
          type: string
        vcenterName:
          type: string
        version:
          description: The application's version.
          type: string
      type: object
    SearchNodes:
      properties:
        content:
          items:
            $ref: '#/components/schemas/SearchNode'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SecurityGroup:
      description: Security group in the cloud.
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ServiceLevelAgreement:
      properties:
        createdAt:
          description: The time when this service level agreement was created.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: The description of this service level agreement.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        enabled:
          description: The status of the service level agreement.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: The ID of this service level agreement.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of this service level agreement.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        serviceLevelObjectives:
          description: The service level objectives that are contained in this service level agreement.
          items:
            $ref: '#/components/schemas/ServiceLevelObjectiveConfiguration'
          type: array
          x-ppdm-filter: false
          x-ppdm-sort: false
        stageType:
          description: The stage type for which this service level agreement is applicable.
          enum:
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - CLOUD
          - CLOUD_TIER
          - CDR
          - ALL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        summary:
          $ref: '#/components/schemas/ServiceLevelAgreementSummary'
        updatedAt:
          description: The time when this service level agreement was updated.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ServiceLevelAgreementSummary:
      description: service level agreement metrics summary
      properties:
        outOfComplianceAssets:
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        outOfComplianceObjectives:
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        policiesAtRisk:
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalAssets:
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalPolicies:
          format: int64
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
      title: ServiceLevelAgreementSummary
      type: object
    ServiceLevelAgreements:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ServiceLevelAgreement'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ServiceLevelObjective:
      description: ServiceLevelObjective
      properties:
        description:
          description: Description of the service level objective.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: ID of the service level objective.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        mandatory:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the service level objective.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        order:
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        ruleExecutionClass:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stageType:
          description: Stage type of the service level objective.
          enum:
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - CLOUD_TIER
          - PRIMARY
          - CDR
          - ALL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        valueCardinality:
          description: Value cardinality of the service level objective.
          enum:
          - SINGLE
          - FLAT_LIST
          - TYPED_LIST
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    ServiceLevelObjectiveConfiguration:
      properties:
        activeEnforcement:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        assetType:
          deprecated: true
          description: The asset type for the predefined service level object.
          enum:
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          readOnly: true
          type: string
        definitionId:
          description: The ID of the predefined service level object.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inUse:
          description: Indicates whether the service level objective is in use.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: The name of the predefined service level object.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stageType:
          description: The stage type of the predefined service level objects.
          enum:
          - PROTECTION
          - PROMOTION
          - REPLICATION
          - CLOUD_TIER
          - CDR
          - ALL
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        valuesList:
          description: Values that belong to the service level objective.
          items:
            $ref: '#/components/schemas/ObjectiveValue'
          type: array
      type: object
    ServiceLevelObjectives:
      properties:
        content:
          items:
            $ref: '#/components/schemas/ServiceLevelObjective'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    ShareCredentials:
      properties:
        id:
          type: string
        password:
          type: string
        username:
          type: string
      title: ShareCredentials
      type: object
    ShareResourceRequest:
      properties:
        credentials:
          $ref: '#/components/schemas/ShareCredentials'
        source:
          $ref: '#/components/schemas/SourceRequest'
      title: ShareResourceRequest
      type: object
    ShareResourceResponse:
      properties:
        connectivity:
          enum:
          - REACHABLE
          - NOT_REACHABLE
          - TIMEOUT
          type: string
        message:
          type: string
      title: ShareResourceResponse
      type: object
    SingleApplicationOfInterest:
      properties:
        apiVersion:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        plcCompatible:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        version:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    SlaMetrics:
      description: REST model for SLA metrics.
      properties:
        assetMetrics:
          description: Asset-level metrics.
          items:
            $ref: '#/components/schemas/AssetMetric'
          type: array
        endTime:
          description: Metrics end time.
          format: date-time
          type: string
        failedSlaCount:
          description: Number of failed Service Level Agreements.
          format: int64
          type: integer
        inComplianceAssetCount:
          description: Number of assets in compliance.
          format: int64
          type: integer
        inCompliancePolicyCount:
          description: Number of policies in compliance.
          format: int32
          type: integer
        outOfComplianceAssetCapacity:
          description: Capacity of assets out of compliance.
          format: double
          type: number
        outOfComplianceAssetCount:
          description: Number of assets out of compliance.
          format: int64
          type: integer
        outOfCompliancePolicyCount:
          description: Number of policies out of compliance.
          format: int32
          type: integer
        startTime:
          description: Metrics start time.
          format: date-time
          type: string
      type: object
    Smtp:
      description: SMTP
      properties:
        id:
          type: string
        mailFrom:
          type: string
        mailServer:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        recipient:
          type: string
        username:
          type: string
      required:
      - mailServer
      type: object
    SmtpTest:
      description: SMTP Test
      properties:
        mailFrom:
          type: string
        mailServer:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        recipient:
          type: string
        username:
          type: string
      required:
      - mailServer
      - recipient
      type: object
    Smtps:
      description: Get SMTP server list.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Smtp'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    Source:
      description: Source of the notification.
      properties:
        type:
          enum:
          - DATA_MANAGER
          - OPERATING_ENVIRONMENT
          - PROTECTION_STORAGE
          type: string
      type: object
      x-ppdm-filter: true
      x-ppdm-sort: true
    SourceRequest:
      properties:
        assetId:
          type: string
        url:
          type: string
      title: SourceRequest
      type: object
    SplitterInfo:
      properties:
        numberOfAttachedRPAClusters:
          format: int32
          type: integer
          x-ppdm-filter: true
          x-ppdm-sort: true
        rpaConnectivityInfo:
          items:
            $ref: '#/components/schemas/RPAConnectivity'
          type: array
          uniqueItems: true
        status:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        uid:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        version:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    StateDetails:
      description: Data Model to provide additional state information
      properties:
        message:
          description: Detailed state information
          type: string
    StatsNotAvailableInfo:
      description: Information about hosts relative to support for statistics.  A host may require an agent upgrade or the application may not support statistics.
      properties:
        assetId:
          description: For future use.
          type: string
        assetName:
          description: For future use.
          type: string
        hostname:
          type: string
        version:
          type: string
      type: object
    StatusError:
      description: Agent Registration failure error details
      properties:
        code:
          type: string
        reason:
          type: string
        remediation:
          type: string
      title: StatusError
      type: object
    StorageCompStats:
      description: The statistic from storage
      properties:
        cumulativeSizeInBytes:
          description: Cumulative file size
          format: int64
          type: integer
        dedupedPreCompSizeInBytes:
          description: Size after removing duplication and before local compression
          format: int64
          type: integer
        redundantSegmentsCount:
          description: Redundant segments (already existing on protection storage) in file
          format: int64
          type: integer
        segmentsCount:
          description: Total segments in file
          format: int64
          type: integer
      type: object
    StorageContainer:
      description: Cloud DR available storage containers.
      properties:
        cloudAccountId:
          description: ID of cloud account.
          type: string
        id:
          type: string
        location:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    StorageContainers:
      properties:
        content:
          items:
            $ref: '#/components/schemas/StorageContainer'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    StorageContextPairs:
      properties:
        rootContextId:
          type: string
        storageArrayId:
          type: string
      type: object
    StorageLocation:
      description: Detailed information for location of storage.
      properties:
        capacityBytes:
          type: string
        id:
          type: string
        location:
          type: string
        name:
          type: string
        nodeId:
          type: string
        quotaBytes:
          type: string
        quotaRemainingBytes:
          type: string
        replication:
          type: boolean
        replicationLocations:
          items:
            $ref: '#/components/schemas/StorageLocation'
          type: array
        storageSystemType:
          enum:
          - VMAX_STORAGE_SYSTEM
          - DATA_DOMAIN_SYSTEM
          - CDR_REGION_SYSTEM
          - UNITY_APPLIANCE
          - POWER_STORE_APPLIANCE
          - POWER_SCALE_APPLIANCE
          - GENERIC_NAS_APPLIANCE
          type: string
        storageUnits:
          description: Storage unit list for the asset.
          items:
            properties:
              id:
                type: string
              name:
                type: string
            type: object
          type: array
        totalCopyCount:
          type: string
        totalSizeBytes:
          type: string
        unsupportedFeatures:
          description: If set, indicates if there are any unsupported features.
          items:
            enum:
            - DISCOVERY
            - STORAGE_TARGET_CREATION
            - NETWORK_NAMING
            - PREFERRED_NETWORK_SELECTION
            - GRANULAR_RESTORE
            readOnly: true
            type: string
          readOnly: true
          type: array
        usedBytes:
          type: string
      type: object
    StorageMetricsDetail:
      description: The aggregation of all storage metrics.
      properties:
        availablePercentage:
          description: The percent of storage available.
          format: int32
          type: integer
        availableSize:
          description: The amount of storage available.
          format: double
          type: number
        systemName:
          description: The system name.
          type: string
        totalSize:
          description: total amount of storage
          format: double
          type: number
        usedPercentage:
          description: The percentage of the storage used.
          format: int32
          type: integer
        usedSize:
          description: The amount of storage used.
          format: double
          type: number
      type: object
    StorageMetricsStats:
      properties:
        criticalSystemsCount:
          format: int32
          type: integer
        nonCriticalSystemsCount:
          format: int32
          type: integer
        systemsBySpaceUtilization:
          items:
            $ref: '#/components/schemas/StorageMetricsDetail'
          type: array
      type: object
    StorageSystem:
      description: Information of the storage system.
      properties:
        _embedded:
          $ref: '#/components/schemas/StorageSystemEmbedded'
        capacityUtilization:
          description: Physical capacity utilization of the storage system.
          format: double
          type: number
          x-ppdm-filter: true
          x-ppdm-sort: true
        createdAt:
          description: Create time of the storage system.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        ddLocationId:
          description: ID of location for the PowerProtect DD storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        description:
          description: Storage System Description.
          type: string
        details:
          $ref: '#/components/schemas/StorageSystemDetails'
        id:
          description: ID of the storage system in Elasticsearch. Use in GET operations or requests that accept ID in the path.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscovered:
          description: Last discovery starts time of the storage system.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryAt:
          description: Last discovery end time of the storage system.
          format: date-time
          readOnly: true
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryResult:
          $ref: '#/components/schemas/DiscoveryResult'
        lastDiscoveryStatus:
          description: 'Status of the last discovery for the storage system. Valid values are following:

            - NEW

            - DETECTED

            - NOT_DETECTED

            - DELETED'
          enum:
          - NEW
          - DETECTED
          - NOT_DETECTED
          - DELETED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastDiscoveryTaskId:
          description: Last discovery task ID of the storage system.
          readOnly: true
          type: string
        local:
          description: Location of the storage system. True for internal storage system and false for external storage system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        locationId:
          description: ID of location for the storage system.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: Name of the storage system. It can be used to show on UI page.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        operatingSystem:
          $ref: '#/components/schemas/StorageSystemOperatingSystem'
        parentId:
          description: If storage system is a member of a DD system pool, this value is the ID of the storage system that represents the pool.
          type: string
          x-ppdm-filter: true
        purpose:
          description: Indicates how the storage system is used.
          enum:
          - NAS_SHARE
          - POWERSTORE_BLOCK
          - VAULT
          type: string
        readiness:
          $ref: '#/components/schemas/Readiness'
        replicationEncryptionMode:
          $ref: '#/components/schemas/ReplicationEncryptionMode'
        retentionLockModes:
          description: A set of retention lock modes that are licensed and enabled on a DD system. Valid values are GOVERNANCE or COMPLIANCE (or both).
          items:
            enum:
            - GOVERNANCE
            - COMPLIANCE
            type: string
          type: array
          uniqueItems: true
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: Type of the storage system.
          enum:
          - VMAX_STORAGE_SYSTEM
          - DATA_DOMAIN_SYSTEM
          - CDR_REGION_SYSTEM
          - GENERIC_NAS_APPLIANCE
          - POWER_STORE_APPLIANCE
          - UNITY_APPLIANCE
          - DATA_DOMAIN_APPLIANCE_POOL
          - POWER_SCALE_APPLIANCE
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        unsupportedFeatures:
          description: If set, indicates if there are any unsupported features.
          items:
            enum:
            - DISCOVERY
            - STORAGE_TARGET_CREATION
            - NETWORK_NAMING
            - PREFERRED_NETWORK_SELECTION
            - GRANULAR_RESTORE
            readOnly: true
            type: string
          readOnly: true
          type: array
        updatedAt:
          description: Update time of the storage system.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    StorageSystemCapacity:
      properties:
        capacityStatus:
          description: Capacity status of the PowerProtect DD system by tier type.
          enum:
          - GOOD
          - FAIR
          - POOR
          type: string
        compressionFactor:
          description: Compression factor of the PowerProtect DD system by tier type.
          format: double
          type: number
        licensedUtilization:
          description: Physical licensed capacity utilization of the PowerProtect DD system by tier type.
          format: double
          type: number
        percentUsed:
          description: Percentage of capacity used (capacity utilization) of the PowerProtect DD system by tier type.
          format: double
          type: number
        reductionPercentage:
          description: Reduction percentage of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLicensedSize:
          description: Total physical licensed capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLogicalSize:
          description: Total logical capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalLogicalUsed:
          description: Total logical capacity used in the PowerProtect DD system by tier type.
          format: double
          type: number
        totalPhysicalSize:
          description: Total physical capacity of the PowerProtect DD system by tier type.
          format: double
          type: number
        totalPhysicalUsed:
          description: Total physical capacity used in the PowerProtect DD system by tier type.
          format: double
          type: number
        type:
          description: Tier type of the PowerProtect DD system.
          enum:
          - ACTIVE
          - CLOUD
          - COMBINED
          type: string
      type: object
    StorageSystemDataDomain:
      description: Details of the PowerProtect DD system.
      properties:
        capacities:
          items:
            $ref: '#/components/schemas/Capacity'
          type: array
          uniqueItems: true
        capacityQuotasSupported:
          description: Indicates if capacity quota is supported.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        cloudEnabled:
          description: Whether Cloud is enabled or not on the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        cloudTierLicensed:
          description: Cloud Tier License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        compressionFactor:
          deprecated: true
          description: 'Compression factor of the PowerProtect DD system.

            - Example: 1.44E-4'
          format: double
          type: number
          x-ppdm-filter: true
          x-ppdm-sort: true
        datacenterDescription:
          description: Description of the data center for the system pool.
          type: string
        datacenterName:
          description: Name of the system pool's datacenter.
          type: string
        ddboostLicensed:
          description: DDBoost License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        encryptionLicensed:
          description: Encryption License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        model:
          description: 'Model of the PowerProtect DD system.

            - Example: DD VE Version 4.0'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        percentUsed:
          deprecated: true
          description: Percent of capacity used for the PowerProtect DD system.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        preferredInterfaces:
          items:
            $ref: '#/components/schemas/PreferredInterface'
          type: array
          uniqueItems: true
        preferredNetworkSupported:
          description: Indicates if preferred network interface is supported.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        replicationEncryptionEnabled:
          description: Encryption of replication for the PowerProtect DD system. True for enabling the encryption and false for disabling the encryption.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        replicationLicensed:
          description: Replication License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        retentionLockComplianceEnabled:
          type: boolean
        retentionLockComplianceLicensed:
          description: Retention Lock Compliance License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        retentionLockGovernanceLicensed:
          description: Retention Lock Governance License of the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        retentionLockSupported:
          description: Indicates if retention lock is supported.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        serialNumber:
          description: Serial number of the PowerProtect DD system.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        streamQuotasSupported:
          description: Indicates if stream quota is supported.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        totalSize:
          deprecated: true
          description: The total capacity in bytes of the PowerProtect DD system.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalUsed:
          deprecated: true
          description: The total used capacity in bytes of the PowerProtect DD system.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        vdiskEnabled:
          description: Whether vDisk service is enabled or not on the PowerProtect DD system.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        version:
          description: 'Version of the PowerProtect DD system.

            - Example: PowerProtect DD system OS 6.2.0.10-615548'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    StorageSystemDetails:
      description: Details of the storage system.
      properties:
        dataDomain:
          $ref: '#/components/schemas/StorageSystemDataDomain'
        recoverPoint:
          $ref: '#/components/schemas/StorageSystemRecoverPoint'
        vmax:
          $ref: '#/components/schemas/StorageSystemVmax'
        xio:
          $ref: '#/components/schemas/StorageSystemXio'
      type: object
    StorageSystemEmbedded:
      properties:
        inventorySource:
          $ref: '#/components/schemas/EmbeddedIdName'
        location:
          $ref: '#/components/schemas/EmbeddedIdName'
      readOnly: true
      type: object
    StorageSystemMetrics:
      description: Metrics for the PowerProtect DD system.
      properties:
        capacityStatusSummary:
          items:
            $ref: '#/components/schemas/CapacityStatusSummary'
          type: array
          uniqueItems: true
      title: StorageSystemMetrics
      type: object
    StorageSystemOperatingSystem:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    StorageSystemRecoverPoint:
      description: Details of the recover point.
      properties:
        protectedSpace:
          description: Protected space of RecoverPoint.
          format: double
          type: number
          x-ppdm-filter: true
          x-ppdm-sort: true
        serialNumber:
          description: Serial number of RecoverPoint.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalCapacityManaged:
          description: Total capacity managed for RecoverPoint.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        version:
          description: Version of RecoverPoint.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    StorageSystemVmax:
      description: Details of the VMAX.
      properties:
        cacheSize:
          description: The total size in bytes of the cache in the VMAX.
          format: int32
          type: integer
          x-ppdm-filter: false
          x-ppdm-sort: false
        model:
          description: Model of the VMAX.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        serialNumber:
          description: Serial number of the VMAX.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalSize:
          description: The total capacity in bytes of the VMAX.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalUsed:
          description: The total used capacity in bytes of the VMAX.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
      type: object
    StorageSystemXio:
      description: Details of the XtremIO.
      properties:
        serialNumber:
          description: Serial number of the XtremIO.
          type: string
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalSize:
          description: The total capacity in bytes of the XtremIO.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        totalUsed:
          description: The used capacity in bytes of the XtremIO.
          format: double
          type: number
          x-ppdm-filter: false
          x-ppdm-sort: false
        version:
          description: Version of XtremIO.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    StorageSystems:
      properties:
        content:
          items:
            $ref: '#/components/schemas/StorageSystem'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    StorageUnit:
      properties:
        combinedStreamHardLimit:
          format: int64
          type: integer
        combinedStreamSoftLimit:
          format: int64
          type: integer
        hardLimit:
          format: int64
          type: integer
        name:
          type: string
        nativeId:
          description: The PowerProtect DD system ID for the storage unit.
          type: string
        nativeUri:
          description: The PowerProtect DD system URI for the storage unit.
          type: string
        softLimit:
          format: int64
          type: integer
        tenantUnit:
          type: string
      type: object
    StorageUnitCreate:
      properties:
        combinedStreamHardLimit:
          format: int64
          type: integer
        combinedStreamSoftLimit:
          format: int64
          type: integer
        hardLimit:
          format: int64
          type: integer
        name:
          type: string
        nativeId:
          description: The PowerProtect DD system ID for the storage unit.
          type: string
        nativeUri:
          description: The PowerProtect DD system URI for the storage unit.
          type: string
        softLimit:
          format: int64
          type: integer
        tenantUnit:
          type: string
      required:
      - name
      type: object
    Strategy:
      properties:
        overwriteExisting:
          type: boolean
        restoreToOriginalPath:
          type: boolean
        retainFolderHierarchy:
          type: boolean
        sourceFileCollisionHandling:
          type: string
      title: Strategy
      type: object
    SubComponent:
      description: enter description here
      properties:
        name:
          enum:
          - VM_DIRECT
          - POWER_PROTECT_DATA_MANAGER
          - APP_AGENT
          - INTEGRATED_STORAGE
          type: string
        version:
          type: string
      type: object
    SubComponentDetails:
      description: This page includes the details of all subcomponents.
      properties:
        attributes:
          additionalProperties:
            type: string
          description: Attributes of the subcomponent.
          type: object
        componentName:
          description: Name of component.
          type: string
        dateInstalled:
          description: Date upgrade installed.
          format: date-time
          type: string
        displayName:
          description: Display name of component.
          type: string
        errorMessage:
          description: Error message if error occurs.
          type: string
        fileName:
          description: Name of subcomponent bin file.
          type: string
        fromVersion:
          description: The version before upgrade.
          type: string
        minimumVersion:
          description: Minimum compatible version of this subcomponent that is supported by this upgrade package.
          type: string
        progress:
          default: 0
          description: Subcomponent upgrade progress.
          type: integer
        skipUpgrade:
          default: false
          description: Whether this subcomponent is skipped in software update.
          type: boolean
        skippable:
          default: NOT_SUPPORTED
          description: The skippable state of subcomponent.
          enum:
          - NOT_SUPPORTED
          - NOT_ALLOWED
          - ALLOWED
          type: string
        skippableDetails:
          description: Detail information about system behavior if this component is skipped in software update.
          readOnly: true
          type: string
        stateChangedTime:
          description: sub component state changed time
          format: date-time
          type: string
        subComponentUpgradeState:
          description: The state of upgrade process in subcomponent.
          enum:
          - PROCESSING
          - AVAILABLE
          - UPGRADING
          - UPGRADED
          - FAILED
          - SKIPPED
          type: string
        upgradeError:
          $ref: '#/components/schemas/MessageDetails'
        upgradeMode:
          description: Upgrade mode of subcomponent.
          enum:
          - DU
          - MDU
          - NDU
          type: string
        upgradeStarted:
          description: Start time of the upgrade.
          type: string
        upgradeVersion:
          description: Upgrade component version.
          type: string
      title: SubComponentDetails
      type: object
    Subnet:
      description: Subnet in the cloud.
      properties:
        addressSpace:
          type: string
        occupiedIPs:
          items:
            type: string
          type: array
        subnetId:
          type: string
        subnetName:
          type: string
        subnetZone:
          type: string
      type: object
    SupportedUpgrade:
      description: Proxy ugrade for protection engine API.
      properties:
        minimumProxyVersion:
          description: minimumProxyVersion
          type: string
        upgradeType:
          description: upgradeType
          enum:
          - DU
          - NDU
          type: string
      required:
      - minimumProxyVersion
      - upgradeType
      type: object
    SupportedUpgradeResource:
      description: Supported Upgrade Resource
      properties:
        fromVersion:
          description: fromVersion
          type: string
        messages:
          description: messages
          items:
            $ref: '#/components/schemas/PreCheckMessage'
          type: array
        minimumProxyVersion:
          description: minimumProxyVersion
          type: string
        minimumSkippableVersion:
          description: The minimum version that can be skipped.
          type: string
        protectionType:
          enum:
          - VM
          - Kubernetes
          - NAS
          type: string
        skippable:
          type: boolean
        toVersion:
          description: toVersion
          type: string
        upgradeType:
          description: upgradeType
          enum:
          - DU
          - MDU
          - NDU
          type: string
      required:
      - minimumProxyVersion
      - minimumSkippableVersion
      - fromVersion
      - toVersion
      - protectionType
      type: object
    SyncInstance:
      description: The sync instance (SyncInstance) that is required to start the sync process.
      properties:
        activityId:
          description: The activity ID (activityId) of the configuration.
          type: string
        cutoffTime:
          description: The end time window for querying the metadata.
          type: string
        directions:
          description: An array of system Ids.
          items:
            $ref: '#/components/schemas/SyncInstanceDirection'
          type: array
        dryRun:
          type: boolean
        id:
          description: The ID of the configuration.
          type: string
        level:
          description: Level of synchronization.
          enum:
          - FULL
          - INCREMENTAL
          type: string
        owner:
          $ref: '#/components/schemas/SystemId'
        resilienceScaned:
          type: boolean
        since:
          description: The start time window for querying the metadata.
          type: string
        type:
          description: Type of synchronization.
          enum:
          - REPLICA
          - PROTECTION
          type: string
      required:
      - directions
      - level
      - type
      type: object
    SyncInstanceDirection:
      description: Sync Instance Direction.
      properties:
        dst:
          $ref: '#/components/schemas/SystemId'
        mode:
          enum:
          - ONE_WAY
          - BOTH_WAY
          type: string
        src:
          $ref: '#/components/schemas/SystemId'
      required:
      - dst
      - mode
      - src
      type: object
    SyslogsConfiguration:
      description: The model for syslogs configuration.
      properties:
        enabled:
          description: Whether to enable syslogs FW.
          type: boolean
        id:
          description: Unique identifier of the syslogs configuration.
          type: string
        messageFilters:
          description: List of filters that specify the minimum serverity and facility for a syslog configurations.
          items:
            $ref: '#/components/schemas/MessageFilter'
          type: array
        ntpConfigured:
          description: Indicates whether the NTP server is configured.
          type: boolean
        protocolType:
          default: TLS
          description: Available protocol types.
          enum:
          - TLS
          - TCP
          - UDP
        serverAddress:
          description: IPv4 address, IPv6 address, or DNS name of the syslogs server.
          type: string
        serverPort:
          description: Port that is used to connect to the syslogs server.
          type: integer
        status:
          enum:
          - CONNECTED
          - NOT_CONNECTED
      type: object
    SyslogsConfigurations:
      description: The page for syslogs configurations.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SyslogsConfiguration'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SystemComponent:
      description: System Component.
      properties:
        componentDisplayName:
          type: string
        componentServiceName:
          type: string
        componentType:
          type: string
        id:
          type: string
        logging:
          $ref: '#/components/schemas/Logging'
        monitored:
          type: boolean
        status:
          enum:
          - INITIALIZING
          - UP
          - MAINTENANCE
          - QUIESCE
          - RESTORE
          - SHUTTING_DOWN
          - DOWN
          - UP_NOT_RESPONDING
          - LOCKDOWN
          - UNKNOWN
          - DISABLED
          type: string
      type: object
    SystemComponents:
      description: Get all System Components.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SystemComponent'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SystemConfiguration:
      description: System Configuration.
      properties:
        applicationUserPassword:
          type: string
        autoSupport:
          deprecated: true
          type: boolean
        configType:
          type: string
        deployedPlatform:
          enum:
          - AZURE
          - AWS
          - VMC
          - GCP
          - VMWARE
          - AVS
          - GCVE
          - VCDE
          - K8S
          - OCVS
          type: string
        firewall:
          $ref: '#/components/schemas/Firewall'
        gettingStartedCompleted:
          type: boolean
        id:
          type: string
        integratedStorageSecuritySetupCompleted:
          type: boolean
        lockbox:
          $ref: '#/components/schemas/Lockbox'
        networks:
          items:
            $ref: '#/components/schemas/SystemConfigurationNetwork'
          type: array
        nodeId:
          type: string
        ntpServers:
          items:
            type: string
          type: array
        osUsers:
          items:
            $ref: '#/components/schemas/OsUser'
          type: array
        psnt:
          description: The abbreviation of Product Serial Number Tag. It is a special DDR system identifier used for customer service.
          type: string
        timeZone:
          type: string
        timeZoneUi:
          type: string
      type: object
    SystemConfigurationNetwork:
      description: System Configuration Network.
      properties:
        dnsServers:
          items:
            type: string
          type: array
        fqdn:
          type: string
        gateway:
          type: string
        gatewayIpv6:
          type: string
        interfaceName:
          type: string
        ipAddress:
          items:
            type: string
          type: array
        ipAddressFamily:
          type: string
        ipAddressIpv6:
          items:
            type: string
          type: array
        netMask:
          type: string
        nslookupSuccess:
          type: boolean
        prefix:
          type: string
        searchDomains:
          items:
            type: string
          type: array
      required:
      - interfaceName
      - ipAddress
      - ipAddressFamily
      - netMask
      type: object
    SystemConfigurations:
      description: Get System Configuration.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SystemConfiguration'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    SystemHealthIssue:
      description: System health issue
      properties:
        componentId:
          description: System component identifier.
          minLength: 1
          type: string
        componentName:
          description: System component name.
          minLength: 1
          type: string
        componentType:
          $ref: '#/components/schemas/HealthComponentType'
        detailedDescription:
          description: The detailed description of the alert message.
          type: string
        healthCategory:
          $ref: '#/components/schemas/HealthCategoryType'
        id:
          description: Health issue identifier.
          minLength: 1
          type: string
        message:
          description: The message that the variable values are substituted with message arguments.
          minLength: 1
          type: string
        messageArgs:
          description: The alert message arguments are the values for any substitution variables that are defined as part of the message.
          items:
            type: string
          type: array
        messageID:
          description: EEMI conformed message ID.
          minLength: 1
          type: string
        metricGroupId:
          description: The associated health metric group identifier.
          type: string
        postedTime:
          description: The created time of the alert message.
          format: date-time
          type: string
        responseAction:
          description: The response action for this alert message.
          type: string
        scoreDeduction:
          description: Score deduction.
          format: int32
          type: integer
        severity:
          $ref: '#/components/schemas/HealthIssueSeverity'
      required:
      - id
      - componentId
      - componentType
      - componentName
      - healthCategory
      - scoreDeduction
      - messageID
      - message
      - responseAction
      - postedTime
      - metricGroupId
      - messageArgs
      type: object
    SystemHealthIssues:
      description: System health issues collection.
      properties:
        content:
          items:
            $ref: '#/components/schemas/SystemHealthIssue'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      title: SystemHealthIssues
      type: object
    SystemHealthScoreCategories:
      description: Health score categories summary
      properties:
        healthScoreCategories:
          items:
            $ref: '#/components/schemas/SystemHealthScoreCategory'
          type: array
        message:
          type: string
      required:
      - message
      - healthScoreCategories
      title: SystemHealthScoreCategories
      type: object
    SystemHealthScoreCategory:
      description: Health score category
      properties:
        healthStatus:
          $ref: '#/components/schemas/HealthStatus'
        rangeEnd:
          format: int32
          type: integer
        rangeStart:
          format: int32
          type: integer
      required:
      - healthStatus
      - rangeStart
      - rangeEnd
      title: SystemHealthScoreCategory
      type: object
    SystemId:
      description: 'The id of the hosts. '
      properties:
        id:
          type: string
      type: object
    Target:
      properties:
        assetId:
          type: string
        credential:
          $ref: '#/components/schemas/NasCredential'
        directory:
          type: string
      title: Target
      type: object
    TargetCloudInfo:
      properties:
        drType:
          type: string
        networkId:
          type: string
        securityGroupIds:
          items:
            type: string
          type: array
      type: object
    TargetConnectionExtraInfo:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    TargetConnectionInfo:
      description: Details about the target connection.
      properties:
        connectionType:
          enum:
          - OS
          - VCENTER
          - DBUSER
          - DB_WALLET
          - RMAN
          - RMAN_WALLET
          - DB
          - SAPHANA_DB_USER
          - SAPHANA_SYSTEMDB_USER
          - NAS
          type: string
        credsId:
          type: string
        extraInfo:
          items:
            $ref: '#/components/schemas/TargetConnectionExtraInfo'
          type: array
      type: object
    TargetDatabaseInfo:
      description: The container for database-specific attributes.
      properties:
        applicationSystemId:
          type: string
        assetName:
          type: string
        hostId:
          type: string
        restoreOptions:
          properties:
            aagRestoreType:
              description: "Supported AAG Restore types: \n- Restore to all nodes\n- Restore to Primary node"
              enum:
              - RESTORE_TO_ALL
              - RESTORE_TO_PRIMARY
              type: string
          type: object
    TargetFileSystemInfo:
      properties:
        conflictStrategy:
          description: Indicate the strategy recovery will use to handle conflict of the contents in the destination directory.
          enum:
          - OVERWRITE
          - TO_ALTERNATE
          type: string
        hostId:
          type: string
        location:
          type: string
        mountUrl:
          type: string
        sources:
          items:
            type: string
          type: array
      required:
      - location
      type: object
    TargetK8sInfo:
      description: The container for Kubernetes-specific attributes.
      properties:
        namespace:
          description: 'The alternate namespace name for Restore to New.


            Note: If restoreType==TO_PRODUCTION (Restore to Original), the value of this field is ignored.'
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        overwritePersistentVolumeClaim:
          description: 'Boolean to indicate if persistent volume claim contents should be overwritten if they exist.


            If it is true, existing persistent volume claim contents are overwritten.'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        persistentVolumeClaims:
          description: List of persistent volume claims to be restored. Each entry in the list is the asset name pointing to a Kubernetes persistent volume claim asset.
          items:
            $ref: '#/components/schemas/TargetK8sInfoPersistentVolumeClaims'
          type: array
          x-ppdm-filter: false
          x-ppdm-sort: false
        skipNamespaceResources:
          description: 'Boolean to indicate whether namespace resources will be restored.


            If it is true, it means to not restore namespace resources.'
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        targetInventorySourceId:
          description: The target cluster inventory source id where the restore will  begin.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
      x-ppdm-filter: false
      x-ppdm-sort: false
    TargetK8sInfoPersistentVolumeClaims:
      properties:
        alternateStorageClass:
          description: The alternate storage class to be used.
          type: string
        name:
          description: The name of the persistent volume claim.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    TargetNasInfo:
      description: NAS specific parameters for restoring copies
      properties:
        assetId:
          description: Asset Id of the destination NAS share in case of restore to alternate
          type: string
        nasServerCred:
          properties:
            password:
              description: Password of the NAS server credentials for the destination share.
              type: string
            username:
              description: Username of the NAS server credentials for the destination share.
              type: string
          type: object
        sources:
          description: Sources selected files/folders for file-level recovery
          items:
            $ref: '#/components/schemas/TargetNasSource'
          type: array
      type: object
    TargetNasSource:
      description: Selected sources for file level restore for NAS
      properties:
        path:
          description: File/folder path for file-level recovery
          type: string
        pathHash:
          description: Hash of the full path of the file / folder. the hash can be got by search index.
          type: string
        sliceSsid:
          description: SSID of file/folder for file-level recovery, the field can be got by search index.
          type: string
        type:
          description: 'Type of sources selected files/folder for file-level recovery. Enum: FOLDER, FILE'
          enum:
          - FOLDER
          - FILE
          type: string
      type: object
    TargetOracleDatabaseInfo:
      description: The container for Oracle attributes.
      properties:
        applicationSystemId:
          type: string
        assetId:
          type: string
        assetName:
          type: string
        dataTargetId:
          type: string
        hostId:
          type: string
        nfsShare:
          description: NFS share of the backup target storage system for Oracle OIM. This object is needed if the restoreProtocol is NFS.
          properties:
            name:
              description: Name of the NFS share
              type: string
            version:
              description: 'Indicates the NFS type version: NFS3, NFS4.'
              type: string
          type: object
        parallelism:
          type: integer
        restoreCategory:
          enum:
          - DISASTER_RECOVERY
          - RESTORE_DB
          - RESTORE_LOG
          - INSTANT_ACCESS_RECOVERY
          type: string
        restoreProtocol:
          description: Oracle OIM restore protocol.
          enum:
          - BOOSTFS
          - NFS
          type: string
        targetConnectionInfos:
          items:
            $ref: '#/components/schemas/TargetConnectionInfo'
          type: array
      type: object
    TargetStorageInfo:
      properties:
        groupName:
          type: string
        naturalHostGroupId:
          type: string
        naturalHostId:
          type: string
        targetAssetId:
          type: string
        targetDetails:
          description: the target details
          items:
            $ref: '#/components/schemas/TargetStorageInfoTargetDetails'
          type: array
        targetHostId:
          type: string
      type: object
    TargetStorageInfoTargetDetails:
      properties:
        restoredAssetId:
          type: string
        storageGroupName:
          type: string
        storageSystemId:
          type: string
      type: object
    TargetVmInfo:
      properties:
        assetId:
          description: The ID of the target VM for a granular VMDK restore-to-alternate operation.
          type: string
        clusterMoref:
          description: The moref (managed object reference) of the Compute Cluster that the new VM should be placed into.  This is only required if the hostMoref is not provided.
          type: string
        credentials:
          $ref: '#/components/schemas/VMCredentials'
        dataCenterMoref:
          description: The moref of the Datacenter that the new VM should be placed into.  This is required except when performing a Direct to ESXi Host restore.
          type: string
        dataStoreMoref:
          description: The moref of the Datastore that the new VM should be placed into.  This is only required if the diskMap parameter is not provided, in which case this value is ignored.
          type: string
        deleteBackingFile:
          description: When performing a Restore to Original, and one or more disks in the current VM did not exist at the time of the backup, those disks will be removed from the VM.  This flag controls whether the disk files are also deleted from the datastore.
          type: boolean
        disks:
          description: A optional list of the disks that should be restored, and how/where to restore them.  If not provided then all disks will be restored based on the information in the copy, and the provided datastoreMoref.
          items:
            $ref: '#/components/schemas/VirtualDiskMap'
          type: array
          uniqueItems: true
        esxHost:
          $ref: '#/components/schemas/HostCredentials'          
        folderMoref:
          description: The moref of the VM Folder to place the new VM into.  If not provided the root folder of the datacenter is used as the destination.
          type: string
        hostMoref:
          description: The moref of the host to restore the VM into.  If the clusterMoref is provided and that cluster has DRS enabled, then this parameter is optional and an appropriate host will be chosen automatically using DRS.
          type: string
        inventorySourceId:
          description: The ID of the vCenter Inventory Source to restore the VM into.  Optional for Restore to Original.
          type: string
        networks:
          description: An optional list of NICs that exist in the backup that should be restored and mapped to networks in the vCenter.  This allows NICs to be re-mapped to different networks at the time of restore.
          items:
            $ref: '#/components/schemas/NetworkSettings'
          type: array
          uniqueItems: true
        recoverConfig:
          description: If true then during Restore to Original the VM configuration settings will be restored along with the data on the disks.  Defaults to true, but will be automatically set to false if the VM has any RDM disks, or any disks were excluded in the backup.
          type: boolean
        resourcePoolMoref:
          description: The optional moref of a ResourcePool to restore the VM into.
          type: string
        restoredVmAsset:
          $ref: '#/components/schemas/RestoredVmAsset'
        spbmRestoreDirective:
          description: Controls whether to attempt to assign any Storage Policies that were saved in the backup when restoring the VM.
          enum:
          - 'OFF'
          - FROM_COPY
          type: string
        tagRestoreDirective:
          description: Controls whether to attempt to assign any Tags that were saved in the backup when restoring the VM.  If the vCenter does not have a Tag with the same name, a new Tag will be created with that name if possible.
          enum:
          - 'OFF'
          - FROM_COPY
          type: string
        vmName:
          description: The name of the VM to use for restore to New/Alternate, Instant Access, Instant Restore or Restore to ESXi Host.
          type: string
        vmPowerOn:
          description: Controls whether to power on the VM after the restore is complete.  For Instant Restore this happens before the VM is moved to permanent storage.  For Restore to Original, if not set the current power state of the VM will be preserved.
          type: boolean
        vmReconnectNic:
          description: Controls whether to reconnect all NICs on the VM after the restore is complete.  This setting is ignored if the networks parameter is provided.
          type: boolean
      type: object
    TelemetryEULA:
      description: Telemetry EULA Rest Model.
      properties:
        accepted:
          type: boolean
        acceptedTime:
          type: string
        link:
          type: string
      type: object
    ThrottlingInfo:
      description: Provides details of the throttling that is performed during activity execution.
      properties:
        triggered:
          description: Indicates if throttling was performed for an activity in either the PowerProtect agent service or application.
          type: boolean
      type: object
    TierType:
      description: Tier type of the PowerProtect DD system.
      enum:
      - ACTIVE
      - CLOUD
      - COMBINED
      title: TierType
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    Timezone:
      description: enter description here
      properties:
        id:
          type: string
        name:
          type: string
        offset:
          type: string
      type: object
    Timezones:
      description: Get all timezones.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Timezone'
          type: array
      type: object
    Toggler:
      properties:
        filters:
          items:
            $ref: '#/components/schemas/APIFilter'
          type: array
        type:
          type: string
        uriPattern:
          type: string
      title: Toggler
      type: object
    TransportSessionRef:
      description: Defines the transport modes that is supported by proxy.
      properties:
        CapacityUnits:
          format: int32
          type: integer
        ControlUnits:
          format: int32
          type: integer
        Mode:
          enum:
          - HotaddPreferred
          - HotaddOnly
          - NbdOnly
          - NAS
          - None
          type: string
        UseSsl:
          type: boolean
      type: object
    TypedValue:
      properties:
        dataType:
          type: string
        value:
          type: string
      type: object
    UpdateBrowseRequest:
      description: This object contains the parameters use to update a browse request (it is used for input and output).  It contains a boolean "browseDest" parameter, and a String "directory" parameter, which contains the directory path to browse.
      properties:
        browseDest:
          description: If true, browse the destination (target VM), if false, brouse the source (copy).
          type: boolean
        directory:
          description: This is the directory path used as input, or output, for an FLR browse session API call.
          type: string
      type: object
    UpdateCdrServerConfigurationRequest:
      description: Password and IP data.
      properties:
        connectionIp:
          type: string
        password:
          type: string
      type: object
    UpgradePackage:
      description: Information of distinct package for upgrade.
      properties:
        activityId:
          description: Store activityId for hotfix install and revert.
          type: string
        category:
          default: ACTIVE
          description: The category of upgrade package.
          enum:
          - ACTIVE
          - HISTORY
          type: string
        certificateDetailsMap:
          $ref: '#/components/schemas/CertificateDetailsMap'
        certificateTrustedByUser:
          description: Whether the certificate is trusted by user.
          type: boolean
        criticality:
          description: package criticality
          enum:
          - URGENT
          type: string
        dateInstalled:
          description: Upgrade package installed date.
          format: date-time
          type: string
        description:
          description: Detailed description of upgrade package.
          type: string
        errorMessage:
          description: Error message if error occurs.
          type: string
        eula:
          $ref: '#/components/schemas/UpgradePackageEula'
        externalId:
          description: Used to track external package id from system like CUP.
          type: string
        fileName:
          description: Name of the upgrade package.
          type: string
        fromVersion:
          description: Version before upgrade.
          type: string
        id:
          description: Upgrade package ID.
          type: string
        initiationType:
          description: upgrade initiation type
          enum:
          - CUSTOMER
          - AUTOMATIC
          type: string
        lockboxPassphrase:
          description: The passphrase of lockbox, which is needed when lockboxResetRequired is set to true.
          type: string
        lockboxResetRequired:
          description: Whether it needs to reset lockbox.
          type: boolean
        madeAvailable:
          description: Available date of upgrade package.
          format: date-time
          type: string
        maintenanceUpgrade:
          description: whether to keep in maintenance mode after upgrade.
          type: boolean
        minimumVersion:
          description: Minimum appliance version supported by this upgrade package.
          type: string
        name:
          description: Name of upgrade package.
          type: string
        packageDelivery:
          description: indicates where the package comes from
          enum:
          - UPLOAD
          - MFT
          type: string
        packageVersion:
          description: The version of upgrade package.
          type: string
        preUpgradeHealthCheck:
          $ref: '#/components/schemas/PreUpgradeHealthCheck'
        rebootRequired:
          description: Whether a system restart is required.
          type: boolean
        releaseNotesLink:
          description: release notes link
          type: string
        revertSupported:
          description: Indicates whether hotfix supports revert or not.
          type: boolean
        sizeInBytes:
          description: Size of upgrade package in bytes.
          format: int64
          type: integer
        skipSnapshot:
          description: whether to skip snapshot before upgrade.
          type: boolean
        state:
          description: State of upgrade package.
          enum:
          - PROCESSING
          - AVAILABLE
          - INSTALLED
          - INSTALLING
          - FAILED
          - INVALID
          - PRECHECK_FAILED
          - INSTALLED_WITH_ERRORS
          - INSTALLED_CORE
          - INSTALLED_WITH_SKIPPED
          - REVERTED
          type: string
          x-ppdm-filter: true
        stateChangedTime:
          description: Store state changed time.
          format: date-time
          type: string
        subComponentDetails:
          description: Detail information of sub-components.
          items:
            $ref: '#/components/schemas/SubComponentDetails'
          type: array
        type:
          description: Type of upgrade package.
          enum:
          - RELEASE
          - EMERGENCY
          - PATCH
          - CONTENT
          - SECURITY
          - HOTFIX
          type: string
          x-ppdm-filter: true
        upgradeError:
          $ref: '#/components/schemas/MessageDetails'
        upgradeMode:
          description: Upgrade mode of this component.
          enum:
          - DU
          - MDU
          - NDU
          type: string
        upgradeStarted:
          description: Start time of upgrade.
          type: string
        upgradeToken:
          description: Token to trigger upgrade.
          type: string
        validationDetails:
          items:
            $ref: '#/components/schemas/ValidationDetail'
          type: array
      required:
      - certificateTrustedByUser
      - id
      - state
      title: UpgradePackage
      type: object
    UpgradePackageEula:
      description: Object that contains attributes for End User License Agreement (EULA) in the upgrade.
      properties:
        productEulaAccepted:
          description: Whether product EULA is accepted.
          type: boolean
        productEulaChanged:
          description: Whether the product EULA changed.
          type: boolean
        telemetryEulaAccepted:
          description: Whether EULA telemetry is accepted.
          type: boolean
        telemetryEulaChanged:
          description: Whether EULA telemetry changed.
          type: boolean
      type: object
    UpgradePackages:
      description: Response of getting upgrade packages.
      properties:
        content:
          description: Upgrade package's detail content.
          items:
            $ref: '#/components/schemas/UpgradePackage'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    User:
      description: User.
      properties:
        createdDate:
          description: Date the user was created.
          format: date-time
          type: string
        emailAddress:
          description: User email address. Must be valid email address
          minLength: 1
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        firstName:
          description: User first name.
          maxLength: 100
          minLength: 1
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        forcePasswordChange:
          default: true
          description: Force the user to change password on first log in.
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
        id:
          description: User ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        lastName:
          description: User last name.
          maxLength: 100
          minLength: 1
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        password:
          description: User password.
          type: string
        roleId:
          description: Role ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        username:
          description: User username.
          maxLength: 50
          minLength: 1
          pattern: ^[a-zA-Z0-9._]*$
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - emailAddress
      - firstName
      - lastName
      - username
      type: object
    UserGroup:
      description: User group.
      properties:
        createdDate:
          description: Date the user group was created.
          format: date-time
          type: string
        id:
          description: User group ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        identitySourceGroups:
          description: The identity source groups in the group-to-role mapping.
          items:
            $ref: '#/components/schemas/IdentitySourceGroupsMapping'
          type: array
          uniqueItems: true
        name:
          description: Name of the user group.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        roleId:
          description: Role ID for the identity source groups.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      required:
      - identitySourceGroups
      - name
      type: object
    UserGroups:
      description: Response body of the list of User Groups.
      properties:
        content:
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    UserNote:
      description: The user notes on a message.
      properties:
        note:
          description: The custom text note on the message.
          type: string
        updatedTime:
          description: The time that note is updated. Follows ISO 8601.
          format: date-time
          type: string
        username:
          description: The name of the user who added or updated the notes.
          type: string
      type: object
    Users:
      description: Response body of the list of Users.
      properties:
        content:
          items:
            $ref: '#/components/schemas/User'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    VLANReferenceDetails:
      description: This model contains details for VLAN usage content.
      properties:
        assetCount:
          type: integer
        policyCount:
          type: integer
        proxyCount:
          type: integer
        searchCount:
          type: integer
        total:
          type: integer
        vlanName:
          type: string
      type: object
    VLANReferenceDetailsWrapper:
      description: This model contains details for VLAN usage.
      properties:
        content:
          items:
            $ref: '#/components/schemas/VLANReferenceDetails'
          type: array
      type: object
    VMCredentials:
      properties:
        adminCredentialId:
          type: string
        userCredentialId:
          type: string
      type: object
    VPEEngineInfo:
      properties:
        protectionSummary:
          $ref: '#/components/schemas/ProtectionSummary'
        totalDisabledProxies:
          format: int32
          type: integer
        totalFailedProxies:
          format: int32
          type: integer
        totalReadyProxies:
          format: int32
          type: integer
        vcsStatuses:
          items:
            $ref: '#/components/schemas/VcStatus'
          type: array
      type: object
    VPEProxies:
      description: Get VPE Proxies Response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/VPEProxy'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    VPEProxy:
      description: VPE protection engine resource that represents a registered (or deployed) vProxy VM.
      properties:
        Config:
          $ref: '#/components/schemas/VProxyConfig'
        Id:
          type: string
        Status:
          $ref: '#/components/schemas/VProxyStatus'
      type: object
    VPEProxyLogBundle:
      description: Proxy log bundle sessions information.
      properties:
        Config:
          $ref: '#/components/schemas/ProxyLogBundleSessionsConfig'
        Id:
          description: Proxy ID.
          type: string
        Status:
          $ref: '#/components/schemas/ProxyLogBundleSessionsStatus'
      required:
      - Config
      - Id
      type: object
    VPEProxyLogBundleRequest:
      properties:
        IdleTimeout:
          format: int64
          type: integer
        LogBundleRange:
          $ref: '#/components/schemas/LogBundleRange'
        LogDirectory:
          type: string
      type: object
    VPEProxyLogBundles:
      description: Get VPE Proxy Log Bundles Response.
      properties:
        content:
          items:
            $ref: '#/components/schemas/VPEProxyLogBundle'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    VProxyConfig:
      properties:
        AdvancedOptions:
          $ref: '#/components/schemas/ProxySessionOverride'
        ApplicationData:
          properties: {}
          type: object
        AutoUpdateConfig:
          type: boolean
        Credential:
          $ref: '#/components/schemas/VProxyCredential'
        DeployProxy:
          type: boolean
        Disabled:
          type: boolean
        HealthCheckInterval:
          format: int32
          type: integer
        HostName:
          type: string
        InstanceUuid:
          type: string
        MORef:
          type: string
        Operation:
          enum:
          - configure
          - disable_application
          - enable_application
          - monitor
          - backup
          - restore
          - delete_backup
          - redeploy
          - telemetry
          - upgrade
          - version
          - setup_network
          type: string
        Port:
          format: int32
          type: integer
        ProxyDeploymentConfig:
          $ref: '#/components/schemas/ProxyDeploymentConfig'
        ProxyType:
          enum:
          - Embedded
          - Internal
          - External
          type: string
        SkipRegistration:
          type: boolean
        SupportedProtectionTypes:
          items:
            enum:
            - VM
            - Kubernetes
            - NAS
            type: string
          type: array
        UpdateCredentials:
          type: boolean
        VimServerRef:
          $ref: '#/components/schemas/VProxyVimServerRef'
      type: object
    VProxyCredential:
      properties:
        ObjectId:
          type: string
        Password:
          type: string
        Type:
          enum:
          - ObjectId
          - Object
          type: string
        UserName:
          type: string
      type: object
    VProxyDaemonStatus:
      description: Contains information about the vProxy daemons
      properties:
        DaemonName:
          type: string
        Resources:
          items:
            type: string
          type: array
        Status:
          type: string
      type: object
    VProxyDeploymentNetworkConfig:
      properties:
        Fqdn:
          type: string
        Gateway:
          type: string
        IPProtocol:
          enum:
          - IPv4
          - IPv6
          - Dual
          type: string
        InterfaceName:
          type: string
        IpAddress:
          type: string
        IpV6Address:
          type: string
        IpV6AutoAssign:
          type: boolean
        IpV6Gateway:
          type: string
        IpV6PrefixLen:
          format: int32
          type: integer
        MacAddress:
          type: string
        MultiVlanEnabled:
          type: boolean
        NetMask:
          type: string
        NetworkMoref:
          type: string
        Vlans:
          items:
            $ref: '#/components/schemas/ProxyDeploymentConfigVlans'
          type: array
      type: object
    VProxyNetworkConfig:
      description: VProxyNetworkConfig is a simplified model representing network configuration of a vProxy VM.  This  model assumes that each NIC has no more than one IPv4 and/or IPv6 address and a single gateway for each. While the current OVA is only configured with a single NIC, customers can add additional NICs.  This model can represent additional NICs accurately if they meet the constraints outlined above.
      properties:
        Connected:
          type: boolean
        DeviceLabel:
          type: string
        Dns:
          $ref: '#/components/schemas/CommonDnsConfig'
        GatewayV4:
          type: string
        GatewayV6:
          type: string
        IpAddrV4:
          $ref: '#/components/schemas/CommonIpConfig'
        IpAddrV6:
          $ref: '#/components/schemas/CommonIpConfig'
        MAC:
          type: string
        VirtualDeviceId:
          format: int32
          type: integer
        VirtualNetworkName:
          type: string
      type: object
    VProxyStatus:
      properties:
        Aliases:
          items:
            type: string
          type: array
        AllottedModes:
          items:
            $ref: '#/components/schemas/AllottedModes'
          type: array
        AllottedNasSessions:
          items:
            $ref: '#/components/schemas/AllottedModes'
          type: array
        Certificate:
          type: string
        ConfigChange:
          $ref: '#/components/schemas/VProxyStatusConfigChange'
        DaemonStatus:
          items:
            $ref: '#/components/schemas/VProxyDaemonStatus'
          type: array
        DatacenterMoref:
          type: string
        Datastores:
          items:
            type: string
          type: array
        DeployedTime:
          type: string
        HostedComputeRes:
          $ref: '#/components/schemas/VimObjectRef'
        LastCheckedTime:
          type: string
        LastOperation:
          $ref: '#/components/schemas/LastOperation'
        ModesAvailable:
          $ref: '#/components/schemas/TransportSessionRef'
        NasSessionsAvailable:
          $ref: '#/components/schemas/NasSessionRef'
        Networks:
          items:
            $ref: '#/components/schemas/VProxyNetworkConfig'
          type: array
        PowerState:
          enum:
          - 'On'
          - 'Off'
          - Suspended
          type: string
        ProxyDeployed:
          type: boolean
        ProxyRegistered:
          type: boolean
        ProxyState:
          enum:
          - READY
          - MAINTENANCE
          - REGISTER
          - UNREGISTERED
          - SETUP
          - RESET
          type: string
        ProxyStatus:
          $ref: '#/components/schemas/ProxyStatus'
        RegisteredTime:
          type: string
        Thumbprint:
          type: string
        Uuid:
          type: string
        Version:
          type: string
        VlanStatus:
          items:
            $ref: '#/components/schemas/VProxyVlanStatus'
          type: array
      type: object
    VProxyStatusConfigChange:
      properties:
        PropertyChanges:
          items:
            $ref: '#/components/schemas/ConfigPropertyChangeRef'
          type: array
        UpdatedTime:
          format: date-time
          type: string
      type: object
    VProxyVimServerRef:
      description: vCenter ID in PowerProtect Data Manager. Also provides detail about the vCenter hostname port along with its credentials.
      properties:
        ObjectId:
          type: string
        Type:
          enum:
          - ObjectId
          - Object
          type: string
        Vcenter:
          $ref: '#/components/schemas/CommonVimServer'
      type: object
    VProxyVlanStatus:
      properties:
        Detail:
          type: string
        IpAddress:
          type: string
        IpV6Address:
          type: string
        Status:
          enum:
          - CONNECTED
          - FAILURE
          type: string
        VlanId:
          format: int32
          type: integer
      type: object
    VSphereInstallationBundle:
      description: vSphere Installation Bundle
      properties:
        dateInstalled:
          description: The date the VIB was installed.
          type: string
        name:
          description: Name of the vSphere Installation Bundle.
          type: string
        resourceId:
          description: The id of the resource target.
          type: string
        resourceType:
          description: The resource type target where the details of the vib are fetched from.
          type: string
        status:
          description: The installation status of the VIB.
          type: string
        version:
          description: The version of the VIB that is installed.
          type: string
        versionsAvailableForUpgrade:
          description: List of versions available for upgrade.
          items:
            type: string
          type: array
      title: VSphereInstallationBundle
      type: object
    ValidationDetail:
      description: This page contains upgrade precondition validation details.
      properties:
        message:
          description: Message received after upload a package.
          type: string
        messageDetails:
          $ref: '#/components/schemas/MessageDetails'
        resultType:
          description: Type of validation result.
          enum:
          - INFO
          - WARNING
          - ERROR
          type: string
        subComponent:
          description: Name of subcomponent.
          type: string
        validateTime:
          description: Date of the validation.
          format: date-time
          type: string
        validationName:
          description: The validation name.
          type: string
      title: ValidationDetail
      type: object
    VcStatus:
      description: VCenter Status information
      properties:
        ipAddress:
          description: ipAddress
          type: string
        name:
          description: name
          type: string
        status:
          description: status
          enum:
          - CONNECTED
          - AUTHENTICATION_FAILURE
          - IP_UNREACHABLE
          - UNSUPPORTED_VERSION
          - INVALID_PORT
          - INVALID_PORT_OR_CERTIFICATE
          - UNKNOWN_ERROR
          - UNKNOWN
          type: string
      type: object
    VendorEnum:
      enum:
      - DATADOMAIN
      - VMAX
      - VMWARE
      - MICROSOFT
      - ORACLE
      - DELLEMC
      - AWS
      - KUBERNETES
      - AZURE
      - SAP
      - UNITY
      - POWERSTORE
      - POWERSCALE
      - GENERIC
      - UNKNOWN
      title: VendorEnum
      type: string
      x-ppdm-filter: true
      x-ppdm-sort: true
    VerifiedObjective:
      properties:
        copyType:
          enum:
          - ALL
          - FULL
          - DIFFERENTIAL
          - LOG
          - INCREMENTAL
          - CUMULATIVE
          type: string
        endTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        failure:
          $ref: '#/components/schemas/Failure'
        name:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        slaId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        stageId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        startTime:
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        status:
          enum:
          - SUCCEEDED
          - FAILED
          - SKIPPED
          type: string
        success:
          type: boolean
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    VibOperationBatchRequest:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/VibOperationBatchRequestRequests'
          type: array
      title: VibOperationBatchRequest
      type: object
    VibOperationBatchRequestRequests:
      properties:
        body:
          $ref: '#/components/schemas/VSphereInstallationBundle'
        id:
          description: The request id in the batch operation.
          type: string
      type: object
    VibOperationBatchResponse:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/VibOperationBatchResponseResponses'
          type: array
      title: VibOperationBatchResponse
      type: object
    VibOperationBatchResponseBody:
      properties:
        activityId:
          description: The activity id to monitor the status of the VIB operation.
          type: string
        code:
          description: The HTTP response code based on the VIB operation error type.
          type: integer
        reason:
          description: The reason for the VIB operation failure.
          type: string
        remediation:
          description: The remediation action to fix the VIB operation.
          type: string
        timestamp:
          description: The timestamp at which the VIB operation failed.
          type: string
      type: object
    VibOperationBatchResponseResponses:
      properties:
        body:
          $ref: '#/components/schemas/VibOperationBatchResponseBody'
        id:
          description: The request id in the batch operation.
          type: string
        status:
          description: The response status of the vib operation.
          type: integer
      type: object
    VimObjectRef:
      properties:
        MOref:
          type: string
        Type:
          type: string
      type: object
    VirtualDiskMap:
      properties:
        datastore:
          type: string
        label:
          type: string
        provisioningType:
          enum:
          - THICK
          - THICK_LAZY
          - THICK_EAGER
          - THIN
          type: string
      type: object
    VirtualDiskMapping:
      properties:
        dataStoreMoref:
          type: string
        diskLabel:
          type: string
        key:
          format: int32
          type: integer
        provisioningType:
          enum:
          - THICK_EAGER
          - THICK_LAZY
          - THIN
          type: string
        uuid:
          type: string
      type: object
    VmAgentInstallationRequest:
      description: Request of initiating agent installation on VM.
      properties:
        applicationType:
          description: The application type which will be installed on the selected VM.
          enum:
          - MSSQL
          type: string
        vmAssetId:
          description: '* The selected VM on which the application will be installed.

            * The asset type associated to this id should be a VM asset type.'
          type: string
      type: object
    VmAgentInstallationResponse:
      description: Response of initiating agent installation on VM
      properties:
        activityId:
          description: The job group id of the initiated VM agent installation activity.
          type: string
      type: object
    VmDeploymentLocation:
      properties:
        ClusterMoref:
          type: string
        DatastoreMoref:
          type: string
        FolderMoref:
          type: string
        HostMoref:
          type: string
        NetworkMoref:
          type: string
        ResourcePoolMoref:
          type: string
      type: object
    VmExpirationRequest:
      description: VmExpirationRequest - Encapsulates the request to extend Live Vm/Instant Access session expiration object.  Currently used as a REST API request object.
      properties:
        extendedDay:
          description: 'A positive integer representing the number of days to extend the expiration of the Vm/Instant Access session.

            A REST API will specify the session id on which this applies.'
          format: int32
          type: integer
      required:
      - extendedDay
      type: object
    VmExtendedData:
      description: The extended data for VMWARE_VIRTUAL_MACHINE.
      properties:
        enableCompressedRestore:
          description: 'VMDM Pass thru field:

            DD Boost compressed restore improves backup read performance by using data compression techniques.

            This option enables DD Boost compressed restore. If the restore is performed under low bandwidth

            conditions, enabling this flag may help improve DD Boost read performance.


            When set to false, the DD Boost data stream is not compressed.


            When set to true, the DD Boost data stream is compressed.'
          type: boolean
        requestedProxy:
          description: 'VMDM Pass thru field:

            The proxy host name. Restore using this specified proxy.'
          type: string
        restoreBiosUuid:
          description: 'The field for VM restore that determines whether a restored VM''s BIOS UUID is set to value from the backup or if the VM is given a new BIOS UUID.

            Restoring the BIOS UUID is effectively always true for Restore-to-Original operations hence this field is ignored for these operations.

            - false: A new BIOS UUID is generated for a restored VM. This is the default behavior if restoredBiosUuid is not specified.

            - true: The BIOS UUID of a restored VM is set to the value from the backup.'
          type: boolean
        restoreOriginalMachineConfig:
          description: The field for Cloud DR restore that marks, if set, the original MAC ID of the restored VM.
          type: boolean
        target:
          $ref: '#/components/schemas/RestoreGroupTargetVmInfo'
        vcenterId:
          description: The vCenter ID for Cloud DR restore.
          type: string
      type: object
    VmotionVmConfig:
      description: Vmotion parameter config object.  This object is used as a REST request body in API /api/v2/restored-copies/{id}/vmotion, which requests a vMotion to relocate the VMDK files (copy of a VM) from a PowerProtect DD to vCenter datastore.
      properties:
        description:
          description: When the vMotion request is submitted, this optional description is used as the description of the PowerProtect Data Manager task that is created to perform the vMotion request.
          type: string
        disks:
          description: The optional VirtualDiskMapping for the target virtual disk mapping information to perform the restore to.  If supplied, the virtual disk mapping information is used for the restore. Otherwise, the original virtual disk mapping information is used (virtual disk mapping information of targetVm from restoredCopyResource).
          items:
            $ref: '#/components/schemas/VirtualDiskMapping'
          type: array
        targetDatastoreMoref:
          description: 'The optional MoRef (managed object reference) of the target datastore to perform the restore to.  If supplied, then the datastore with the targetDatastoreMoref is used for the restore. Otherwise, the original datastoreMoref is used (datastore of targetVm from restoredCopyResource). If neither MoRef is available, the API returns a bad request status.


            If no disk array is specified, the VMDK files are restored to the targetDatastoreMoref.'
          type: string
        targetFolderMoref:
          description: The optional MoRef (managed object reference) of the target folder to perform the restore to.  If supplied, the folder with the targetFolderMoref is used for the restore. Otherwise, the original folderMoref is used (folder of targetVm from restoredCopyResource).
          type: string
        targetHostMoref:
          description: The optional MoRef (managed objectrReference) of the target host to perform the restore to.  If supplied, the host with the targetHostMoref is used for the restore. Otherwise, the original hostMoref is used (host of targetVm from restoredCopyResource).
          type: string
        targetResourcePoolMoref:
          description: The optional MoRef (managed object reference) of the target resourcePool to perform the restore to.  If supplied, then the resourcePool with the targetResourcePoolMoref is used for the restore. Otherwise, the original resourcePoolMoref is used (resourcePool of targetVm from restoredCopyResource).
          type: string
        vmMoref:
          description: Not used.
          type: string
      type: object
    VmwareEntity:
      properties:
        details:
          properties: {}
          type: object
        id:
          description: VMware entity ID as a concatenation of vcID colon and moref.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        inventorySourceId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        name:
          description: VMware entity name.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        parentId:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        type:
          description: VMware entity type.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        viewType:
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    Whitelist:
      description: Whitelist.
      properties:
        createdTime:
          description: Created timestamp (ISO 8601 format).
          format: date-time
          type: string
        expiresAt:
          description: Expiration timestamp (ISO 8601 format).
          format: date-time
          type: string
        id:
          description: Whitelist ID.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        internal:
          description: The internal value of the whitelist entry.
          type: boolean
        ip:
          description: Whitelist IP address.
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        roleId:
          description: The role id of the whitelist entries.
          type: string
        state:
          description: Whitelist state.
          enum:
          - APPROVED
          - REJECTED
          - UNDEFINED
          - AUTOMATIC
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      type: object
    Whitelists:
      description: Response body of the list of Whitelists.
      properties:
        content:
          items:
            $ref: '#/components/schemas/Whitelist'
          type: array
        page:
          $ref: '#/components/schemas/PageInfo'
      type: object
    lastRun:
      description: The restore result of this restore plan.
      properties:
        status:
          description: Last run status.
          enum:
          - SUCCESS
          - PARTIAL_SUCCESS
          - PARTIAL_CANCELLED
          - CANCELLED
          - FAILED
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
        time:
          description: The time when the restore plan is started.
          format: date-time
          type: string
          x-ppdm-filter: true
          x-ppdm-sort: true
      title: lastRun
      type: object
    throttlingConfig:
      description: Resource ThrottlingConfig support for application host.
      properties:
        backupMaxCpuPercentage:
          title: backupMaxCpuPercentage
          type: integer
      title: throttlingConfig
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: "For accessing the API, a valid JWT token must be passed in all the queries in the 'Authorization' header with the 'Bearer' HTTP authorization schema: \n\n\t'Authorization: Bearer <JWT_token>'"
      scheme: bearer
      type: http
info:
  contact:
    name: ''
  description: PowerProtect Data Manager Public RESTful API
  title: PowerProtect Data Manager
  version: v2
openapi: 3.0.1
paths:
  /api/v2/account/change-password:
    post:
      description: Update the local user account login credentials by providing the username, current password, and a new password.
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        description: Updated user account login credentials.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountChangePasswordResponse'
          description: Successfully changed the user password.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The provided credentials are invalid.
        '422':
          description: Unprocessable entity. An error has occurred when trying to change the user password.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      summary: Update user account login credentials
      tags:
      - Authentication and Authorization
      x-codegen-request-body-name: body
  /api/v2/account/forgot-password:
    post:
      description: Resets a user password by providing the username. An email is sent to the user email address with a link to reset the token.
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        description: Username
        required: false
      responses:
        '204':
          description: If the username exists, an email is sent to the user email address.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '422':
          description: Unprocessable entity. An error has occurred when trying to send an email to the user.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      summary: Send an email to reset a user password
      tags:
      - Authentication and Authorization
      x-codegen-request-body-name: body
  /api/v2/account/reset-password:
    post:
      description: Resets the user password with the temporary reset token. The temporary reset token is contained in the email sent to the user email address, after performing an API call to forgot-password.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        description: Reset password credentials.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
          description: Successfully changed the user password.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The reset password token is either invalid or expired.
        '422':
          description: Unprocessable entity. An error occurred while trying to send an email to the user.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      summary: Reset user password with temporary reset token
      tags:
      - Authentication and Authorization
      x-codegen-request-body-name: body
  /api/v2/active-directory-identity-providers:
    get:
      description: Get a list of all available Active Directory identity providers.
      operationId: v2-getActiveDirectoryIdentityProviders
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of Active Directory identity providers by secure.
        in: query
        name: secure
        schema:
          type: boolean
      - description: Retrieve a list of Active Directory identity providers by locator.
        in: query
        name: locator
        schema:
          type: string
      - description: Retrieve a list of Active Directory identity providers by host.
        in: query
        name: host
        schema:
          type: string
      - description: Retrieve a list of Active Directory identity providers by alive.
        in: query
        name: alive
        schema:
          type: boolean
      - description: Retrieve a list of Active Directory identity providers by selector.
        in: query
        name: selector
        schema:
          type: string
      - description: Retrieve a list of Active Directory identity providers by description.
        in: query
        name: description
        schema:
          type: string
      - description: Retrieve a list of Active Directory identity providers by serviceMarker.
        in: query
        name: serviceMarker
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
                type: array
          description: Successfully retrieved a list of all available Active Directory identity providers.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of all available Active Directory identity providers.
      tags:
      - User Security Management
    post:
      description: Create an instance of Active Directory identity provider for another set of connectivity parameters.
      operationId: v2-createActiveDirectoryIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
        description: Active Directory Identity Provider.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryIdentityProviderResponse'
          description: Successfully created an instance of Active Directory identity provider with a set of connectivity parameters.
        '400':
          description: Create an instance of LDAP identity provider for another set of connectivity parameters
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Create an instance of Active Directory identity provider for another set of connectivity parameters.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/active-directory-identity-providers/default-config:
    get:
      description: Get default configuration of the Active Directory.
      operationId: v2-getAdDefaultConfig
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapDefaultConfig'
          description: Successfully retrieved the AD default configuration.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Active Directory Identity Provider default configuration.
      tags:
      - User Security Management
  /api/v2/active-directory-identity-providers/{locator}:
    delete:
      description: Remove the Active Directory identity provider.
      operationId: v2-deleteActiveDirectoryIdentityProvider
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
          description: Successfully removed Active Directory identity provider.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Remove the Active Directory identity provider.
      tags:
      - User Security Management
    get:
      description: Get the Active Directory identity provider with the locator.
      operationId: v2-getActiveDirectoryIdentityProvider
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
          description: Successfully retrieved the Active Directory identity provider.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the Active Directory identity provider with the locator.
      tags:
      - User Security Management
    patch:
      description: Modify the Active Directory configuration parameters.
      operationId: v2-patchActiveDirectoryIdentityProvider
      parameters:
      - description: The Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
        description: Active Directory Identity Provider.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
          description: Successfully modified the Active Directory Identity Provider.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Modify the Active Directory configuration parameters.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/active-directory-identity-providers/{locator}/accounts:
    get:
      description: Get a list of Active Directory user accounts based on an optional account name pattern.
      operationId: v2-getActiveDirectoryIdentityProviderAccounts
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve list of Active DIrectory user accounts by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve list of Active DIrectory user accounts with results limit.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccounts'
          description: Successfully retrieved a list of Active Directory user accounts based on an optional account name pattern.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of Active Directory user accounts.
      tags:
      - User Security Management
  /api/v2/active-directory-identity-providers/{locator}/accounts/{account-locator}:
    get:
      description: Get user account information for the specified account locator.
      operationId: v2-getActiveDirectoryProviderAccount
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Active Directory Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccount'
          description: Successfully retrieved a user account for the specified account locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get user account information for the specified account locator.
      tags:
      - User Security Management
  /api/v2/active-directory-identity-providers/{locator}/groups:
    get:
      description: Get a list of Active Directory groups based on an optional filter.
      operationId: v2-getActiveDirectoryIdentityProviderGroups
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve list of Active DIrectory groups by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve list of Active DIrectory groups with results limit.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroups'
          description: Successfully retrieved a list of Active Directory groups based on an optional filter.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of Active Directory groups
      tags:
      - User Security Management
  /api/v2/active-directory-identity-providers/{locator}/groups/{group-locator}:
    get:
      description: Get group information for the specified group locator.
      operationId: v2-getActiveDirectoryIdentityProviderGroup
      parameters:
      - description: Active Directory Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Active Directory Identity Provider group locator.
        in: path
        name: group-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroup'
          description: Successfully retrieved group information for the specified group locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get group information for the specified group locator.
      tags:
      - User Security Management
  /api/v2/activities:
    get:
      description: 'Retrieves a list of all activities.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getActivities
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      - description: "A general search text.\nFor example: q=VM_1\nwhere the following fields will be searched for VM_1.\n\nThe following fields are searched:\n\n    name\n    result.summaries\n    result.error.reason\n    result.error.remediation\n    logInfo.logText\n    asset.name\n    asset.type\n    copy.name\n    copy.type\n    dataTarget.name\n    host.name\n    protectionPolicy.name\n    sourceDataTarget.name\n    serviceLevelAgreement.name\n    owner.name\n    lastUpdateTime\n    createdTime or createTime\n"
        in: query
        name: q
        schema:
          type: string
      - description: Entity type to group asset-level activities by.
        in: query
        name: groupBy
        schema:
          type: string
      - description: Value of entity of type specified in groupBy parameter.
        in: query
        name: groupByValue
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
          description: Successfully returned available activity resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all activities
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
      x-ppdm-pagination: random,serial
  /api/v2/activities/{id}:
    get:
      description: 'Retrieves an activity resource with matching ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getActivity
      parameters:
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: Successfully returned available activity resource.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get an activity by ID
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/activities/{id}/cancel:
    post:
      description: 'Cancels the selected activity with the specified ID. Activities in running or queued state can be canceled.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator, Restore Administrator

        '
      operationId: cancelActivity
      parameters:
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCancelRequest'
        description: The activity cancel request model.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: The request is accepted and is processing. The activity transitions to Pending Cancellation state before being Canceled. In some cases, the cancel request may be rejected if the activity is close to completion when the request was issued.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check request body and/or filters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Cancel a running activity
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,backup_admin,restore_admin
  /api/v2/activities/{id}/retry:
    post:
      description: 'Retries one or more failed jobs within a job group for the specified ID.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator, Restore Administrator

        '
      operationId: retryActivity
      parameters:
      - description: ID of the activity resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRetryBulkRequest'
        description: The activity retry request model. The model has array of IDs. If no ID is specified, failed child jobs within the job group are retried.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityRetryBulkResponse'
          description: The request has been accepted and is processing. A new job is generated when an existing job is retried. The new job replaces the old one under the job group if the retry operation is successful.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check request body and/or filters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Retry a failed activity
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin,restore_admin
  /api/v2/activity-metrics:
    get:
      description: 'Retrieves aggregation metrics for job and job groups in different states.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getActivityMetrics
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityMetrics'
          description: Successfully returned available resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check request body and/or filters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get aggregation of state counts for activities
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/agent-registration-status:
    get:
      description: 'Retrieves the agent registration status. You can filter and sort various fields.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getAgentRegistrationStatus
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRegistrationStatuses'
          description: Successfully returned the result.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request. Invalid argument.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Service unavailable. Internal server error.
      security:
      - BearerAuth: []
      summary: Get the agent registration status
      tags:
      - Application Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/agents-update-sessions:
    get:
      description: Get all agent push update sessions for the host IDs and App Server types with the status [IN_PROGRESS, SCHEUDLED and COMEPLETED] accordingly.
      operationId: getAllPushUpdateSession
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSessionList'
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      summary: Get all push update sessions
      tags:
      - Agent Update Session
    post:
      description: Post adhoc or scheduled agent push update session for the input request for the host IDs and App server types.
      operationId: postPushUpdateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsUpdateSessionRequest'
        description: Agent Push Update session request.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSessionResponse'
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      summary: Post the push update session
      tags:
      - Agent Update Session
  /api/v2/agents-update-sessions/filter:
    get:
      description: Get all push update sessions based on the specified parameters i.e. filter, state, page, pagesize and orderby.
      operationId: getByFilter
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: state - State [IN_PROGRESS, SCHEDULED, COMPLETED]
        in: query
        name: state
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSessionList'
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Get push update sessions
      tags:
      - Agent Update Session
  /api/v2/agents-update-sessions/{id}:
    delete:
      description: Delete push update session for provided ID.
      operationId: deletePushUpdateSession
      parameters:
      - description: Agent update session ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Delete the push update session for the specified ID
      tags:
      - Agent Update Session
    get:
      description: Get push update session for provided ID.
      operationId: getPushUpdateSession
      parameters:
      - description: Agent update session ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSessionResponse'
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Get push update session for the provided ID
      tags:
      - Agent Update Session
    patch:
      description: Patch the push update session for provided ID.
      operationId: patchPushUpdateSession
      parameters:
      - description: Agent update session ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsUpdateSessionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSessionResponse'
          description: OK
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Patch the push update session for the specified ID
      tags:
      - Agent Update Session
  /api/v2/alert-metrics:
    get:
      description: 'Retrieves all alert metrics posted within a given time interval and includes the number of unacknowledged critical, warning, and informational alerts.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getAlertMetrics
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMetrics'
          description: Successfully returned available alert metrics.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all Alert metrics
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/alerts:
    get:
      description: 'Retrieves a list of alerts.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getAlerts
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      - description: The general search text. For example q=VM_1
        in: query
        name: q
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerts'
          description: Successfully returned available alert resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check the request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all alerts
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
      x-ppdm-pagination: random,serial
  /api/v2/alerts/acknowledgements:
    post:
      description: 'Updates acknowledgement object of bulk messages.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: acknowledgeAlerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageBulk'
        description: User can acknowledge alerts by changing the state from unacknowledged to acknowledged.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageBulk'
          description: Resources updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resources is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update message acknowledgements by ID
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/alerts/{id}:
    get:
      description: 'Retrieves an alert message with the specified ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getAlert
      parameters:
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: Successfully returned the alert message.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Verify the ID.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get an alert message by ID
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    patch:
      description: 'Updates acknowledgement object of a message. Adds or updates userNote object of a message.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator, Restore Administrator

        '
      operationId: updateAlert
      parameters:
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
        description: Alerts describe the exception/failures that include both current issues or predicted issues to help investigate potential area of risk.
        required: false
      responses:
        '200':
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update message acknowledgement or user note by ID
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin,restore_admin
  /api/v2/alerts/{id}/acknowledgement:
    put:
      description: 'Updates acknowledgement object of the specified alert.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator, Restore Administrator

        '
      operationId: acknowledgeAlert
      parameters:
      - description: ID of the alerts resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAlertAcknowledgement'
        description: Alert message body.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAlertAcknowledgement'
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update alert acknowledgement by ID
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin,restore_admin
  /api/v2/app-hosts/{hostId}/preferred-address:
    parameters:
    - description: hostId that needs to be updated with preferred address value.
      in: path
      name: hostId
      required: true
      schema:
        type: string
    patch:
      description: Update preferred address value for the specified host.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferredAddress'
      responses:
        '200':
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requester is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Update preferred address value for given hostId
      tags:
      - Application Data Management
  /api/v2/app-hosts/{hostId}/valid-addresses:
    get:
      description: Get valid addresses of the specified host.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAddresses'
          description: Successfully return the result.
        '400':
          description: The request is not valid.
        '401':
          description: The requester is not authorized to perform this operation.
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Get list of valid address for the provided hostId
      tags:
      - Application Data Management
    parameters:
    - description: hostId for which address values need to be retrieved.
      in: path
      name: hostId
      required: true
      schema:
        type: string
  /api/v2/asset-compliance-details:
    get:
      description: 'Retrieves asset compliance details from compliance verification result, extracts some fields, and exports to CSV. This API can support multiple filters (for example: slaId, timeRange, and completionStatus).

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getAssetComplianceDetails
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: Successfully returned a CSV file containing the asset compliance details.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Export asset compliance details as CSV
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly
  /api/v2/asset-networks-batch:
    patch:
      description: 'Initiates batch operation of asset networks assignment or unassignment on selected asset IDs.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: assignAssetNetworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetNetworksBatchRequests'
        description: The body contains detailed instruction to patch.
        required: false
      responses:
        '204':
          description: Successfully patched asset networks.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponses'
          description: Failed to patch some assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Network assignment/unassignment on assets
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/asset-protection-metrics:
    get:
      description: 'Retrieves PowerProtect Data Manager asset protection metrics data. If successful, this API request returns the HTTP response code 200 (OK).

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getAssetProtectionMetrics
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProtectionMetrics'
          description: Successfully returned available asset protection metrics.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get asset protection metrics
      tags:
      - Resource Metrics
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/assets:
    get:
      description: 'Retrieves all assets that PowerProtect Data Manager manages.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: Successfully returned available asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '416':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is too large to be retrieved.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all assets
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random,serial
  /api/v2/assets-batch:
    patch:
      description: 'Update a batch of assets.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: batchUpdateAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateAssetRequests'
        description: Assets patch request body.
        required: false
      responses:
        '204':
          description: The batch of assets have been updated successfully.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponses'
          description: Some of the assets failed to update.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update multiple assets in batch
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/assets-deletion-batch:
    post:
      description: 'Delete multiple assets in batch.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: postAssetsDeletionBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsBatchDeletionRequests'
        required: false
      responses:
        '204':
          description: The batch of assets have been updated successfully.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponses'
          description: Successfully deleted all the assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete multiple assets in batch
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/assets-query:
    post:
      description: 'Accepts request with content type as application/x-www-form-urlencoded and retrieves all assets that PowerProtect Data Manager manages.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: assetsQuery
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: Successfully returned available asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '416':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is too large to be retrieved.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all assets
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random,serial
  /api/v2/assets/{id}:
    get:
      description: 'Retrieves an asset by its ID. Use this API request to get detailed information about the asset.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getAsset
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: Successfully returned the asset.
        '204':
          description: The requested asset does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get an asset by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    patch:
      description: 'Sends patch request to update certain asset fields including the VM disk excluded status. Each patch request sets only one asset by the specified ID.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: updateAssetExcludeDisk
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAssetRequest'
        description: The body contains detailed information of the disks to patch.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: The response shows the asset that includes the updated excluded disk status.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Set disks excluded status of an asset
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
    put:
      description: 'Updates the credential ID for the specified asset. If the asset is of type VMWARE_VIRTUAL_MACHINE, the dataMoverType can also be updated.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: updateAsset
      parameters:
      - description: The asset ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAssetRequest'
        description: The body contains detailed information of the asset to update.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: Successfully updated the asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update asset credential ID
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/assets/{id}/copies:
    get:
      description: 'Retrieves all copies of the asset by the specified asset ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getAssetCopies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The asset ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCopies'
          description: Successfully returned available copies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copies for an asset
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random
  /api/v2/assets/{id}/copy-map:
    get:
      description: 'Retrieves copy map of the specified asset.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getAssetCopyMap
      parameters:
      - description: ID of the asset.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Exclude copy state.(Input as DELETED,DELETING,DELETE_FAILED,SOFT_DELETED)
        in: query
        name: excludeCopyState
        schema:
          default: DELETED, SOFT_DELETED
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyMap'
          description: Successfully returned available copy map.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copy map for an asset
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/assets/{id}/file-instances:
    get:
      description: 'Retrieves a paginated list of documents that represent files and folders within the specified asset. A number of query parameters can be used to customize the ordering, pagination, and filtering of the result. By default, a list of 10 objects is returned.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getAssetFileInstances
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: ID of the protected asset.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date.
        in: query
        name: copyStartDate
        schema:
          format: date-time
          type: string
      - description: The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date.
        in: query
        name: copyEndDate
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInstances'
          description: Successfully returned the array of files and folders within the specified asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Server error prevented the successful completion of the request.
      security:
      - BearerAuth: []
      summary: Get files and folders within a protected asset
      tags:
      - Asset Metadata
      x-ppdm-executable-roles: admin
  /api/v2/assets/{id}/hosts:
    get:
      description: 'Retrieves all hosts of the asset by the specified asset ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getAssetHosts
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The asset ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hosts'
          description: Successfully returned hosts.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get hosts for an asset
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random
  /api/v2/audit-logs:
    get:
      description: "Retrieves all audit log resources. \n> This endpoint supports execution by the following roles: Administrator, User, Security Administrator\n\n> This endpoint supports pagination with types: random,serial\n"
      operationId: getAuditLogs
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogs'
          description: Successfully returned available audit logs.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check the request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '416':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is too large to be satisfied.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all audit log resources
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random,serial
  /api/v2/audit-logs/{id}:
    get:
      description: "Retrieves the audit log resource that matches the given ID. \n> This endpoint supports execution by the following roles: Administrator, User, Security Administrator\n"
      operationId: getAuditLog
      parameters:
      - description: ID of the audit log resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: Successfully returned the audit log.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get an audit log resource by ID
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/audit-logs/{id}/notes:
    put:
      description: "Updates the audit log resource with the given ID. \n> This endpoint supports execution by the following roles: Administrator, Security Administrator\n"
      operationId: updateAuditLogNotes
      parameters:
      - description: ID of the audit log resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLog'
        description: The Audit Log request body.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: Successfully returned the audit log.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested audit logs does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update the AuditLog resource by ID
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/cdrs-deployment:
    get:
      description: Retrieves the Cloud Disaster Recovery Server (CDRS) deployment activity ID. Provides the latest CDRS deployment activity ID, if it exists.
      operationId: getCdrs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsDeploymentActivity'
          description: CDRS deployment activity ID extracted successfully.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: CDRS deployment job ID not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get CDRS deployment Activity ID.
      tags:
      - Appliance Management
    post:
      description: Starts to deploy the Cloud Disaster Recovery Server (CDRS) in the public cloud. CDRS can restore VMs to the public cloud.
      operationId: deployCdrs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdrsDeployment'
        description: Starts CDRS deployment
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsDeploymentActivity'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsDeploymentActivity'
          description: CDRS deployment request was executed successfully.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Starts to deploy the CDRS.
      tags:
      - Appliance Management
      x-codegen-request-body-name: CdrsDeployment
  /api/v2/certificates:
    get:
      description: 'Get the external hosts and root CA TLS certificates that are stored in the trust store and have the state ACCEPTED. List them in the response body in JSON format. Identical to GET /api/v2/certificates/external.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getCertificates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: Specify the host from which to get the certificate.
        in: query
        name: host
        required: true
        schema:
          type: string
      - description: Specify the port number from which to get the certificate.
        in: query
        name: port
        required: true
        schema:
          type: string
      - description: Specify the type of certificate to get.
        in: query
        name: type
        schema:
          default: HOST
          enum:
          - HOST
          - ROOT
          - INTERMEDIATE
          type: string
      - description: Check if the host IP or fully qualified domain name (FQDN) used in host is in the certificate's subject alternative name.
        in: query
        name: strict
        schema:
          default: false
          type: boolean
      - description: Retrieve a list of certificates defined by the sorting order.
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificatesList'
          description: Successfully retrieved all the certificates.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all certificates
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,readonly,security_admin
    post:
      description: Add a certificate to the truststore by providing the certificate chain.
      operationId: postCertByCertChain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCertificateChainRequest'
        description: Certificate chain request.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully added the certificate into the truststore.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '503':
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Add a certificate by certificate chain.
      tags:
      - Secrets Manager
  /api/v2/certificates-replacement:
    post:
      description: 'Replace self-signed certificates with customer certificates signed by a well-known Certificate Authority for both NGINX (UI) and ZUUL (Rest API).


        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: replaceCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateReplacement'
        description: Certificate replacement.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateReplacementResponse'
          description: Successfully replaced self-signed certificate with the customer certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
      security:
      - BearerAuth: []
      summary: Replace self-signed certificates with customer certificates.
      tags:
      - Secrets Manager
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/certificates-signing:
    post:
      description: Signs a CSR by providing the certificate content and the IP and FQDN of the external host. The IP of the external host must be added to the whitelist before signing the CSR.
      operationId: signCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateSigningRequest'
        description: Certificates Signing Request
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateSigningResponse'
          description: Successfully signed CSR and returned the signed certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '409':
          description: Request could not be processed because of a data conflict.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Sign a certificate signing request (CSR)
      tags:
      - Secrets Manager
      x-codegen-request-body-name: body
  /api/v2/certificates-verify:
    post:
      description: Validate client agent certificates by checking if they exist and are trusted.
      operationId: verifyClientCertificates
      responses:
        '200':
          description: Certificates are valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Certificates are not valid. The Certificate Authority (CA) certificates may have been regenerated. Trust must be re-established.
      security: []
      summary: Validate client agent certificates
      tags:
      - Secrets Manager
  /api/v2/certificates/agent:
    get:
      description: 'Get the agent TLS certificates that are stored in the trust store, and list them in the response body in JSON format.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getAgentCertificates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: Retrieve a list of agent certificates defined by the sorting order.
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificates'
          description: Successfully retrieved all the agent certificates.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all agent certificates.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/certificates/external:
    get:
      description: 'Get the external hosts and root CA TLS certificates that are stored in the trust store and have the state ACCEPTED. List them in the response body in JSON format. Identical to GET /api/v2/certificates.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getExternalCertificates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: Retrieve a list of external certificates defined by the sorting order.
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificates'
          description: Successfully retrieved all the external certificates.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all external certificates.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/certificates/internal:
    get:
      description: 'Get the internal hosts TLS certificates that are stored in the trust store, and list them in the response body in JSON format.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getInternalCertificates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: Retrieve a list of internal certificates defined by the sorting order.
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificates'
          description: Successfully retrieved all the internal certificates.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all internal certificates.
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/certificates/root:
    get:
      description: Get the root certificate and globalCA certificate that are stored in the trust store, and list them in the response body in JSON format.
      operationId: getRootCertificates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRoot'
          description: Successfully retrieved the root certificate and globalCA certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all root certificates.
      tags:
      - Secrets Manager
  /api/v2/certificates/{certId}:
    delete:
      description: 'Deletes an external host TLS certificate that is stored in the trust store by using the ID of the certificate.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: deleteCertificate
      parameters:
      - description: Certificate ID.
        in: path
        name: certId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the specified certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a certificate by ID
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,security_admin
    get:
      description: 'Get an external host TLS certificate that is stored in the trust store, and list it in the response body in JSON format.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getCertificate
      parameters:
      - description: Certificate ID.
        in: path
        name: certId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully retrieved the specified certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a certificate by ID
      tags:
      - Secrets Manager
      x-ppdm-executable-roles: admin,readonly,security_admin
    put:
      description: 'Update an external host TLS certificate that is stored in the trust store by using the ID of the certificate. List the updated one in the response body in JSON format.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: updateCertificate
      parameters:
      - description: Certificate ID.
        in: path
        name: certId
        required: true
        schema:
          type: string
      - description: Specify whether to save certificate to file.
        in: query
        name: saveFile
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
        description: Certificates
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully updated the specified certificate.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '404':
          description: The certificate was not found.
        '500':
          description: An issue occurred on the system. Please contact the system administrator.
        '503':
          description: The operation is unavailable. The system may be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a certificate by ID
      tags:
      - Secrets Manager
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/check-nas-flr-selection-conflicts:
    post:
      description: Filter out conflicting FLR targets for NAS.
      operationId: post-api-v2-check-nas-flr-selection-conflicts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FLRConflictsRequest'
        description: FLRConflictsRequest will have the list of FLR items that are selected and committed in FLR workflow.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLRConflictsResponse'
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Check for NAS FLR selection conflicts
      tags:
      - NAS Data Management
      x-internal: false
  /api/v2/cloud-dr-accounts:
    get:
      description: 'Retrieves a complete listing of the Cloud Disaster Recovery (Cloud DR) accounts in the system. This listing includes the IDs for each Cloud DR account as well as other information such as the name of the provider, user name, connection status, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccounts'
          description: Successfully returned Cloud DR accounts list.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR accounts
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Creates a new Cloud Disaster Recovery account.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createCloudDrAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudAccount'
        description: Cloud account creation parameters.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccount'
          description: Resource created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Create Cloud DR account
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-accounts/{id}:
    get:
      description: 'Retrieves the specified Cloud Disaster Recovery account by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrAccount
      parameters:
      - description: Cloud DR account ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccount'
          description: Successfully returned Cloud DR account.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR account by ID
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Updates the specified Cloud Disaster Recovery account.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCloudDrAccount
      parameters:
      - description: The Cloud DR account ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudAccount'
        description: Cloud DR account modification parameters.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccount'
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update a Cloud DR account
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-data-targets:
    get:
      description: 'Retrieves a list of Cloud DR targets for the specified Cloud DR account.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrDataTargets
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTargets'
          description: Successfully returned Cloud DR targets list.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all Cloud DR targets
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Creates Cloud Disaster Recovery target for the specified Cloud DR account.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudTarget'
        description: Cloud DR target creation parameters.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTarget'
          description: Resource created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Create a Cloud DR target
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-data-targets/{tdId}:
    delete:
      description: 'Deletes Cloud Disaster Recovery target for the specified Cloud DR account.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: ID of the Cloud DR target.
        in: path
        name: tdId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted Cloud DR target.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Delete a Cloud DR target
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves Cloud Disaster Recovery target by its ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrDataTarget
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: ID of the Cloud DR target.
        in: path
        name: tdId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTarget'
          description: Successfully returned Cloud DR target.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get a Cloud DR target
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-storage-containers:
    get:
      description: 'Retrieves a list of Cloud DR storage containers for the specified Cloud DR account.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrStorageContainers
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - description: 'The ID of storage container. '
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainers'
          description: Successfully returned storage containers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR storage containers
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-dr-accounts/{id}/cloud-dr-storage-containers/{scId}:
    get:
      description: 'Retrieves the specified Cloud Disaster Recovery storage container for the Cloud DR account.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrStorageContainer
      parameters:
      - description: ID of the Cloud DR account.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Storage container ID.
        in: path
        name: scId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainer'
          description: Successfully returned storage container.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get a Cloud DR storage container
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-dr-configurations:
    put:
      description: 'Update the Cloud Disaster Recovery configuration. Cloud DR configuration settings are internal and should not be modified without the supervision of Customer Support.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCloudDrConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdrConfiguration'
        description: Cloud DR configuration setting consists of a key and value.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsExtendedProperties'
          description: Resource has been updated successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update Cloud DR configuration
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-configurations/{key}:
    get:
      description: 'Retrieves the Cloud Disaster Recovery configuration setting for the specified key. Cloud DR configuration settings are internal and should not be modified without the supervision of Customer Support.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getCloudDrConfiguration
      parameters:
      - description: Key of the Cloud DR configuration setting.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrConfiguration'
          description: The response body contains the requested Cloud DR configuration setting.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR configuration by key
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/cloud-dr-proxy:
    delete:
      description: 'Deletes proxy details from Cloud DR.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteCloudDrProxy
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
          description: The request was accepted for processing.
      security:
      - BearerAuth: []
      summary: Delete Cloud DR proxy configuration
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves details about the Cloud DR proxy.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getCloudDrProxy
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CdrProxyConfigurationOutput'
                type: array
          description: The request completed successfully.
      security:
      - BearerAuth: []
      summary: Get Cloud DR proxy configuration
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates proxy details in Cloud DR.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCloudDrProxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdrProxyConfigurationInput'
        description: CdrProxyConfiguration
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrProxyConfigurationOutputDetailed'
          description: The request was accepted for processing.
      security:
      - BearerAuth: []
      summary: Update Cloud DR proxy configuration
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-regions/{region}/networks:
    get:
      description: 'Retrieves Cloud Disaster Recovery (Cloud DR) target networks for the specified region. Getting this information enables you to run a disaster recovery operation.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: getCloudDrRegionsNetworks
      parameters:
      - description: Specific region.
        in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrCloudNetworks'
          description: The response is a list of all the available networks in the specified region.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR target networks
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/cloud-dr-server-configuration:
    get:
      description: 'Retrieves the Cloud Disaster Recovery Server (CDRS) properties. CDRS properties include Cloud target ID, CDRS connection IP address and connectivity state, region, whether the deployment completed or not, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrServerConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsExtendedProperties'
          description: Successfully returned CDRS properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get CDRS properties
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    patch:
      description: 'Edit the Cloud Disaster Recovery Server (CDRS) connection properties.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCloudDrServerConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCdrServerConfigurationRequest'
        description: Edit CDRS connection properties.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrsExtendedProperties'
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Edit CDRS connection properties
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-server-deployment:
    delete:
      description: 'Deletes the Cloud Disaster Recovery Server (CDRS).

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteCloudDrServer
      requestBody:
        content:
          application/json:
            schema:
              description: Region.
              type: string
        description: CDRS deployment region.
        required: false
      responses:
        '200':
          description: Successfully deleted CDRS.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Delete the CDRS
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
    get:
      description: 'Get the Cloud Disaster Recovery Server (CDRS) deployment state. The deployment state includes job name, deployment state, and deployment stages and their status.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrServer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployStateProperties'
          description: Successfully returned CDRS deployment state.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get the CDRS deployment state
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Deploys a Cloud Disaster Recovery Server (CDRS).

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deployCloudDrServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployCdrsRequest'
        description: Deploy CDRS resource.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResponse'
          description: Request accepted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Deploy a CDRS
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-server-version:
    get:
      description: 'Retrieves the Cloud Disaster Recovery Server (CDRS) version.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrServerVersion
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrVersion'
          description: Successfully returned CDRS version.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get CDRS version
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-dr-sessions:
    get:
      description: 'Retrieves Cloud Disaster Recovery sessions by pagination, order by, and filter.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: getCloudDrSessions
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrSessions'
          description: Successfully returned available Cloud DR sessions resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR sessions
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/cloud-dr-sessions/{drId}:
    delete:
      description: 'Ends the Cloud Disaster Recovery session according to the specified session ID. You can get a list of Cloud Disaster Recovery session IDs by using GET /api/v2/cloud-dr-sessions.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: endCloudDrSession
      parameters:
      - description: Cloud DR session ID.
        in: path
        name: drId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully invoked ending of Cloud DR session.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: End Cloud DR session
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/cloud-dr-vcenters:
    get:
      description: 'Retrieves a list of Cloud Disaster Recovery vCenter Servers. The list includes the vCenter Server IDs, which you can use to update the vCenter Server configuration or get the vCenter Server inventory of the specified vCenter Server.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrVCenter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrVcRemoteServers'
          description: Successfully returned vCenter Servers list.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get Cloud DR vCenters list
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-dr-vcenters/{id}/configuration:
    put:
      description: 'Updates the vCenter configuration for the specified vCenter Server.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCloudDrVCenterConfiguration
      parameters:
      - description: The vCenter Server ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdrVcConfiguration'
        description: Cloud DR vCenter configuration.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
          description: Successfully updated vCenter configuration.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '404':
          description: The vCenter id in the request is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update vCenter configuration
      tags:
      - Cloud Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/cloud-dr-vcenters/{id}/inventory:
    get:
      description: 'Retrieves vCenter inventory for the specified vCenter Server ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCloudDrVCenterInventory
      parameters:
      - description: The vCenter Server ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdrVcInventory'
          description: Successfully returned vCenter inventory.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The vCenter id in the request is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get vCenter inventory
      tags:
      - Cloud Disaster Recovery
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/cloud-recalled-copies:
    post:
      description: 'Runs a process to move back a copy set from the cloud to the active tier based on the specified protection copy set ID and retier retention time.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: recallCloudCopy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRecalledCopy'
        description: Provide the protectionCopySetId and retierRetentionTime to recall an asset.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudResult'
          description: Asset has been moved back to PowerProtect DD system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Recall a copy from the cloud
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/cloud-recalled-copies/{copySetId}:
    put:
      description: 'Updates the retier retention time for a specified copy set on a PowerProtect DD system based on the copy set ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: updateCloudCopyRetierRetentionTime
      parameters:
      - description: The asset ID of a copy on the PowerProtect DD system.
        in: path
        name: copySetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetierRetentionTime'
        description: Provide the new retierRetentionTime of the asset that corresponds to the copySetId being passed in.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudResult'
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          description: The requester is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update a copy set retier time to the cloud
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/cloud-tiered-copies:
    post:
      description: 'Starts a process to move copies from the PowerProtect DD active tier to the cloud tier/cloud unit. Copies are moved to the cloud for long-term retention.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: createCloudTieredCopy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudTieredCopy'
        description: Required to provide the protectionCopySetId in order to set a copy for CloutTiering.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudResult'
          description: 'Cloud tiering process for asset has been created. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Creates cloud tiering process for an asset or a copy set
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/common-settings:
    get:
      description: 'Retrieves all available common settings. The returned listing contains information about the common setting name and value. The results sorted by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getCommonSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSettings'
          description: Located and returned the available settings successfully.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all common settings
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/common-settings/ASSET_SETTING:
    get:
      description: 'Retrieves the current asset settings.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getAssetSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully returned the asset settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get asset settings
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Modify the current asset settings.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateAssetSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
        description: 'Payload of Common Settings. '
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully updated the asset settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid request to update Dynamic Filter setting.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Modify asset settings
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/COMPLIANCE_SETTING:
    get:
      description: Retrieves the Compliance common settings.
      operationId: getComplianceSetting
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully returned the Compliance common settings.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service Unavailable
        '504':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Gateway Timeout
      summary: Get Compliance common settings
      tags:
      - Compliance
    put:
      description: "Update Compliance common settings.\nAs for expired copy deletion, there are 2 parameters to control specail handle for asset:\n1) expiredCopyDeletionEnabledForAssetInExclusionPolicy\n   if the value is 'false', the deletion of expired copies of asset assigned to exclusion policy will be skipped. The default value is 'true', will not skip the expired copy deletion of asset assigned to exclusion policy\n2) expiredCopyDeletionEnabledForAssetInDisabledPolicy\n   if the value is 'false', the deletion of expired copies of asset assigned to disabled policy will be skipped. The default value is 'true', will not skip the expired copy deletion of asset assigned to disabled policy"
      operationId: setComplianceSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: 'Successfully updated the Compliance common setting. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid request to update Compliance common setting.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service Unavailable
        '504':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Gateway Timeout
      security:
      - BearerAuth: []
      summary: Update Compliance settings
      tags:
      - Compliance
  /api/v2/common-settings/DYNAMIC_FILTER_SETTING:
    get:
      description: 'Retrieves the dynamic filter settings.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getDynamicFilterSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get dynamic filter settings
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the dynamic filter settings (known as protection rules in the PowerProtect Data Manager UI).


        PowerProtect Data Manager supports migrating any assets across protection policies by default. If you want to migrate only *unprotected* assets across protection policies, remove the "value" from the supportMoveAssetsAcrossProtectionPolicy property when forming the request. Using the "VMWARE_VIRTUAL_MACHINE" value as an example, if you want to enable migrating only *unprotected* VMs across protection policies, remove the value "VMWARE_VIRTUAL_MACHINE."

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateDynamicFilterSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
        description: Update the value of properties for the dynamic filter setting.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully updated the dynamic filter settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid request to update the dynamic filter setting.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Update dynamic filter settings
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/LOCAL_USER_SETTING:
    get:
      description: Get the local user account settings.
      operationId: getCommonSettingsLocalUserSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully retrieved the local user account settings.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the local user account settings
      tags:
      - User Security Management
    put:
      description: Update the local user account settings.
      operationId: updateCommonSettingsLocalUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
        description: Local user account settings.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully retrieved the local user account settings.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Update the local user account settings
      tags:
      - User Security Management
  /api/v2/common-settings/PROTECTION_POLICY_SETTING:
    get:
      description: Retrieves the protection policy common settings.
      operationId: getProtectionPolicySetting
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully returned the protection policy common settings.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service Unavailable
        '504':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Gateway Timeout
      summary: Get protection policy common setting
      tags:
      - Protection Policies
    put:
      description: Update protection policy common settings.
      operationId: updateProtectionPolicySetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicySetting'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: 'Successfully updated the protection policy common setting. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid request to update protection policy common setting.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service Unavailable
        '504':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Gateway Timeout
      security:
      - BearerAuth: []
      summary: Update protection policy setting
      tags:
      - Protection Policies
  /api/v2/common-settings/TELEMETRY_SETTING:
    get:
      description: 'Retrieves the current telemetry settings which includes CloudIQ incremental reporting frequency in minutes, CloudIQ daily full syncup enabled, transport type and CloudIQ protection metrics enabled fields.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getTelemetrySetting
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Found and returned the telemetry settings.
        '401':
          description: The requestor is not authenticated to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Get telemetry settings
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the current telemetry settings which includes CloudIQ incremental reporting frequency in minutes, CloudIQ daily full syncup enabled, transport type and CloudIQ protection metrics enabled fields.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateTelemetrySetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
        description: Request body containing Common Settings REST Resource model.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully updated the telemetry settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The submitted settings payload has a syntax error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Required fields are missing in the request payload.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Update telemetry settings
      tags:
      - Telemetry Setting
      x-codegen-request-body-name: CommonSettingsRestResource
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/VM_BACKUP_SETTING:
    get:
      description: 'Retrieves the VM backup settings.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getVmBackupSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully returned the VM backup settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get VM backup settings
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the current VM backup settings.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateVmBackupSettings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully updated the VM backup settings.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid request to update VM backup setting.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Update VM backup settings
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
  /api/v2/common-settings/{id}:
    get:
      description: 'Retrieves the common settings by ID. Common setting information contains the properties name and value.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getCommonSetting
      parameters:
      - description: Common settings ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Found and returned all the settings with the specified common settings ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find settings with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get common settings by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Modifies the common settings by ID. Common setting information contains the property name and value. Only the value can be updated.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCommonSetting
      parameters:
      - description: Common settings ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonSetting'
        description: Modify the settings.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonSetting'
          description: Successfully updated the settings.
        '400':
          description: The submitted settings payload has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find settings with the specified ID.
        '422':
          description: Occurs when the required fields are missing in the request payload.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Modify common settings by ID
      tags:
      - Appliance Management
      x-codegen-request-body-name: CommonSettingsRestResource
      x-ppdm-executable-roles: admin
  /api/v2/compliance-details:
    get:
      description: 'Retrieves the **Compliance Details**. **Compliance Detail** is a summary of the compliance result for one asset on one SLA on one stage of policy. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset. Normally, one compliance result has multiple assigned SLAs. This API can support multiple filters (for example, assetId and completionTime).


        This API has a known issue for pagination. The size is not the actual page size, but the compliance result size.  For example, if you request a page size of 10, you receive 10 compliance results. If each compliance result has 4 SLAs on different stages, the return size is 40 instead of 10. The totalPages and totalElements properties are for the compliance result instead of compliance detail.


        > This endpoint supports execution by the following roles: Administrator, User


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getComplianceDetails
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceDetails'
          description: Successfully returned available compliance results.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An default error response.
      security:
      - BearerAuth: []
      summary: Get compliance details
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly
      x-ppdm-pagination: random,serial
  /api/v2/compliance-results:
    get:
      description: 'Retrieves the compliance results. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getComplianceResults
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceResults'
          description: Successfully returned available compliance result.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all compliance results
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/compliance-results/{id}:
    get:
      description: 'Retrieves the compliance result with the specified ID. The compliance result is one run of compliance verification for one asset for all SLAs that are assigned to the asset.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getComplianceResult
      parameters:
      - description: ID of the compliance result.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceResult'
          description: Successfully returned the compliance result.
        '204':
          description: The requested compliance result does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get compliance results by ID
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/components:
    get:
      description: 'Retrieves all the available components. The returned listing includes the component ID, display name, service name, status, monitored, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getComponents
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemComponents'
          description: Successfully returned available resources.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all components
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/components/{id}:
    get:
      description: 'Retrieves component with the specific ID. Component information includes the component ID, display name, service name, status, monitored, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getComponent
      parameters:
      - description: Component ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemComponent'
          description: Found and returned the component with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get component by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates a component by ID. Only status and monitored can be changed.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateComponent
      parameters:
      - description: Component ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemComponent'
        description: Modify the component.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemComponent'
          description: The update operation is successful.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update component by ID
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/components/{id}/management:
    post:
      description: 'Manages the Cloud Disaster Recovery Appliance (CDRA) component. Calling this API may increase additional resources like CPU and memory. For details, see the PowerProtect Data Manager User Guide.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: manageComponent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CDRAComponentStartup'
        description: Manages CDRA component.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
          description: Successful operation.
        '202':
          description: The POST operation is successful.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a component with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Manage CDRA component
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/configurations:
    get:
      description: 'Retrieves all PowerProtect Data Manager appliance configurations. Running GET on this API endpoint returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getConfigurations
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigurations'
          description: Successfully returned available resources.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all configurations
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/configurations/{configurationId}/config-status:
    get:
      description: 'Retrieves the progress of the initial configuration. The configuration ID must first be obtained by running GET on the configurations API, which returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getConfigStatus
      parameters:
      - description: Configuration ID.
        in: path
        name: configurationId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStatus'
          description: Located and returned the available configuration status successfully.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a configuration status with the given ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get the progress of initial configuration
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/configurations/{id}:
    get:
      description: 'Retrieves a PowerProtect Data Manager appliance configuration by its ID. Running GET on this API returns an array of configurations objects with which the PowerProtect Data Manager appliance can be configured.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getConfiguration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: Found and returned the configuration with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get configuration by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    patch:
      description: 'You can change only one value at a time. For example, to change the time zone and the lockbox passphrase, you require two separate requests. To update the network, first put the appliance in maintenance mode. Updating the network configuration requires a system reboot.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateConfiguration
      parameters:
      - description: Configuration ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: If set to true, the request will force update network configuration.
        in: query
        name: forceNetworkReconfiguration
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
        description: You can change only one value at a time. For example, to change the time zone and the lockbox passphrase, you require two separate requests. To update the network, first put the appliance in maintenance mode. Updating the network configuration requires a system reboot.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: Successful operation.
        '202':
          description: Accepted and processing the patch configuration request.
        '400':
          description: The submitted configuration has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Cannot change the configuration in the current node state.
        '404':
          description: Cannot find a configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update time zone, network, osusers password, and lockbox passphrase.
      tags:
      - Appliance Management
      x-codegen-request-body-name: Configuration
      x-ppdm-executable-roles: admin
    put:
      description: 'The initial configuration request is allowed only when the appliance state is PENDING or RESTORE. You can only perform the request once.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: startConfiguration
      parameters:
      - description: Configuration ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfiguration'
        description: The initial configuration request is allowed only when the appliance state is PENDING or RESTORE. You can only perform the request once.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfiguration'
          description: Successful operation.
        '202':
          description: Accepted and processing the initial configuration request.
        '400':
          description: The submitted configuration has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Cannot change the configuration in the current node state.
        '404':
          description: Cannot find a configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Start the initial configuration
      tags:
      - Appliance Management
      x-codegen-request-body-name: Configuration
      x-ppdm-executable-roles: admin
  /api/v2/copies-batch:
    patch:
      description: 'Changes retention time for copies. All asset types and backup types are supported. The maximum batch size is 1000.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: changeRetentionTime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopiesRetentionTimeBatchRequests'
        description: The body contains detailed instructions to patch.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopiesRetentionTimeBatchResponse'
          description: Retention time change request has been accepted.
        '400':
          description: The request is invalid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Change retention time for copies
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/copies-deletion-batch:
    post:
      description: Batch deletes copies from different assets and stage types.
      operationId: batchDeleteCopies
      parameters:
      - description: 'For asset type without dependency, this option makes no difference. For asset type with dependency between copies:

          - cascadeDelete=true deletes all copies in the dependency chain.

          - cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).

          - By default, if cascadeDelete is not specified, it functions as if cascadeDelete is false.'
        in: query
        name: cascadeDelete
        schema:
          default: 'false'
          type: string
      - description: '- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.

          - removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deletes from storage and application agent, then it deletes metadata from PowerProtect Data Manager.

          - By default, if removeConfigurationOnly is not specified, it behaves as if removeConfigurationOnly is false.'
        in: query
        name: removeConfigurationOnly
        schema:
          default: 'false'
          type: string
      - description: '- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.

          - forceRemoveLatestBackup=false, if the specified copy is the latest backup, returns 409 error.

          - By default is forceRemoveLatestBackup is not specified, it behaves as if removeConfigurationOnly is false.'
        in: query
        name: forceRemoveLatestBackup
        schema:
          default: 'false'
          type: string
      - description: '- forceDelete=true enables force deleting without checking the state of the copies.

          - forceDelete=false if the copy with restoring/cloud tiering state, skip deleting the copy.

          - By default, if forceDeleteis not specified, it behaves as if forceDeleteis false.'
        in: query
        name: forceDelete
        schema:
          default: 'false'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDeletionBatchRequests'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyDeletionBatchResponses'
          description: Successfully deleted copies in batch.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '409':
          description: Conflict.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete copies in batch
      tags:
      - Copy Management
      x-codegen-request-body-name: body
  /api/v2/copies-query:
    post:
      description: 'Get copy list from the PowerProtect Data Manager system.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: queryCopies
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCopiesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copies'
          description: Successfully returned available copies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copy list
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin
  /api/v2/copies-report:
    get:
      description: 'Retrieves deleted copies based on the filter provided and exports detailed information in the report in CSV format.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getCopiesReport
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: string
          description: Successfully returned a CSV file containing the deleted copies detail information.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Export deleted copies as CSV report
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,readonly
  /api/v2/copies/{id}:
    delete:
      description: 'Deletes asset copy by ID.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: deleteCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'For asset type without dependency, this option makes no difference. For asset type with dependency between copies:

          - cascadeDelete=true deletes all copies in the dependency chain.

          - cascadeDelete=false does not delete any copy with HTTP status code of 409 (Conflict).

          - By default, when cascadeDelete is not specified, it operates as if cascadeDelete is false.'
        in: query
        name: cascadeDelete
        schema:
          default: 'false'
          type: string
      - description: '- removeConfigurationOnly=true only deletes metadata from PowerProtect Data Manager without physically deleting from storage or application agent.

          - removeConfigurationOnly=false deletes copy from storage and application agent (if any). If successfully deleted from storage and application agent, then it deletes metadata from PowerProtect Data Manager.

          - By default, when removeConfigurationOnly is not specified, it operates as if removeConfigurationOnly is false.'
        in: query
        name: removeConfigurationOnly
        schema:
          default: 'false'
          type: string
      - description: '- forceRemoveLatestBackup=true enables deleting the latest backup. It may break the later chain, or for VM CBT backup, it may break the in-progress backup.

          - forceRemoveLatestBackup=false, if the specified copy is the latest backup, produces HTTP error 409 (Conflict).

          - By default, when forceRemoveLatestBackup is not specified, it operates as if removeConfigurationOnly is false.'
        in: query
        name: forceRemoveLatestBackup
        schema:
          default: 'false'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyDeletion'
          description: Success.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The copy to be deleted is not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The copy could not be deleted because of a dependency issue. Examples of dependency issues include retention lock, dependency copies could not be deleted, restoring, or cloud tiering, or cloud recalling.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete copy by ID
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,restore_admin
    get:
      description: 'Retrieves a copy by its ID. The copy defines asset backup. Each copy is assigned to an asset. A asset can correspond to many copies.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
          description: Successfully returned copy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copy by ID
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/copies/{id}/cloud:
    post:
      description: 'Recall and retier a copy from cloud. The header should contain a valid authentication token. Retier and retention time is required.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: cloudCreateCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCopy'
        description: Detailed information of the action to recall and retier a copy from cloud.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecallAndRetierCopyResponse'
          description: Successfully create the copy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Recall and retier a copy from cloud
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
    put:
      description: 'Update recall and retier a copy retier time from cloud. Only retier retention time can be updated. Retier retention time is required.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: cloudUpdateCopy
      parameters:
      - description: ID of the copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCopy'
        description: Detailed information of the action to recall and retier a copy from cloud.
        required: false
      responses:
        '200':
          description: Successfully updated the copy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update recall and retier a copy retier time from cloud
      tags:
      - Copy Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/copies/{id}/logs:
    get:
      description: 'Retrieves copy logs by ID. The parameter ID is the ID of a full copy. It returns BAD_REQUEST if parameter ID is invalid.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCopyLogs
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: ID of the copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyLogs'
          description: Successfully returned copy logs.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copy logs by ID
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/copy-metrics:
    get:
      description: Get copy metrics per asset.
      operationId: getCopyMetrics
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyMetrics'
          description: Successfully returned copy metrics.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get copy metrics
      tags:
      - Compliance
  /api/v2/credentials:
    get:
      description: 'Retrieves all **Credentials** in PowerProtect Data Manager. **Credentials** contains username and password or token. The password is securely stored in the lockbox of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCredentials
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Successfully returned available credentials.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all credentials
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Creates a **Credential** in PowerProtect Data Manager. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
        description: Request body to create a credential.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: Successful operation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: Successfully created the credential.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a credential
      tags:
      - Credentials Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/credentials-batch:
    patch:
      description: 'Credentials batch update for password

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: batchUpdateCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsBatchRequests'
        description: Request Body for credential password batch update.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsBatchResponse'
          description: Credential password batch request has been accepted.
        '400':
          description: The request is invalid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Credentials batch update
      tags:
      - Credentials Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/credentials-deletion-batch:
    post:
      description: 'Delete multiple credentials in batch.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: postCredentialsDeletionBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsBatchDeletionRequest'
        required: false
      responses:
        '204':
          description: Successfully deleted all the credentials.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponses'
          description: Some of the credentials are failed to be deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete multiple credentials in batch
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/credentials/{id}:
    delete:
      description: 'Deletes a **Credential** by ID from PowerProtect Data Manager. The deleted **Credential** is removed from PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the credential.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a credential by ID
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: Successfully returned the credential.
        '204':
          description: The requested credential does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a credential by ID
      tags:
      - Credentials Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Updates a **Credential** by ID. **Credential** contains username and password. The password is securely stored in the lockbox of PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateCredential
      parameters:
      - description: ID of the credential.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
        description: Request body to update a credential.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
          description: Successfully updated the credential.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a credential by ID
      tags:
      - Credentials Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/credentials/{id}/usage:
    get:
      description: 'Get all the consumers which are using this credential

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getCredentialsUsage
      parameters:
      - description: The credential Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialUsage'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          description: The requested credential does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all the consumers which are using this credential
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    parameters:
    - description: The credential Id
      in: path
      name: id
      required: true
      schema:
        type: string
  /api/v2/data-targets:
    get:
      description: 'Retrieves all data targets. These data targets are automatically generated by storage systems. This API request returns a list of data targets.  An empty list is returned if there are no data sources. Filtering is supported for asterisked properties. Paging is supported.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataTargets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTargets'
          description: The request completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all data targets
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/data-targets/{id}:
    get:
      description: 'Retrieves a data target by its ID. This API request returns a data target. If the data target ID does not exist, 404 is returned.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataTarget
      parameters:
      - description: id of the data target
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTarget'
          description: The request completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a data target by ID
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/datadomain-cloud-units/{storageSystemId}:
    get:
      description: 'Provides a storage system ID to retrieve a list of all cloud units on the specified PowerProtect DD system. The result contains information about the cloud profile and provider name.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getDataDomainCloundUnits
      parameters:
      - description: Storage system ID.
        in: path
        name: storageSystemId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudUnits'
          description: The request completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested cloud unit does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all cloud units by storage system ID
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin
  /api/v2/datadomain-ddboost-encryption-settings:
    get:
      description: 'Retrieves PowerProtect DD system encryption setting information of the specified PowerProtect DD system or PowerProtect Data Manager. The result contains the authentication mode and the encryption strength information.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataDomainDdboostEncryptionSettings
      parameters:
      - description: The hostname.
        in: query
        name: hostname
        required: true
        schema:
          type: string
      - description: The port number.
        in: query
        name: port
        required: true
        schema:
          format: int32
          type: integer
      - description: The encrytion type.
        in: query
        name: type
        required: true
        schema:
          type: string
      - description: The credential ID.
        in: query
        name: credentialId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainEncryptionSettings'
          description: The request completed successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get PowerProtect DD system encryption setting
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Updates PowerProtect DD system encryption setting of the local PowerProtect Data Manager. The encryption settings will be updated on the local Integrated Storage system.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateDataDomainDdboostEncryptionSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDomainEncryptionSettings'
        description: Request body
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainEncryptionSettings'
          description: The request completed successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update PowerProtect DD system encryption setting
      tags:
      - Storage Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/datadomain-mtrees:
    get:
      description: 'Retrieves a list of all PowerProtect DD MTrees existing in all added PowerProtect DD systems in the current PowerProtect system. The result contains information about each Mtree on the list such as the name, retention lock, storage system, and quotas.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataDomainMTrees
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainMTrees'
          description: The request completed successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all PowerProtect DD system MTrees
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/datadomain-mtrees/{dataTargetId}:
    get:
      description: 'Retrieves a PowerProtect DD system MTree by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataDomainMTree
      parameters:
      - description: Data target ID.
        in: path
        name: dataTargetId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainMTree'
          description: The request completed successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: The requested PowerProtect DD system Mtree does not exist.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a PowerProtect DD system MTree by ID
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Update a PowerProtect DD system Mtree by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateDataDomainMTree
      parameters:
      - description: Data target ID.
        in: path
        name: dataTargetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDomainMTree'
        description: Request body.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainMTree'
          description: The request completed successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requester is not authenticated to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a PowerProtect DD system Mtree by ID
      tags:
      - Storage Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/datadomain-storage-units:
    post:
      description: 'Creates a PowerProtect DD storage unit.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createDataDomainStorageUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDomainStorageUnitCreateRequest'
        description: Request body
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainStorageUnit'
          description: The requested resource was created successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Create a PowerProtect DD storage unit
      tags:
      - Storage Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/datadomain-storage-units/{dataTargetId}:
    get:
      description: 'Provides a data target ID to get information about the storage unit such as name, retention lock status, and PowerProtect DD storage system.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getDataDomainStorageUnit
      parameters:
      - description: Data target ID
        in: path
        name: dataTargetId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDomainStorageUnit'
          description: The request completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get storage unit by data target ID
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/discover-nas-copies:
    post:
      description: Submits a request to NAS Pillar to discover NAS copies during Server DR.
      operationId: discoverNasCopies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDiscoveryResource'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsynchronousResponse'
          description: Successfully triggered the NAS copy discovery.
      security:
      - BearerAuth: []
      summary: Trigger NAS copy discovery
      tags:
      - NAS Data Management
      x-internal: true
  /api/v2/discoveries:
    get:
      description: 'Retrieves a paginated list of discoveries. You can specify the page number and the page size by using **page** and **pageSize** query parameters respectively. By default, a list of all discovery objects is returned. This API also supports a **filter** query parameter that returns discovery objects that match a specified set of conditions. This API supports an **orderby** query parameter to specify how the returned list of discovery objects is sorted. When successful, the API returns the HTTP status code 200 (OK).


        > This endpoint supports execution by the following roles: Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getAllDiscoveries
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discoveries'
          description: Successfully returned known discoveries.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all discoveries
      tags:
      - Discovery
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random
    post:
      description: 'Runs a discovery that is identified by a specified **start** value. If the discovery that is identified by the specified **start** value is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery starts successfully, the API returns the HTTP status code 202 (ACCEPTED).

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discovery'
        description: 'The request body must contain a JSON representation of the discovery model. '
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: Successfully accepted the discovery request.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A similar discovery request is currently processing.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Request a discovery
      tags:
      - Discovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/discoveries/{id}:
    delete:
      description: 'Deletes a discovery that is identified by a specified ID. If the discovery that is identified by the specified ID is already running, the API returns an error with HTTP status code 409 (CONFLICT). If the discovery is deleted successfully, this API returns the HTTP status code 204 (NO CONTENT).

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteDiscovery
      parameters:
      - description: The ID of the internal discovery model stored in Elasticsearch.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the discovery.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '409':
          description: A similar discovery request is currently processing.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Delete a discovery by ID
      tags:
      - Discovery
      x-ppdm-executable-roles: admin
    put:
      description: 'Updates a discovery that is identified by a specified ID. Use this API to update the scheduled start time (hour and minute) when a discovery re-runs each day or set whether that scheduled discovery is enabled. If the server is in the quiesce state before a backup, the API returns the HTTP status code 503 (SERVICE UNAVAILABLE). If the discovery is updated successfully, the API returns the HTTP status code 200 (OK).

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateDiscovery
      parameters:
      - description: The UUID of the internal discovery model stored in Elasticsearch.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discovery'
        description: The request body must contain a JSON representation of the discovery model.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discovery'
          description: Successfully updated the discovery.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Server in quiesce state prior to a backup.
      security:
      - BearerAuth: []
      summary: Update a discovery by ID
      tags:
      - Discovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/disks:
    get:
      description: 'Retrieves all disks in the appliance. The returned listing includes the disk name, total size, available size, partition information, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getDisks
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disks'
          description: Located and returned the available disks successfully.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all disks in the appliance
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/disks/{id}:
    get:
      description: 'Retrieves a disk by ID. The disk information includes the disk name, total size, available size, partition information, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getDisk
      parameters:
      - description: Disk ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
          description: Found and returned the disk with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a disk with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get disk by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/dynamic-filters:
    get:
      deprecated: true
      description: 'Retrieves all dynamic filters

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator

        '
      operationId: getDynamicFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRules'
          description: Successfully returned available dynamic filters.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all dynamic filters
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin
    post:
      deprecated: true
      description: 'Create a dynamic filter.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createDynamicFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRule'
        description: Detailed information for the dynamic filter to create.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: 'Successful operation. '
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully created the dynamic filter.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a dynamic filter
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/dynamic-filters-execution:
    post:
      deprecated: true
      description: 'Executes dynamic filters.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: executeDynamicFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRuleExecution'
        description: Detailed information about running dynamic filters.
        required: false
      responses:
        '200':
          description: Successfully triggered the dynamic filters.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Execute dynamic filters
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/dynamic-filters/{id}:
    delete:
      deprecated: true
      description: 'Deletes dynamic filter by specified ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted the dynamic filter.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete dynamic filter by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
    get:
      deprecated: true
      description: 'Retrieves a dynamic filter by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator

        '
      operationId: getDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully returned the dynamic filter.
        '204':
          description: The requested dynamic filter does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a dynamic filter by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin
    put:
      deprecated: true
      description: 'Update dynamic filter by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateDynamicFilter
      parameters:
      - description: ID of the dynamic filter.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRule'
        description: Detail information of dynamic filter to be updated.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully updated the dynamic filter.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a dynamic filter by ID
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/eulas/PPDM:
    get:
      deprecated: true
      description: 'Retrieves the current PowerProtect Data Manager end user license agreement (EULA). The EULA information includes the EULA link, accepted status, and accepted time.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getPPDMEULA
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PPDMEULA'
          description: Found and returned the PowerProtect Data Manager EULA.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      summary: Get PowerProtect Data Manager EULA
      tags:
      - Installation
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    patch:
      deprecated: true
      description: 'Accepts PowerProtect Data Manager end user license agreement (EULA). Only the accepted status can be changed, and the value can only be set to true.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: acceptPPDMEULA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPPDMEULA'
        description: Request body containing accepted or not
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PPDMEULA'
          description: Successfully updated the PowerProtect Data Manager EULA.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The submitted settings payload has a syntax error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Required fields are missing in the request payload.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      summary: Accept PowerProtect Data Manager EULA
      tags:
      - Installation
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/eulas/TELEMETRY:
    get:
      description: 'Retrieves the current telemetry end user license agreement (EULA) which includes link, accepted and accepted time fields. By default, the telemetry EULA is not accepted.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getTelemetryEULA
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryEULA'
          description: Found and returned the telemetry EULA.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Get telemetry EULA
      tags:
      - Telemetry Setting
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    patch:
      description: 'Accepts telemetry end user license agreement (EULA). Once the telemetry EULA is accepted, it cannot be declined. Also, there is no need to accept the telemetry EULA again if it has already been accepted.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: acceptTelemetryEULA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptTelemetryEULA'
        description: Request body containing accepted or not
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryEULA'
          description: Successfully updated the telemetry EULA.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The submitted settings payload has a syntax error, Or decline the telemetry EULA which has already been accepted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Required fields are missing in the request payload.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      security:
      - BearerAuth: []
      summary: Accept telemetry EULA
      tags:
      - Telemetry Setting
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/eulas/data-manager:
    get:
      description: 'Retrieves the current PowerProtect Data Manager end user license agreement (EULA). The EULA information includes the EULA link, accepted status, and accepted time.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getDataManagerEULA
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerEULA'
          description: Found and returned the PowerProtect Data Manager EULA.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      summary: Get PowerProtect Data Manager EULA
      tags:
      - Installation
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    parameters: []
    patch:
      description: 'Accepts PowerProtect Data Manager end user license agreement (EULA). Only the accepted status can be changed, and the value can only be set to true.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: acceptDataManagerEULA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptDataManagerEULA'
        description: Request body containing accepted or not
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerEULA'
          description: Successfully updated the PowerProtect Data Manager EULA.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The submitted settings payload has a syntax error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Required fields are missing in the request payload.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service is unavailable.
      summary: Accept PowerProtect Data Manager EULA
      tags:
      - Installation
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/exported-copies:
    get:
      description: 'Retrieves all the exported copies. This API request defines which copy is already mounted. Exported copies are deleted after use.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getExportedCopies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedCopies'
          description: Successfully returned available exported copy resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all exported copies
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
      x-ppdm-pagination: random
  /api/v2/exported-copies/{id}:
    delete:
      description: 'Deletes an exported copy by parameter ID. This API request defines which copy is already mounted.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: deleteExportedCopy
      parameters:
      - description: ID of exported copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedCopiesDeletionResponse'
          description: Successfully initiated deletion of the exported copy.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete an exported copy by ID
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,restore_admin
    get:
      description: 'Retrieves an exported copy by parameter ID. This API request defines which copy is already mounted. Exported copies are deleted after use.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getExportedCopy
      parameters:
      - description: ID of copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedCopy'
          description: Successfully returned the exported copies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '404':
          description: The requested exported copies do not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get an exported copy by ID
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    patch:
      description: 'Updates an exported copy by request body.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: patchExportedCopies
      parameters:
      - description: ID of export copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedCopyPatchModel'
        description: Request body of updating export copy.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedCopy'
          description: Successfully updated the exported copy resource.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update an exported copy by ID
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/exported-copies/{id}/host-change:
    post:
      description: 'Attach new host to an exported copy or detach the host from an exported copy.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: changeExportedCopiesHost
      parameters:
      - description: ID of the exported copy.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedCopyHostChangeRequest'
        description: Request body of attach/detach host.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedCopyHostChangeResponse'
          description: Successfully created job for attaching/detaching the host.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested exported copy does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Change the host of the instant access session.
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/exports/{resource}:
    get:
      description: 'Download an export file for the specified resource type.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getExport
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The resource type to be exported.
        in: path
        name: resource
        required: true
        schema:
          type: string
      - description: The media type of the requested export file.
        in: header
        name: Accept
        schema:
          type: string
      - description: The time zone to which all dates and times of the export file are formatted. The value can be an abbreviation such as ``PST`` or a full name such as ``America/Los_Angeles``.
        in: query
        name: timeZone
        schema:
          type: string
      - description: Including summary calculation.
        in: query
        name: includingSummary
        schema:
          type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Request OK.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested media type is not supported.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Download export file for specified resource type
      tags:
      - Resource Details
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/external-notifications:
    get:
      description: 'Retrieves all configured external notifications.

        > This endpoint supports execution by the following roles: Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getExternalNotifications
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNotifications'
          description: Successfully returned available external notification.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all configured external notifications
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random,serial
    post:
      description: 'Create a new notification configuration.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createExternalNotification
      parameters:
      - description: Indicates whether to send a test email.
        in: query
        name: test
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalNotification'
        description: The external notification request body.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNotification'
          description: Resource created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Create an external notification
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/external-notifications/{id}:
    delete:
      description: 'Deletes an existing notification configuration by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteExternalNotification
      parameters:
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully returned with no content.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Delete an external notification by ID
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves an external notification by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getExternalNotification
      parameters:
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNotification'
          description: Successfully returned the event.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get an external notification by ID
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin
    put:
      description: 'Updates an external notification by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateExternalNotification
      parameters:
      - description: ID of the external notification resource.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalNotification'
        description: The external notification resource model.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalNotification'
          description: Resource updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not authenticated to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource is not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update external notification by ID
      tags:
      - Monitoring
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/features:
    get:
      description: Get all the available features. Returned listing includes the feature name, status, API rules, and so on.
      operationId: getFeatures
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Features'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get all features.
      tags:
      - Installation
  /api/v2/features-batch:
    patch:
      description: Update features in batch.
      operationId: patchFeaturesBatch
      parameters:
      - description: If set to true (the default setting), the enabled feature automatically enables sub-features.
        in: query
        name: autoEnableChildFeatures
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesBatchRequests'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesBatchResponses'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Conflict
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      summary: Update features in batch.
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
  /api/v2/file-instances:
    get:
      description: 'Retrieves a paginated list of files and folder documents within the protected assets. By default, a list of 10 objects is returned. The specified query parameters customize the ordering, pagination, and filtering of the result.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getFileInstances
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The start date from which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be greater or equal to a particular copy start date.
        in: query
        name: copyStartDate
        schema:
          format: date-time
          type: string
      - description: The end date up to which to show document copies.  Each file or folder copy has a copy start date and copy end date that records the from-and-to time.  Modifications to that file or folder cause another document to be indexed with a different copy start date and copy end date.  This filter limits result sets to be less or equal to a particular copy end date.
        in: query
        name: copyEndDate
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInstances'
          description: Successfully returned the files and folders within the protected assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Server error prevented the successful completion of the request.
      security:
      - BearerAuth: []
      summary: Get files and folders within protected assets
      tags:
      - Asset Metadata
      x-ppdm-executable-roles: admin
  /api/v2/flr-sessions:
    post:
      description: 'Establishes a File-Level-Restore (FLR) session. An FLR session is used to restore individual files or directories as opposed to performing an Image-Level-Restore (that is, restoring entire VMs).


        Calling this API mounts the disks of a copy to a target VM. The ID of the copy and the ID of the target VM are acquired by browsing the PowerProtect Data Manager inventory. The mount operation will make the files present on the mounted disk available for selection to be restored. Once the disks are mounted onto the target VM, the disk file system (or systems) may be browsed directory-by-directory. The caller may select files within each directory to be restored.


        The mounting of the disk from the copy is an asynchronous operation, so the response from this API contains a PowerProtect Data Manager task ID and a hyperlink. The task API can be called to monitor the progress of of the operation.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: mountFLRSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountParams'
        description: This object contains the parameters used to mount the source disk data that is associated with a copy (specified by copyId) to the target VM (specified by targetVmAssetId).
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountResponse'
          description: FLR session create task started.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request precondition failed.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a new FLR Session
      tags:
      - File Level Restore
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/flr-sessions-batch:
    post:
      description: 'Submit multiple File Level Restore requests in a batch operation.


        Each request is submitted as a separate FLR session and results in a separate Job in a JobGroup.  Each Copy is mounted on the TargetVM and the selected files are restored, then the Copy is unmounted.


        Jobs may run sequentially or in parallel, depending on the details of the request and available resources.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: fileLevelRestoreBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoredFilesBatchRequests'
        required: false
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoredFilesBatchResponses'
          description: The request was accepted and returned multiple results.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Submit multiple File Level Restore requests in batch
      tags:
      - File Level Restore
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/flr-sessions/{flrSessionId}:
    delete:
      description: 'Unmounts the disks from the target VM and deletes the FLR session resource. A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.


        The final step of the restore files API is to automatically delete the FLR session. Calling this API after the restore files API is called is not necessary.


        Deleting the FLR session is typically the last (cleanup) step of the workflow, which will release the resources allocated to maintain the FLR browse session.


        Unmounting the disks from the target VM is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task API reference. The task API can be called to determine the progress of this operation.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: unmountFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountResponse'
          description: Unmounted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete the specified FLR session
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,restore_admin
    get:
      description: 'Returns the current settings (the UpdateBrowseRequest) for the specified FLR Session ID.


        A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored (and browsing would be done, in part, by this API).

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: getFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrowseRequest'
          description: Get browse session.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get FLR session state
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,restore_admin
    put:
      description: 'Changes the directories on the target or in the backup for the specified FLR session ID.


        A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to browse the directories after creating the session (where changing directories is part of the browsing, and would be achieved by calling this API).

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: updateFLRSession
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrowseRequest'
        description: This object contains the parameters use to update a browse request (it is used for input and output).  It contains a boolean browseDest parameter, and a string directory parameter, which contains the directory path to browse.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrowseRequest'
          description: 'The response includes two fields: A flag indicating whether the copy or the destination VM is being browsed and the name directory currently being browsed.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request could not be completed due to a conflict with the current state of the target resource.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update FLR session
      tags:
      - File Level Restore
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/flr-sessions/{flrSessionId}/files:
    get:
      description: 'Retrieves the directory file list for the specified FLR session ID. The file list can be filtered based on the optional filter and paging query parameters.


        A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions). The usual workflow is to browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored.


        This API call allows the caller to retrieve the file list corresponding to the current directory in the FLR browse session. Finally, the caller calls the flr-sessions/{flrSessionId}/tasks API with the desired file list to restore those files on the target VM. The FLR session is automatically closed down when the restore task API is called. Otherwise, the session is be terminated by calling the DELETE API.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: getFLRSessionFiles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryFileList'
          description: The response is a list of files formatted by the filter and page information specified in the request.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request could not be completed because of a conflict with the current state of the target resource. It can be completed successfully with new retry after some delay.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get the directory file list
      tags:
      - File Level Restore
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/flr-sessions/{flrSessionId}/tasks:
    post:
      description: 'Restores the files specified in the request body. Once the files are restored, the FLR session is deleted. It is not necessary to call the DELETE API after calling this API.


        A prerequisite is that an flrSessionId be created by creating a new FLR session (POST /api/v2/flr-sessions).  The usual workflow is to then browse the directories after creating the session, and collect a list (on the client side) of the file paths to be restored, and then call this API to restore the files.


        Restoring the files is an asynchronous operation. The response from this API contains a PowerProtect Data Manager task ID and API reference. The task API can be called to determine the progress of this operation.


        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: restoreFiles
      parameters:
      - description: Restored files ID.
        in: path
        name: flrSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreFilesRequest'
        description: This object is contains information used to restore files to a target VM.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreFilesResponse'
          description: FLR initiated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Restore files picked during the browse
      tags:
      - File Level Restore
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/grouped-activities:
    get:
      description: 'Retrieves a list of all activities for a group-by entity.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getGroupedActivities
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      - description: "A general search text.\nFor example: q=VM_1\nwhere the following fields will be searched for VM_1.\n\nThe following fields are searched:\n\n    name\n    result.summaries\n    result.error.reason\n    result.error.remediation\n    logInfo.logText\n    asset.name\n    asset.type\n    copy.name\n    copy.type\n    dataTarget.name\n    host.name\n    protectionPolicy.name\n    sourceDataTarget.name\n    serviceLevelAgreement.name\n    owner.name\n    lastUpdateTime\n    createdTime or createTime\n"
        in: query
        name: q
        schema:
          type: string
      - description: Entity type to group asset-level activities by.
        in: query
        name: groupBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
          description: Successfully returned available activity resources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid. Check request parameters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor does not have required permissions.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: A server error prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all activities for a group-by entity
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
      x-ppdm-pagination: random,serial
  /api/v2/health-check-types:
    get:
      description: Get all system health check types.
      operationId: getHealthCheckTypes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckTypes'
          description: Get a list of available health check types.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all system health check types
      tags:
      - Appliance Management
  /api/v2/health-checks:
    post:
      description: Trigger a collection of system health checks.
      operationId: triggerHealthCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthCheckRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Trigger a system health check
        '401':
          description: The requestor is not allowed to perform this operation.
        '429':
          description: Too many requests for health checks.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Trigger a collection of system health checks
      tags:
      - Appliance Management
  /api/v2/health-checks/{id}:
    get:
      description: Get system health check result by ID.
      operationId: getHealthCheckResult
      parameters:
      - description: Health check ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Get system health check result.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Health check result is not available.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get system health check result by ID
      tags:
      - Appliance Management
  /api/v2/hosts:
    get:
      description: 'Retrieves all **Hosts** including PRIMARY, GROUP, APP_HOST, ESX_HOST, and ESX_CLUSTER.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getHosts
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hosts'
          description: Successfully returned available host.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all hosts
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/hosts/{id}:
    get:
      description: 'Retrieves **Hosts** like PRIMARY, GROUP, APP_HOST, ESX_HOST, and ESX_CLUSTER by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getHost
      parameters:
      - description: ID of the host.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: Successfully returned the host.
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested host does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a host by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Update credential and TNS for host by ID.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: updateHost
      parameters:
      - description: ID of the host.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
        description: Request body of updating host.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: Successfully updated the host.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update host credential and TNS values by ID
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/hosts/{id}/change-status:
    post:
      description: 'Update the status of a **Host** of type APP_HOST to "DELETED".

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: markHostAsDeleted
      parameters:
      - description: The host ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostChangeStatus'
        description: Request body of change host status.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkHostAsDeletedResponse'
          description: Started to delete the host.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Mark a host by ID as 'DELETED'
      tags:
      - Storage Management
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/identity-access-provisions:
    get:
      description: Retrieve a page of identity access provisions.
      operationId: v2-getIdentityAccessProvisions
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of identity access provisions by provider locator.
        in: query
        name: providerLocator
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by provider selector.
        in: query
        name: providerSelector
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by provider service marker.
        in: query
        name: providerServiceMarker
        schema:
          type: string
      - description: Retrieve a list of identity access provisions by subject.
        in: query
        name: subject
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by role locator.
        in: query
        name: roleLocator
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by role name.
        in: query
        name: roleName
        schema:
          type: string
      - description: Retrieve a list of identity access provisions by role display name.
        in: query
        name: roleDisplayName
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by resource group locator.
        in: query
        name: resourceGroupLocator
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by resource group name.
        in: query
        name: resourceGroupName
        schema:
          type: string
      - description: Retrieve a list of identity access provisions defined by local.
        in: query
        name: local
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccessProvisions'
          description: Successfully retrieved the identity access provisions.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get identity access provisions.
      tags:
      - User Security Management
    post:
      description: Add a new access provision, unique for a subject at an identity provider.
      operationId: v2-createIdentityAccessProvision
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityAccessProvision'
        description: Identity Access Provision
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccessProvision'
          description: Successfully created a new access provision, unique for a subject at an identity provider.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Add a new access provision, unique for a subject at an identity provider.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/identity-access-provisions/{locator}:
    delete:
      description: Delete an access provision for the specified locator.
      operationId: v2-deleteIdentityAccessProvision
      parameters:
      - description: Identity access provision locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the identity access provisions.
      security:
      - BearerAuth: []
      summary: Delete an access provision for the specified locator.
      tags:
      - User Security Management
    get:
      description: Get an identity access provision by locator.
      operationId: v2-getIdentityAccessProvision
      parameters:
      - description: identity access provision locator
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccessProvision'
          description: Successfully retrieved the identity access provision.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get an identity access provision.
      tags:
      - User Security Management
    patch:
      description: Replace access related data for the specified locator (changing subject or identity-provider not allowed).
      operationId: v2-patchIdentityAccessProvision
      parameters:
      - description: Identity Access Provider locator
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityAccessProvisionPatch'
        description: Identity Access Provision
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccessProvision'
          description: Identity Access Provision.
        '400':
          description: Delete an access provision for the specified locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Replace access related data for the specified locator (changing subject or identity-provider not allowed).
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/identity-metrics:
    get:
      description: Retrieve a collection of identity provider metrics info.
      operationId: v2-getIdentityMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMetrics'
          description: Successfully retrieved the identity metrics.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get identity metrics.
      tags:
      - User Security Management
  /api/v2/identity-metrics/{locator}:
    get:
      description: Get a identity metric by specified metric locator.
      operationId: v2-getIdentityMetric
      parameters:
      - description: id
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMetric'
          description: Successfully retrieved identity metric info by id.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get identity metric.
      tags:
      - User Security Management
  /api/v2/identity-providers:
    get:
      description: Get a collection of identity providers.
      operationId: v2-getIdentityProviders
      parameters:
      - description: Indicates whether it is a local identity provider, or not.
        in: query
        name: local
        schema:
          type: boolean
      - description: Selector pattern
        in: query
        name: selector-pattern
        schema:
          type: string
      - description: Retrieve collection of identity providers by alive.
        in: query
        name: alive
        schema:
          type: boolean
      - description: Retrieve collection of identity providers by host.
        in: query
        name: host
        schema:
          type: string
      - description: Retrieve collection of identity providers by selector.
        in: query
        name: selector
        schema:
          type: string
      - description: Retrieve collection of identity providers by service marker.
        in: query
        name: serviceMarker
        schema:
          type: string
      - description: Retrieve collection of identity providers by description
        in: query
        name: description
        schema:
          type: string
      - description: Retrieve collection of identity providers by locator.
        in: query
        name: locator
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviders'
          description: Successfully retrieved identity providers.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a collection of identity providers.
      tags:
      - User Security Management
  /api/v2/identity-providers/{locator}:
    delete:
      description: Delete an identity provider by locator.
      operationId: v2-deleteIdentityProvider
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Delete an identity provider.
      tags:
      - User Security Management
    get:
      description: Get an identity provider for the locator.
      operationId: v2-getIdentityProvider
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Indicates whether it is a local identity provider, or not.
        in: query
        name: local
        schema:
          type: boolean
      - description: Identity provider selector, such as local for local identity provider, or a domain for LDAP identity provider, and so on.
        in: query
        name: selector
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Successfully retrieved identity provider by locator.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get an identity provider for the locator.
      tags:
      - User Security Management
    patch:
      description: Patch an identity provider with locator.
      operationId: v2-patchIdentityProvider
      parameters:
      - description: Identity Provider ID
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Successfully patched an identity provider.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Patch an identity provider.
      tags:
      - User Security Management
  /api/v2/identity-providers/{locator}/accounts:
    get:
      description: Get a collection of identity provider accounts based on an optional filter.
      operationId: v2-getIdentityProviderAccounts
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Account name pattern
        in: query
        name: name
        schema:
          type: string
      - description: number
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccounts'
          description: Successfully retrieved a collection of identity accounts.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a collection of identity provider accounts.
      tags:
      - User Security Management
  /api/v2/identity-providers/{locator}/accounts/{name}:
    get:
      description: Get an account for the specified account name.
      operationId: v2-getIdentityProviderAccount
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Identity provider account name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccount'
          description: Successfully retrieved the specified account.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get an account for the specified account name.
      tags:
      - User Security Management
  /api/v2/identity-providers/{locator}/groups:
    get:
      description: Get a collection of identity provider groups based on an optional filter.
      operationId: v2-getIdentityProviderGroups
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Group name search pattern.
        in: query
        name: name
        schema:
          type: string
      - description: Number of groups to return.
        in: query
        name: limit
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroups'
          description: Successfully retrieved a collection of identity provider groups based on an optional account name pattern.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a collection of identity provider groups.
      tags:
      - User Security Management
  /api/v2/identity-providers/{locator}/groups/{name}:
    get:
      description: Get a group for the specified group name.
      operationId: v2-getIdentityProviderGroup
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Identity Provider Group name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroup'
          description: Successfully retrived a identity provider group
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a group for the specified group name.
      tags:
      - User Security Management
  /api/v2/identity-sources:
    get:
      description: 'Retrieves all identity sources. When filtering with createdDate, if the value contains a plus sign (+), replace it with %2B. Not replacing the plus sign can cause an unexpected response.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getIdentitySources
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySources'
          description: Successfully retrieved the list of identity sources.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token (access token) is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all identity sources
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates an identity source. The identity source provides login credentials for LDAP or Windows Active Directory users, after mapping groups to roles.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: createIdentitySource
      parameters:
      - description: Checks the connection of the identity source with the provided credentials.
        in: query
        name: validateOnly
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitySource'
        description: Identity Source
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySource'
          description: Successfully created the identity source.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token (access token) is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '409':
          description: Conflict.
        '422':
          description: Connection to the identity source timed out.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create an identity source
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/identity-sources/{IdSourceId}:
    delete:
      description: 'Deletes an identity source by ID. When the identity source is deleted, if any groups are mapped to roles, the users in those groups are no longer able to access the system or perform any operations.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: deleteIdentitySource
      parameters:
      - description: Identity source ID.
        in: path
        name: IdSourceId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the identity source.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete an identity source by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,security_admin
    get:
      description: 'Retrieves an identity source by ID. When the identity source is retrieved, groups can be mapped to roles to provide access to the system and perform operations.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getIdentitySource
      parameters:
      - description: Identity source ID.
        in: path
        name: IdSourceId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySource'
          description: Successfully retrieved the specified identity source.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The identity source was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get an identity source by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
    put:
      description: 'Updates an identity source by ID. When updated, the identity source uses the new information to access the LDAP or Windows Active Directory, including the retrieval of groups.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: updateIdentitySource
      parameters:
      - description: Identity source ID.
        in: path
        name: IdSourceId
        required: true
        schema:
          type: string
      - description: Checks the connection of the identity source with the provided credentials.
        in: query
        name: validateOnly
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitySource'
        description: Identity Source
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySource'
          description: Successfully updated the identity source.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The identity source was not found.
        '409':
          description: Conflict. The system may already have an identity source.
        '422':
          description: Connection to the identity source timed out.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update an identity source by ID
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/identity-sources/{IdSourceId}/groups:
    get:
      description: 'Retrieves the groups belonging to the identity source. These groups can be mapped to roles to provide access to the system and perform operations.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getIdSourceGroups
      parameters:
      - $ref: '#/components/parameters/filter'
      - description: Identity source ID.
        in: path
        name: IdSourceId
        required: true
        schema:
          type: string
      - description: Number of groups to return.
        in: query
        name: limit
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceGroups'
          description: Successfully retrieved all identity source group names.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get groups belonging to the identity source
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/identity-sources/{IdSourceId}/groups/{groupName}/users:
    get:
      description: 'Retrieves the users belonging to an identity source group. This information helps administrators know which users are in each group. The information is useful when creating group-to-role mappings.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getIdSourceGroupUsers
      parameters:
      - $ref: '#/components/parameters/filter'
      - description: The ID of the identity source.
        in: path
        name: IdSourceId
        required: true
        schema:
          type: string
      - description: The group name of the identity source.
        in: path
        name: groupName
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceGroupUsers'
          description: Successfully retrieved the usernames within the specified identity source group.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get users belonging to an identity source group
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/infrastructure-nodes:
    get:
      description: 'Get root infrastructure nodes for the specified hierarchy type.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getRootInfrastructureNodes
      parameters:
      - $ref: '#/components/parameters/filter'
      - description: 'HierarchyType for infrastructure node, such as MICROSOFT_SQL_DATABASE_VIEW FILE_SYSTEM_VIEW VMWARE_VIRTUAL_MACHINE_HOST_VIEW VMWARE_VIRTUAL_MACHINE_FOLDER_VIEW ORACLE_DATA_GUARD_VIEW ... '
        in: query
        name: hierarchyType
        required: true
        schema:
          type: string
      - description: Indicate the purpose for current API operation.
        in: query
        name: hierarchyPurpose
        required: false
        schema:
          type: string
      - description: Indicate detailed information for hierarchyPurpose
        in: query
        name: hierarchyPurposeKeys
        required: false
        schema:
          type: string
      - description: The filter type, only value accepted is INCLUDE_PARENTS_FOR_MATCHED_ITEM.
        in: query
        name: filterType
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureNodes'
          description: Successfully returned root infrastructure nodes.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get root infrastructure nodes for the specified hierarchy type
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/infrastructure-nodes/{id}:
    get:
      description: 'Get infrastructure node by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getInfrastructureNodeById
      parameters:
      - description: The infrastructure node ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'HierarchyType for infrastructure node such as: MICROSOFT_SQL_DATABASE_VIEW FILE_SYSTEM_VIEW VMWARE_VIRTUAL_MACHINE_HOST_VIEW VMWARE_VIRTUAL_MACHINE_FOLDER_VIEW ORACLE_DATA_GUARD_VIEW ... '
        in: query
        name: hierarchyType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureNode'
          description: Successfully returned the infrastructure node.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          description: The requested resource group does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get an infrastructure node by its ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/infrastructure-nodes/{parent-node-id}/children:
    get:
      description: 'Get child infrastructure nodes for the specified infrastructure node.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getChildInfrastructureNodeById
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: The parent infrastructure node ID.
        in: path
        name: parent-node-id
        required: true
        schema:
          type: string
      - description: 'HierarchyType for infrastructure node such as: MICROSOFT_SQL_DATABASE_VIEW FILE_SYSTEM_VIEW VMWARE_VIRTUAL_MACHINE_HOST_VIEW VMWARE_VIRTUAL_MACHINE_FOLDER_VIEW ORACLE_DATA_GUARD_VIEW ...'
        in: query
        name: hierarchyType
        required: true
        schema:
          type: string
      - description: Indicate the purpose for current API operation.
        in: query
        name: hierarchyPurpose
        required: false
        schema:
          type: string
      - description: Indicate detailed information for hierarchyPurpose
        in: query
        name: hierarchyPurposeKeys
        required: false
        schema:
          type: string
      - description: The filter type, only value accepted is INCLUDE_PARENTS_FOR_MATCHED_ITEM.
        in: query
        name: filterType
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureNodes'
          description: Successfully returned all child infrastructure nodes.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          description: The requested resource group does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get child infrastructure nodes by its parent node ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/inventory-sources:
    get:
      description: 'Retrieves all inventory sources in the PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, User, Restore Administrator, Backup Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getInventorySources
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySources'
          description: Successfully returned available inventory sources.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all inventory sources
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin,readonly,restore_admin,backup_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates an inventory source.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createInventorySource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySource'
        description: The body contains detailed information about the inventory source to create.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySource'
          description: Successful operation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySource'
          description: Successfully created the inventory source.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create an inventory source
      tags:
      - Inventory Source Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/inventory-sources-batch:
    post:
      description: 'Create inventory sources in batch.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: batchPostInventorySources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySourcesBatchPostRequest'
        required: false
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateResponses'
          description: Successfully created part or all of the inventory sources.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create inventory sources in batch
      tags:
      - Storage Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/inventory-sources/{id}:
    delete:
      description: 'Deletes an inventory source by the specified ID.

        These inventory source types are supported: VCENTER, KUBERNETES, DATADOMAINMANAGEMENTCENTER, EXTERNALDATADOMAIN

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'With header "Prefer: respond-async", returns HTTP status 202 with ''activityId'' in response body.'
        in: header
        name: Prefer
        schema:
          enum:
          - respond-async
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInventorySourceResponse'
          description: 'When request with header "Prefer: respond-async", the delete inventory source action runs as an asynchronous operation. The response contains the tracking ''activityId''.'
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Successfully deleted the inventory source.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete an inventory source by ID
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves an inventory source by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Restore Administrator, Backup Administrator

        '
      operationId: getInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySource'
          description: Successfully returned requested inventory source.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          description: The requested inventory source does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get an inventory source by ID
      tags:
      - Inventory Source Management
      x-ppdm-executable-roles: admin,readonly,restore_admin,backup_admin
    patch:
      description: 'Send a patch request to partially update the inventory source. Each patch request sets only one inventory source by the specified ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: patchUpdateInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySourcePatchRequest'
        description: The body contains detailed information about the inventory source to patch.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySource'
          description: The response shows the inventory source, including the updated parts.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Partially update an inventory source
      tags:
      - Inventory Source Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
    put:
      description: 'Updates an inventory source by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateInventorySource
      parameters:
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySource'
        description: The body contains detailed information about the inventory source to update.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventorySource'
          description: Successfully updated the inventory source.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update an inventory source by ID
      tags:
      - Inventory Source Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/inventory-sources/{id}/storage-systems:
    get:
      deprecated: true
      description: 'Retrieves all storage systems associated to the inventory source.

        > This endpoint supports execution by the following roles: Administrator, User, Restore Administrator, Backup Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getInventorySourceStorageSystems
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The inventory source ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystem'
          description: Successfully returned available storage systems.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all storage systems associated to the inventory source
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,restore_admin,backup_admin
      x-ppdm-pagination: random
  /api/v2/kubernetes-clusters:
    get:
      description: 'Retrieves the list of Kubernetes clusters.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getKubernetesClusters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sClusters'
          description: Retrieving list of Kubernetes clusters.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service unavailable.
      summary: Get Kubernetes clusters
      tags:
      - Kubernetes Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/kubernetes-clusters/{cluster-id}/pvc-storage-class-mappings:
    get:
      description: 'When an alternate storage class is required for restoring to an alternate cluster, this request retrieves a list of compatible storage classes per PersistentVolumeClaim (PVC) from the specified Kubernetes cluster.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getStorageClassMappings
      parameters:
      - description: The ID of the Kubernetes cluster.
        in: path
        name: cluster-id
        required: true
        schema:
          type: string
      - description: The ID of the copy to be restored.
        in: query
        name: copyId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvcStorageMappings'
          description: Successfully retrieved list of compatible storage classes.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Required string parameter copyId is not present.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Service unavailable.
      summary: Get storage classes from target Kubernetes cluster
      tags:
      - Kubernetes Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/latest-copies:
    get:
      description: 'This API returns the latest copies of the assets that are specified in the filter. One copy for one asset. The filter and the assetId must be provided. Examples follow:


        Get latest copies of specified assets

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19")`


        Get latest copies that satisfy particular copy characteristics

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19") and copyType in ("FULL", "DIFFERENTIAL", "INCREMENTAL") and replicatedCopy eq false and location in ("LOCAL", "LOCAL_RECALLED") and storageSystemId eq "deaedef1-986a-4a44-a475-80afa3709b1f" and not state in ("DELETED", "DELETING", "SOFT_DELETED", "DELETE_FAILED")`


        Get latest copies before a time point

        `GET /api/v2/latest-copies?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19") and createTime lt "2020-08-24T08:29:00Z"`

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getLatestCopies
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copies'
          description: Successfully returned latest copies for specified asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get latest copies of specified assets
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/latest-copies-query:
    post:
      description: 'This API only accept request with content type as application/x-www-form-urlencoded and returns the latest copies of the assets that are specified in the filter. One copy for one asset. The filter and the asset ID (assetId) must be provided.


        Examples follow:

        Get latest copies of specified assets

        `POST /api/v2/latest-copies-query?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19")`


        Get latest copies that satisfy particular copy characteristics

        `POST /api/v2/latest-copies-query?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19") and copyType in ("FULL", "DIFFERENTIAL", "INCREMENTAL") and replicatedCopy eq false and location in ("LOCAL", "LOCAL_RECALLED") and storageSystemId eq "deaedef1-986a-4a44-a475-80afa3709b1f" and not state in ("DELETED", "DELETING", "SOFT_DELETED", "DELETE_FAILED")`


        Get latest copies before a time point

        `POST /api/v2/latest-copies-query?filter=assetId in ("725efee5-b9e6-40be-a86c-e42c69e71894", "0e11f488-63b4-4a70-860c-994e5e433b19") and createTime lt "2020-08-24T08:29:00Z"`

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: queryLatestCopies
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QueryLatestCopiesRequest'
        description: The filter argument. It must be provided with asset ID (assetId) to return the latest copies for the specified assets.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copies'
          description: Successfully returned latest copies for the specified asset.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get latest copies of specified assets
      tags:
      - Copy Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/ldap-identity-providers:
    get:
      description: Get a list of all available LDAP identity providers.
      operationId: v2-getLdapIdentityProviders
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of LDAP identity providers by secure.
        in: query
        name: secure
        schema:
          type: boolean
      - description: Retrieve a list of LDAP identity providers by locator.
        in: query
        name: locator
        schema:
          type: string
      - description: Retrieve a list of LDAP identity providers by host.
        in: query
        name: host
        schema:
          type: string
      - description: Retrieve a list of LDAP identity providers by alive.
        in: query
        name: alive
        schema:
          type: boolean
      - description: Retrieve a list of LDAP identity providers by selector.
        in: query
        name: selector
        schema:
          type: string
      - description: Retrieve a list of LDAP identity providers by description.
        in: query
        name: description
        schema:
          type: string
      - description: Retrieve a list of LDAP identity providers by serviceMarker.
        in: query
        name: serviceMarker
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapIdentityProviders'
          description: Successfully retrieved a list of all available LDAP identity providers.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of all available LDAP identity providers.
      tags:
      - User Security Management
    post:
      description: Create an instance of LDAP identity provider for another set of connectivity parameters.
      operationId: v2-createLdapIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapIdentityProvider'
        description: LDAP Identity Provider.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapIdentityProviderResponse'
          description: Successfully created an instance of LDAP identity provider for another set of connectivity parameters.
        '400':
          description: Create an instance of LDAP identity provider for another set of connectivity parameters
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Create an instance of LDAP identity provider for another set of connectivity parameters.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/ldap-identity-providers/default-config:
    get:
      description: Get the LDAP default configuration.
      operationId: v2-getLdapDefaultConfig
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapDefaultConfig'
          description: Successfully retrieved LDAP default configuration.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: LDAP Identity Provider Default Configuration.
      tags:
      - User Security Management
  /api/v2/ldap-identity-providers/{locator}:
    delete:
      description: Remove the LDAP identity provider.
      operationId: v2-deleteLdapIdentityProvider
      parameters:
      - description: LDAP Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
          description: Successfully removed LDAP identity provider.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Remove the LDAP identity provider.
      tags:
      - User Security Management
    get:
      description: Get the LDAP identity provider for the locator.
      operationId: v2-getLdapIdentityProvider
      parameters:
      - description: LDAP Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapIdentityProvider'
          description: Successfully retrieved the LDAP identity provider.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the LDAP identity provider for the locator.
      tags:
      - User Security Management
    patch:
      description: Modify the LDAP configuration parameters.
      operationId: v2-patchLdapIdentityProvider
      parameters:
      - description: LDAP Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapIdentityProvider'
        description: LDAP Identity Provider
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LdapIdentityProvider'
          description: Successfully modified the LDAP identity provider.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Modify the LDAP configuration parameters.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/ldap-identity-providers/{locator}/accounts:
    get:
      description: Get a list of LDAP user accounts based on an optional account name pattern.
      operationId: v2-getLdapIdentityProviderAccounts
      parameters:
      - description: LDAP Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve list of LDAP user accounts by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve list of LDAP user accounts with results limit.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccounts'
          description: Successfully retrieved a list of LDAP user accounts based on an optional account name pattern.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of LDAP user accounts.
      tags:
      - User Security Management
  /api/v2/ldap-identity-providers/{locator}/accounts/{account-locator}:
    get:
      description: Get user account information for the specified account locator.
      operationId: v2-getLdapIdentityProviderAccount
      parameters:
      - description: LDAP Identity provider locator
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Ldap identity provider account locator
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccount'
          description: Successfully retrieved a user account information for the specified account locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get user account information for the specified account locator.
      tags:
      - User Security Management
  /api/v2/ldap-identity-providers/{locator}/groups:
    get:
      description: Get a list of LDAP groups based on an optional filter.
      operationId: v2-getLdapIdentityProviderGroups
      parameters:
      - description: LDAP Identity Provider Locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve list of LDAP groups by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve list of LDAP groups with results limit.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroups'
          description: Successfully retrieved a list of LDAP groups based on an optional filter.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a list of LDAP groups.
      tags:
      - User Security Management
  /api/v2/ldap-identity-providers/{locator}/groups/{group-locator}:
    get:
      description: Get group information for the specified group locator.
      operationId: v2-getLdapIdentityProviderGroup
      parameters:
      - description: LDAP Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: LDAP identity provider group locator.
        in: path
        name: group-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGroup'
          description: Successfully retrieved group information for the specified group locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get group information for the specified group locator.
      tags:
      - User Security Management
  /api/v2/licenses:
    get:
      description: 'Retrieves licenses that are available on the system.

        PowerProtect Data Manager licenses include status details such as capacity usage, license Type, license status.

        Type can be CAPACITY, SOCKET, APPLIANCE.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getLicenses
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Licenses'
          description: Located and returned available licenses.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all licenses
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Creates a new license. A license xml file is passed in a key field.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createLicense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/License'
        description: Creates a new license.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: The license was validated successfully.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: The license was created successfully.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '422':
          description: The submitted license is not valid.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a new license
      tags:
      - Licenses Management
      x-codegen-request-body-name: elms key
      x-ppdm-executable-roles: admin
  /api/v2/licenses/{id}:
    get:
      description: 'Retrieves the license associated with the specified ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getLicense
      parameters:
      - description: License ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: Found and returned the license with the specified ID.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find the license with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a license by ID
      tags:
      - Licenses Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the license associated with the specified ID. A license xml file is passed in a key field in the REST API body.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateLicense
      parameters:
      - description: License ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/License'
        description: Update the license associated with the specified ID.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
          description: The license update completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find license with the specified ID.
        '422':
          description: The submitted license is not valid.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a license by ID.
      tags:
      - Licenses Management
      x-codegen-request-body-name: elms key
      x-ppdm-executable-roles: admin
  /api/v2/local-identity-providers:
    get:
      description: Get local identity providers (only one should be available).
      operationId: v2-getLocalIdentityProviders
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of local identity providers by locator.
        in: query
        name: locator
        schema:
          type: string
      - description: Retrieve a list of local identity providers by host.
        in: query
        name: host
        schema:
          type: string
      - description: Retrieve a list of local identity providers by alive.
        in: query
        name: alive
        schema:
          type: boolean
      - description: Retrieve a list of local identity providers by selector.
        in: query
        name: selector
        schema:
          type: string
      - description: Retrieve a list of local identity providers by description.
        in: query
        name: description
        schema:
          type: string
      - description: Retrieve a list of local identity providers by serviceMarker.
        in: query
        name: serviceMarker
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityProviders'
          description: Successfully retrieved local identity providers
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get local identity providers.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/default:
    get:
      description: Get the default local identity provider.
      operationId: v2-getLocalDefaultIdentityProvider
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityProvider'
          description: Successfully retrieved the default local identity provider.
        '400':
          description: The authorization token is either invalid or expired.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the default local identity provider.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/default/accounts:
    get:
      description: Get a list of Local Identity Provider Accounts.
      operationId: v2-getLocalIdentityProviderDefaultAccounts
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of local identity provider accounts by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by first name.
        in: query
        name: firstName
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by last name.
        in: query
        name: lastName
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by email address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by locator.
        in: query
        name: locator
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccounts'
          description: Local Identity Providers response.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a page of Local Identity Provider Accounts.
      tags:
      - User Security Management
    post:
      description: Create a Local Identity Provider account.
      operationId: v2-createLocalIdentityProviderDefaultAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider Account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Successfully created a local account.
        '400':
          description: The authorization token is either invalid or expired.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Create a local account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/local-identity-providers/default/accounts/{account-locator}:
    delete:
      description: Delete a specified Local Identity Provider Account.
      operationId: v2-deleteLocalIdentityProviderDefaultAccount
      parameters:
      - description: Local Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
          description: Successfully deleted a specified account.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Delete a specified account.
      tags:
      - User Security Management
    get:
      description: Get a specified Local Identity Provider account.
      operationId: v2-getLocalIdentityProviderDefaultAccount
      parameters:
      - description: Local Identity Provider Account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Successfully retrieved a specified account.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a specified account.
      tags:
      - User Security Management
    patch:
      description: Modify a specified Local Identity Provider Account.
      operationId: v2-patchLocalIdentityProviderDefaultAccount
      parameters:
      - description: Local Identity Provider Account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider Account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccount'
          description: Successfully updated a specified account.
        '400':
          description: Bad Request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Modify a specified account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
    put:
      description: Replace a specified Local Identity Provider account.
      operationId: v2-putLocalIdenityProviderDefaultAccount
      parameters:
      - description: Local Identity Provider Account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider Account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Sccuessfully retrieved a specified account.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Replace a specified account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/local-identity-providers/default/auth-entries:
    get:
      description: Get the Local Identity Provider authentication entries.
      operationId: v2-getLocalIdentityProviderDefaultAuthEntries
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Retrieve a list of local identity provider authentication entries by account locator.
        in: query
        name: accountLocator
        schema:
          type: string
      - description: Retrieve a list of local identity provider authentication entries by account name.
        in: query
        name: accountName
        schema:
          type: string
      - description: Retrieve a list of local identity provider authentication entries by force change.
        in: query
        name: forceChange
        schema:
          type: boolean
      - description: Retrieve a list of local identity provider authentication entries by include hashed password.
        in: query
        name: includeHashedPassword
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntries'
          description: Successfully retrieved all the authentication entries.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the default local identity provider's authentication entries.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/default/auth-entries/{locator}:
    delete:
      description: Delete the Local Identity Provider authentication entry.
      operationId: v2-deleteLocalIdentityDefaultAuthEntry
      parameters:
      - description: Authentication Entry locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the authentication entry.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Delete the local identity provider's authentication entry.
      tags:
      - User Security Management
    get:
      description: Get the Local Identity Provider authentication entry.
      operationId: v2-getLocalIdentityProviderDefaultAuthEntry
      parameters:
      - description: Authentication Entry locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully retrieved the authentication entry.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a default local identity provider's authentication entry.
      tags:
      - User Security Management
    patch:
      description: Update the Local Identity Provider authentication entry.
      operationId: v2-patchLocalIdentityDefaultAuthEntry
      parameters:
      - description: Authentication Entry locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAuthEntry'
        description: Local Identity Provider Authentication Entry.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully updated the authentication entry.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Update a local identity provider authentication entry.
      tags:
      - User Security Management
    put:
      description: Update the Local Identity Provider authentication entry.
      operationId: v2-updateLocalIdentityProviderDefaultAuthEntry
      parameters:
      - description: Authentication Entry locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAuthEntry'
        description: Local Identity Provider Authentication Entry.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully updated the authentication entry.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Update a local identity provider authentication entry.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/{locator}:
    get:
      description: Get a local identity provider by locator.
      operationId: v2-getLocalIdentityProvider
      parameters:
      - description: Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityProvider'
          description: Successfully retrieved a local identity provider
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a local identity provider by locator.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/{locator}/accounts:
    get:
      description: Get a page of Local Identity Provider accounts.
      operationId: v2-getLocalIdentityProviderLocatorAccounts
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by name.
        in: query
        name: name
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by first name.
        in: query
        name: firstName
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by last name.
        in: query
        name: lastName
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by email address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Retrieve a list of local identity provider accounts by locator.
        in: query
        name: locator
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccounts'
          description: Local Identity Providers response.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a page of Local Identity Provider accounts.
      tags:
      - User Security Management
    post:
      description: Create a Local Identity Provider account.
      operationId: v2-createLocalAccount
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Successfully created a local account.
        '400':
          description: Bad Request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Create a local account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/local-identity-providers/{locator}/accounts/{account-locator}:
    delete:
      description: Delete a specified Local Identity Provider account.
      operationId: v2-deleteLocalIdentityProviderLocatorAccount
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Local Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
          description: Successfully deleted a specified account.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Delete a specified account.
      tags:
      - User Security Management
    get:
      description: Get a specified local identity provider account.
      operationId: v2-getLocalIdentityProviderLocatorAccount
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Local Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Successfully retrieved a specified account.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a specified account.
      tags:
      - User Security Management
    patch:
      description: Modify a specified local identity provider account.
      operationId: v2-patchLocalIdentityProviderLocatorAccount
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Local Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider Account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAccount'
          description: Successfully updated a specified account.
        '400':
          description: Bad Request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Modify a specified account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
    put:
      description: Replace a specified local identity provider account.
      operationId: v2-putLocalIdenityProviderLocatorAccount
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Local Identity Provider account locator.
        in: path
        name: account-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAccount'
        description: Local Identity Provider Account.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAccount'
          description: Successfully retrieved a specified account.
        '400':
          description: Bad request.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Replace a specified account.
      tags:
      - User Security Management
      x-codegen-request-body-name: body
  /api/v2/local-identity-providers/{locator}/auth-entries:
    get:
      description: Get the Local Identity Provider authentication entries.
      operationId: v2-getAuthEntries
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/orderby'
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Retrieve a list of local identity provider authentication entries by account locator.
        in: query
        name: accountLocator
        schema:
          type: string
      - description: Retrieve a list of local identity provider authentication entries by account name.
        in: query
        name: accountName
        schema:
          type: string
      - description: Retrieve a list of local identity provider authentication entries by force change.
        in: query
        name: forceChange
        schema:
          type: boolean
      - description: Retrieve a list of local identity provider authentication entries by include hashed password.
        in: query
        name: includeHashedPassword
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntries'
          description: Successfully retrieved all the authentication entries.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get the local identity provider's authentication entries.
      tags:
      - User Security Management
  /api/v2/local-identity-providers/{locator}/auth-entries/{auth-entry-locator}:
    delete:
      description: Delete the Local Identity Provider authentication entry.
      operationId: v2-deleteLocalIdentityAuthEntry
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Authentication Entry locator.
        in: path
        name: auth-entry-locator
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the authentication entry.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Delete the local identity provider's authentication entry.
      tags:
      - User Security Management
    get:
      description: Get the Local Identity Provider authentication entry.
      operationId: v2-getAuthEntry
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Authentication Entry locator.
        in: path
        name: auth-entry-locator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully retrieved an auth entry by locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Get a local identity provider's authentication entry.
      tags:
      - User Security Management
    patch:
      description: Update the Local Identity Provider authentication entry.
      operationId: v2-patchLocalIdentityAuthEntry
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Authentication Entry locator.
        in: path
        name: auth-entry-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAuthEntry'
        description: Local Identity Provider Auth Entry.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully retrieved an auth entry by locator.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Update a local identity provider authentication entry.
      tags:
      - User Security Management
    put:
      description: Update the Local Identity Provider authentication entry.
      operationId: v2-updateAuthEntry
      parameters:
      - description: Local Identity Provider locator.
        in: path
        name: locator
        required: true
        schema:
          type: string
      - description: Authentication Entry locator.
        in: path
        name: auth-entry-locator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalIdentityAuthEntry'
        description: Local Identity Authentication Entry.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalIdentityAuthEntry'
          description: Successfully updated auth entry for local identity provider.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Update a local identity provider authentication entry.
      tags:
      - User Security Management
  /api/v2/locations:
    get:
      description: 'Retrieves all **locations** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for PowerProtect DD system.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getLocations
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
          description: Successfully returned available locations.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all locations
      tags:
      - Location Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Creates a **Location** in the PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for PowerProtect DD system.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        description: Detailed information of location to be created.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Successful operation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Successfully created the location.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a location
      tags:
      - Location Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/locations/{id}:
    delete:
      description: 'Deletes a **Location** from PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for PowerProtect DD system.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteLocation
      parameters:
      - description: ID of the location.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the location.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a location by ID
      tags:
      - Location Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a **Location** by ID in PowerProtect Data Manager. **Location** can be set to **Storage System**. For example, set location for PowerProtect DD system.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getLocation
      parameters:
      - description: ID of the location.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Successfully returned the location.
        '204':
          description: The requested location does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a location by ID
      tags:
      - Location Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/lockbox-reset:
    post:
      description: Reset the system lockbox.
      operationId: resetLockbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostResetLockboxRequest'
        description: Reset lockbox request body.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResetLockboxResponse'
          description: The lockbox has been reset successfully.
        '401':
          description: The authorization token is either invalid or expired, or the current lockbox passphrase is incorrect.
        '403':
          description: The user does not have the proper privileges to perform the action.
      security:
      - BearerAuth: []
      summary: Reset lockbox
      tags:
      - Secrets Manager
  /api/v2/log-bundles:
    get:
      description: 'Retrieves all existing log bundles in the system. Supports filtering. The status case is ignored.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getLogBundles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Query should return the latest results
        in: query
        name: refresh
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBundles'
          description: Successfully retrieved and returned available log bundles.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The filter string was not parsable.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get all existing log bundles in the system
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,readonly
    post:
      description: 'Creates a new log bundle and returns the log bundle with its ID and a status of BUILDING.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createLogBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogBundle'
        description: Must include a bundle start date and a log bundle formula.
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBundleCreateResponse'
          description: The log bundle was successfully posted and started.
        '400':
          description: The submitted log bundle could not be parsed due to syntax errors.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '409':
          description: Another log bundle is currently building.
        '422':
          description: Occurs if the log bundle contains anything other than the bundle start date and log bundle formula. Also occurs if the formula provided contains an ID and other fields, or other fields and an ID.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Create a new log bundle
      tags:
      - Log Management
      x-codegen-request-body-name: Log bundle
      x-ppdm-executable-roles: admin
  /api/v2/log-bundles/{id}:
    delete:
      description: 'Deletes a completed, cancelled, or failed log bundle.  A building log bundle cannot be deleted.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteLogBundle
      parameters:
      - description: ID for the log bundle.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBundleDeleteResponse'
          description: The log bundle was successfully set to a DELETING status and is purged later on.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          description: If the log bundle with the given ID was not found.
        '409':
          description: If the log bundle is currently in a BUILDING state.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Deletes a log bundle
      tags:
      - Log Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the log bundle with the specified ID.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getLogBundle
      parameters:
      - description: ID for the log bundle.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogBundle'
          description: Successfully retrieved and returned the log bundle with the specified ID.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: No log bundle with that ID was found.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get a log bundle by ID
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,readonly
  /api/v2/log-bundles/{logBundleId}/files/{id}:
    get:
      description: 'Retrieves the physical log bundle file. The log bundle file name is specified in the content-disposition header.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getLogBundleFiles
      parameters:
      - description: ID for the log bundle.
        in: path
        name: logBundleId
        required: true
        schema:
          type: string
      - description: ID for the file.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        '200':
          description: File was successfully found and retrieved.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          description: No log bundle, or file, was found with the specified ID, or the log bundle is not in a COMPLETE state, in which case there is no log bundle file.
        '410':
          description: The log bundle file resource exists (it has a COMPLETED log bundle), but it is not on the file system.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get the physical log bundle file
      tags:
      - Log Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,readonly
  /api/v2/log-disk-infos:
    get:
      description: 'Returns the disk usage information for the partition on which logging resides.The value will be used to check whether it is allowed to create new log bundle.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getLogDiskInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogDiskInfos'
          description: Successfully retrieved the log disk information.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '500':
          description: Any server error that prevents completion of the request.
      security:
      - BearerAuth: []
      summary: Get the current log disk information
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,readonly
  /api/v2/log-exports:
    get:
      description: Retrieves existing log exports in the system. Filter is required. Currently, filter only supports ID.
      operationId: get-api-v2-log-exports
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExports'
          description: Successfully created a log export resource.
        '400':
          description: The request is invalid. Filter is missing or incorrect.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get existing log exports in the system by valid filter
      tags:
      - Log Management
    post:
      description: Creates a new log export and returns the response containing log export with its ID.
      operationId: createLogExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogExportRequest'
        description: Provide filterType and filterValue.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExport'
          description: Successfully created the log export.
        '400':
          content:
            application/json:
              schema:
                type: object
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                type: object
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                type: object
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create log export
      tags:
      - Log Management
      x-codegen-request-body-name: body
  /api/v2/log-exports/{id}:
    get:
      description: Get log export info by ID
      operationId: getLogExportById
      parameters:
      - description: id of the log export
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExport'
          description: Successfully get the resource by ID.
        '401':
          description: The requestor is not authorized to perform this operation.
        '404':
          description: The log export resource is not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get log export by ID
      tags:
      - Log Management
  /api/v2/log-exports/{id}/file:
    get:
      description: Retrieves the physical log export file fetched by the ID provided in request.User can download the log export file by this API.
      operationId: getLogExportFile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: File was successfully found and retrieved.
        '401':
          content:
            application/json:
              schema:
                type: object
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                type: object
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get log export file
      tags:
      - Log Management
  /api/v2/login:
    post:
      description: Logs in with user credentials. Once logged in, the user may perform operations granted to the user and defined by the user role.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
        description: User login credentials.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Successfully logged in with the user.
        '302':
          description: The user password is expired. Redirecting the user to change the password.
        '307':
          description: MFA is enabled and login requires inclusion of rsa.passcode element in request payload.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '423':
          description: The user account is locked.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      summary: Log in to your account
      tags:
      - Authentication and Authorization
      x-codegen-request-body-name: body
  /api/v2/logout:
    post:
      description: 'Logs out of the user as specified in the access token. When logged out, the user that is defined in the access token can no longer run operations.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: logout
      responses:
        '204':
          description: Successfully logged out of the current user.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Log out from your account
      tags:
      - Authentication and Authorization
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/missing-app-server-hosts:
    get:
      description: Group hosts by cluster and get missing hosts.
      operationId: getMissingHostsGroupingThemByCluster
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Host IDs to get missing hosts in the group. The hostsIds can be id1, id2, or id3.
        in: query
        name: hostIds
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hosts'
          description: Successfully retrieved hosts and grouped them by cluster.
        '204':
          description: Could not find hosts for grouping by cluster.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Group the hosts by cluster.
      tags:
      - Application Data Management
  /api/v2/nas-utility/asset-connectivity-check:
    post:
      description: Checks whether the the mount point is reachable via ping operation
      operationId: assetConnectivityCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareResourceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareResourceResponse'
          description: Share path is reachable.
      security:
      - BearerAuth: []
      summary: Check asset connectivity
      tags:
      - NAS Data Management
      x-internal: false
  /api/v2/network-requirement:
    get:
      description: 'Retrieves the required IP count per component type (Search, Vproxy, PowerProtect Data Manager). Add them together for a total. When creating a new network or adding Search or vProxy to an existing network, call this API to calculate how many additional IP addresses are required.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: networkRequirement
      parameters:
      - description: The type of server
        in: query
        name: serverType
        schema:
          enum:
          - V_PROXY
          - SEARCH
          type: string
      - description: The reference id of the server
        in: query
        name: referenceId
        schema:
          type: string
      - description: The type of network. Use this parameter when you want to calculate a new VLAN IP count.
        in: query
        name: netwrokType
        schema:
          default: any
          enum:
          - any
          - management
          - data
          type: string
      - description: The purpose of the network. Use this parameter when you want to calculate the VLAN IP count
        in: query
        name: networkPurposes
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRequirement'
          description: Return the ip needed info.
        '400':
          description: Request contains invalid content.
        '401':
          description: Valid login is required.
        '500':
          description: Internal error.
      security:
      - BearerAuth: []
      summary: Get required IPs
      tags:
      - Installation
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/networks:
    get:
      description: 'Retrieves all existing networks. If no additional networks are added, the call does not return a default network . The returned listing includes the network ID, name, VLAN ID, IPs, netmask, gateway, MTU, status, usages, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getNetworks
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Networks'
          description: Returns all VLANs.
        '401':
          description: Valid login is required.
        '500':
          description: Cannot retrieve the networks.
      security:
      - BearerAuth: []
      summary: Get all networks
      tags:
      - Installation
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Creates a network. The operation occurs asynchronously. When successful, the request is accepted for processing. The API network requirement can be used to get the required network IP counts.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: addNetwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Add a new network.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Add network successfully.
        '400':
          description: Bad request
        '401':
          description: Need login
        '409':
          description: Request contains conflict info with existing info.
        '412':
          description: Internal Center not found.
        '500':
          description: Can't save networks
      security:
      - BearerAuth: []
      summary: Create a network
      tags:
      - Installation
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/networks/{id}:
    delete:
      description: 'Delete network by the given ID in the PowerProtect Data Management system. The call returns an error if the network is still in use.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteNetwork
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Delete network successfully and ip released.
        '202':
          description: Request is accepted, delete is on going, check result by GET and expect 404 for success, otherwise, check status, Changed means on going, failed for failed.
        '401':
          description: Need login.
        '404':
          description: Not found.
        '409':
          description: Network used by some assets, can not be delete, remove assign first.
        '500':
          description: Error when delete.
      security:
      - BearerAuth: []
      summary: Delete a network by id
      tags:
      - Installation
      x-ppdm-executable-roles: admin
    get:
      description: 'Get the specific network by ID.

        The network information includes the network ID, name, VLAN ID, IPs, netmask, gateway, MTU, status, usages, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getNetwork
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Return network info.
        '401':
          description: Need login.
        '404':
          description: Not found.
        '500':
          description: Cannot retrieve the network.
      security:
      - BearerAuth: []
      summary: Get a network by id
      tags:
      - Installation
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Update the specified network by its ID. Only IPs, network name, netmask, MTU, and routes can be changed.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateNetwork
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Modify the network.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: No any changes need apply to all sub systems and would directly return success.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Request accepted and executing on going.
        '400':
          description: Request contains invalid content.
        '401':
          description: Need login.
        '404':
          description: Not found.
        '409':
          description: 'If update network but some using IP removed, can''t continue.

            If need more IP than passed in, can''t continue.

            '
        '500':
          description: Some error.
      security:
      - BearerAuth: []
      summary: Update a network by id
      tags:
      - Installation
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/networks/{id}/ips:
    patch:
      description: 'Expand IP pools for the specified server type. Only IP addresses can be changed.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateIPs
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: The type of the server
        in: query
        name: serverType
        required: true
        schema:
          type: string
      - description: The vmNetworkName of the network
        in: query
        name: vmNetworkName
        schema:
          type: string
      - description: The IP address family of proxy or search
        in: query
        name: ipAddressFamily
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Expand the ip pool.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Request accepted and IP allocated and reserved for target server.
        '400':
          description: Request contains invalid content.
        '401':
          description: Valid login is required.
        '404':
          description: Network not found.
        '409':
          description: Cannot expand ips.
        '500':
          description: Internal error.
      security:
      - BearerAuth: []
      summary: Update IP Pool.
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/networks/{id}/references:
    get:
      description: 'Get the network usage information that is based on the specified ID to determine whether a VLAN is in use.

        The network usage information includes the total number of VLANs in use, the number of VLANs used by the assets, the number of VLANs used by policies, and the network name.'
      operationId: networkReferences
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VLANReferenceDetailsWrapper'
          description: Found and returned the network usage with the specified ID.
        '401':
          description: Unauthorized
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get network reference information by ID
      tags:
      - Appliance Management
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/v2/networks/{id}/routes:
    patch:
      description: 'Update VLAN routes. For patch, only id and routes fields are needed. Routes field needs to contain all routes. All other fields will be ignored if passed in.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateRoutes
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Update the network routes.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: No any changes need apply to all routes and would directly return success.
        '202':
          description: Request accepted and executing on going.
        '400':
          description: Request contains invalid content.
        '401':
          description: Valid login is required.
        '404':
          description: Network not found.
        '409':
          description: Route conflict
        '500':
          description: Internal error.
      security:
      - BearerAuth: []
      summary: Update the network routes.
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/networks/{id}/usages:
    patch:
      description: 'Update VLAN network usages. For patch, only id and usages fields are needed. And only changed usage in usages are needed. All other fields will be ignored if passed in.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateNetworkUsages
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Modify the usages fields of the network
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Update IP usages successfully.
        '400':
          description: Request contains invalid content.
        '401':
          description: Login needed.
        '404':
          description: Network not found.
        '409':
          description: Cannot update some IP usage.
        '500':
          description: Internal error.
      security:
      - BearerAuth: []
      summary: Update IP Usages.
      tags:
      - Appliance Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/nodes:
    get:
      description: 'Retrieves all nodes on the appliance. Each node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getNodes
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nodes'
          description: Located and returned the available nodes successfully.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all nodes
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/nodes/{id}:
    get:
      description: 'Retrieves a node on the appliance with the specified ID. The node has information about the appliance status, subcomponents in the appliance, uptime, version, and other system details.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getNode
      parameters:
      - description: Node ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: Found and returned the node with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a node with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get node by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the status of the appliance to any of the following states: MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateNode
      parameters:
      - description: Node ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
        description: 'The user can change the status of the appliance to the following states: MAINTENANCE, RESTORE, QUIESCE, OPERATIONAL'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
          description: Successful operation.
        '202':
          description: Accepted and processing the node status request.
        '400':
          description: The submitted node has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The system state change request is not valid.
        '404':
          description: Cannot find a node with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Change node status
      tags:
      - Appliance Management
      x-codegen-request-body-name: Node
      x-ppdm-executable-roles: admin
  /api/v2/oracle-control-sp-file-info/{searchFromCopyId}:
    get:
      description: Retrieves Copy SpFile and ControlFile details for Oracle Centralized Restore support.
      operationId: getOracleCopyControlSpFileInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OracleControlSpFileInfo'
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      summary: Get the Oracle control and sp file info by copy ID
      tags:
      - Application Data Management
    parameters:
    - in: path
      name: searchFromCopyId
      required: true
      schema:
        type: string
  /api/v2/os-user-password-reset:
    post:
      description: Reset the OS user password. The root password must be active (not expired).
      operationId: updateOsUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetOsUserPasswordRequest'
        required: false
      responses:
        '204':
          content:
            application/json:
              schema:
                type: object
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      summary: Reset OS User password
      tags:
      - Installation
      x-codegen-request-body-name: body
  /api/v2/protection-details:
    get:
      description: 'Retrieves a list of existing protections such as backups and replications. If there are too many results, this API request returns the HTTP response code 416 (REQUEST RANGE NOT SATISFIABLE). If successful, the API request returns the HTTP response code 200 (OK).

        > This endpoint supports execution by the following roles: Administrator, User


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getProtectionDetails
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionDetails'
          description: Successfully returned available protection details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '416':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is too large to be satisfied.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevent the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a list of protection details
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly
      x-ppdm-pagination: random,serial
  /api/v2/protection-engines:
    get:
      description: 'Retrieves all registered protection engines supported by PowerProtect Data Manager.  This list is expected to grow, and for the current release (and upcoming releases), the supported protection engine is VPE.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngines
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngines'
          description: Successfully returned available protection engine.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection engines
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Registers a protection engine with PowerProtect Data Manager.  This list of possible protection engines is expected to grow; however, for the current release (and upcoming releases), the supported protection engine is VPE.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: registerProtectionEngine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionEngine'
        description: Optional fields not required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngine'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngine'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Register protection engine
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}:
    delete:
      description: 'Unregisters the protection engine, specified by its ID, from PowerProtect Data Manager.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: unregisterProtectionEngine
      parameters:
      - description: The ID of the protection engine to be deleted.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the protection engine.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Unregister protection engine
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the registered protection engine with the specified ID.  A prerequisite is that the protection engine with the specified ID is already registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngine
      parameters:
      - description: The ID of the protection engine to be retrieved.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngine'
          description: Successfully returned the protection engine.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The protection engine ID does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get protection engine
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateProtectionEngine
      parameters:
      - description: The ID of the protection engine to be updated.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionEngine'
        description: All fields required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngine'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngine'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation as it is not implemented.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update protection engine
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/management:
    post:
      description: 'Performs the specified operation (ProtectionManagementResource.operation) on the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: manageProtectionEngine
      parameters:
      - description: The ID of the protection engine to be managed.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionEngineManagement'
        description: The management request.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngineManagement'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionEngineManagement'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Manage protection engine
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/proxies:
    get:
      description: 'Retrieves a list of VPE protection engine proxies for the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngineProxies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxies'
          description: Successfully returned available proxies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection engine proxies
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Adds a VPE proxy to the protection engine with the specified ID. The protection engine with the specified ID must already be registered with PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VPEProxy'
        description: Optional fields not required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Add a protection engine proxy
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/proxies/{proxyId}:
    delete:
      description: 'Deletes the VPE proxy with a proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The proxy ID of the proxy to be removed.
        in: path
        name: proxyId
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a protection engine proxy by ID
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngineProxy
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The proxy ID.
        in: path
        name: proxyId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: Successfully returned VPE proxy resource.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a protection engine proxy by ID
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Update the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateProtectionEngineProxy
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The proxy ID of the proxy to be updated.
        in: path
        name: proxyId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VPEProxy'
        description: All fields required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a protection engine proxy configuration
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/proxies/{proxyId}/redeploy:
    put:
      description: 'Redeploys the VPE proxy with proxyId that is registered to the protection engine with the specified ID.  The protection engine with the specified ID must already be registered with PowerProtect Data Manager. The VPE proxy with the proxyId must also be registered.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: redeployProtectionEngineProxy
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The proxy ID of the proxy to be redeployed.
        in: path
        name: proxyId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VPEProxy'
        description: All fields required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Redeploy protection engine proxy
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/proxy-bundles:
    get:
      description: 'Retrieves all protection engine proxy log bundles.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngineProxyLogBundles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxyLogBundles'
          description: Successfully returned available proxy bundle sessions.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection engine proxy log bundles
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Collects protection engine proxy bundles.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createProtectionEngineProxyBundles
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VPEProxyLogBundleRequest'
        description: Optional fields not required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxyLogBundle'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxyLogBundle'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Collect protection engine proxy bundles
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-engines/{id}/proxy-bundles/{sessionId}:
    delete:
      description: 'Deletes protection engine proxy bundle session.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteProtectionEngineProxyLogBundle
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The log bundle session ID.
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete protection engine proxy bundle session
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the protection engine proxy bundle session.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngineProxyLogBundle
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The protection engine proxy bundle session ID.
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPEProxy'
          description: Successfully returned VPE proxy resource.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get protection engine proxy bundle session
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/protection-engines/{id}/proxy-images:
    get:
      description: 'Retrieves all protection engine proxy images.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionEngineProxyImages
      parameters:
      - description: The ID of the VPE protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWRepoFiles'
          description: Successfully returned available proxy OVA files.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection engine proxy images
      tags:
      - Virtual Machine Data Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/protection-engines/{id}/supported-upgrade:
    post:
      description: 'Retrieves protection engine supported upgrade type.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getProtectionEngineSupportedUpgrade
      parameters:
      - description: The ID of the protection engine.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportedUpgradeResource'
        description: The upgrade request.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedUpgrade'
          description: The request completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request could not be completed due to a conflict with the current state of the target resource.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get protection engine supported upgrade type
      tags:
      - Virtual Machine Data Management
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/protection-groups:
    get:
      description: 'Retrieves all protection groups that PowerProtect Data Manager manages.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random,serial

        '
      operationId: getProtectionGroups
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroups'
          description: Successfully returned available protection groups.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection groups
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random,serial
    post:
      description: 'Creates a protection group if an existing protection group with the provided naturalIds is not found. Otherwise, the existing protection group will be updated using a PATCH operation.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: createProtectionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroup'
        description: Payload of the protection group to create.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: Successfully created a new protection group or updated an existing protection group.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requester is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a protection group
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-groups/{id}:
    delete:
      description: 'Deletes a protection group from PowerProtect Data Manager.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: deleteProtectionGroup
      parameters:
      - description: ID of the protection group.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the protection group.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a protection group by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,backup_admin
    get:
      description: 'Retrieves a protection group by its ID. Use this API request to get detailed information about the protection group.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionGroup
      parameters:
      - description: The protection group ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: Successfully returned the protection group.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested protection group does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a protection group by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    patch:
      description: 'Patches the specified protection group.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: patchProtectionGroup
      parameters:
      - description: The protection group ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionGroup'
        description: The body contains detailed information of the protection group to patch.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionGroup'
          description: The response shows the updated protection group.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested protection group does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Patch a protection group
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-groups/{id}/copy-map:
    get:
      description: 'Retrieves copy map of assets in the given protection group.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionGroupCopyMap
      parameters:
      - $ref: '#/components/parameters/filter'
      - description: ID of the protection group.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'Exclude copy state. (Possible values include: DELETED,DELETING,DELETE_FAILED,SOFT_DELETED)'
        in: query
        name: excludeCopyState
        schema:
          default: DELETED, SOFT_DELETED
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyMap'
          description: Successfully returned available copy map.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get copy map for assets in the given protection group
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/protection-policies:
    get:
      description: 'Retrieves all protection policies.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getProtectionPolicies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicies'
          description: Successfully returned available protection policies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection policies
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,readonly,backup_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a protection policy.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createProtectionPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicy'
        description: The body contains detailed information about the protection policy to create.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#'
          description: Successfully created the protection policy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a protection policy
      tags:
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-policies-batch:
    parameters: []
    patch:
      description: 'Batch update protection policies, currently only the field ''enabled'' is allowed to be patched.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: patch-api-v2-protection-policy-states-batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPoliciesBatchRequests'
        description: Request body of patching protection policies.
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponses'
          description: Multi-status, allow partial success.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Batch update protection policies
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/protection-policies/{id}:
    delete:
      description: 'Deletes protection policy by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the protection policy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The protection policy requested does not exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a protection policy by ID
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a protection policy by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator

        '
      operationId: getProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicy'
          description: Successfully returned the protection policy.
        '204':
          description: The requested protection policy does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The protection policy requested does not exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a protection policy by ID
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,readonly,backup_admin
    put:
      description: 'Updates protection policy by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicy'
        description: The body contains detailed information of the protection policy to update.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicy'
          description: Successfully updated the protection policy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The protection policy requested does not exists.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a protection policy by ID
      tags:
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-policies/{id}/asset-assignments:
    get:
      description: 'Retrieves all assets that are protected with the specified protection policy ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getAssetsProtectedByPolicy
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyAssetAssignments'
          description: Successfully returned available assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all assets protected by protection policy ID
      tags:
      - Protection Policies
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Assigns the assets to the protection policy with the specified protection policy ID.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: assignAssetsToProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The body contains a list of asset IDs to be assigned to the protection policy.
        required: false
      responses:
        '204':
          description: Successfully assign the assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Assign assets to the protection policy by protection policy ID
      tags:
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-policies/{id}/asset-unassignments:
    post:
      description: 'Unassigns protected assets from the specified protection policy ID.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: unassignAssetsFromProtectionPolicy
      parameters:
      - description: The protection policy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The body contains a list of assets id protected by the protection policy.
        required: false
      responses:
        '204':
          description: Successfully unassign the assets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Unassign assets protected from the protection policy by protection policy ID
      tags:
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-policies/{id}/backups:
    post:
      deprecated: true
      description: 'Trigger All or Selected assets in one protection policy as manual backup.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: triggerBackupOnProtectionPolicy
      parameters:
      - description: The protection policy Id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicyBackupRequest'
        description: 'The body contains below configuration options for current manual backup session:

          * Backup level

          * Retention time

          * Boolean flag that indicates whether copies created by manual backup should be processed by stages (e.g. promotion, replication, cloudtier, etc.) configured in the corresponding protection policy.'
        required: false
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Successfully triggered the adhoc backup process.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Trigger manual backup at protection policy level
      tags:
      - Asset Management
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-policies/{id}/protections:
    post:
      description: 'Manually protect assets at the protection policy level.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: triggerProtectectionOnPolicy
      parameters:
      - description: ID of the protection policy.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionPolicyAdhocProtectionRequest'
        description: Protection request body.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionPolicyAdhocProtectionResponse'
          description: The requested is accepted for processing.
      security:
      - BearerAuth: []
      summary: Manually protect assets by policy.
      tags:
      - Asset Management
      - Protection Policies
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/protection-rules:
    get:
      description: 'Retrieves all created protection rules.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator

        '
      operationId: getProtectionRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRules'
          description: Successfully returned available protection rules.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all protection rules
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin
    post:
      description: 'Create a protection rule.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createProtectionRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRule'
        description: Detailed information for the protection rule to create.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: 'Successful operation. '
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully created the protection rule.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a protection rule
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-rules-conflicts-preview:
    post:
      description: 'Create the preview of all other protection rules having asset assignment conflict with the given protection rule.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createProtectionRulesConflictsPreview
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRulesConflictPreviewRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRules'
          description: Successfully returned the conflicts preview.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get the preview of all other protection rules having asset assignment conflict with the given protection rule
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-rules-execution:
    post:
      description: 'Starts to execute protection rules.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: executeProtectionRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRuleExecution'
        description: Detailed information about running dynamic filters.
        required: false
      responses:
        '200':
          description: Successfully triggered the protection rules.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Execute protection rules
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-rules/{id}:
    delete:
      description: 'Deletes protection rule by specified ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted the protection rule.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a protection rule by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a protection rule by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator

        '
      operationId: getProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully returned the protection rule.
        '204':
          description: The requested protection rule does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a protection rule by ID
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin
    put:
      description: 'Update protection rule by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateProtectionRule
      parameters:
      - description: ID of the protection rule.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectionRule'
        description: Detail information of protection rule to be updated.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectionRule'
          description: Successfully updated the protection rule.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a protection rule by ID
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/protection-storage-metrics:
    get:
      description: 'Retrieves aggregation of all protection storage metrics.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getProtectionStorageMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMetricsStats'
          description: Successfully returned available protection storage metrics.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this  operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all protection storage metrics
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/recovery-contexts:
    get:
      description: 'Retrieves all available recovery contexts.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getRecoveryContexts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryContexts'
          description: Successfully returned available recovery contexts.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all recovery contexts
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages:
    get:
      description: 'Synchronize the remote upgrade package list from Managed File Transfer (MFT) to the database. Then return the remote upgrade package list. If automatic downloading is allowed, the latest package downloads.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getRemoteUpgradePackages
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteUpgradePackages'
          description: The request was successful and returned the requested resource.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The telemetry manager component is not in the OPERATIONAL state.
      security:
      - BearerAuth: []
      summary: Get the list of available upgrade packages
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages/{id}/download:
    get:
      description: 'Starts file download for the remote upgrade package of the specified ID. The API just trigger the downloading, it does not provide status of downloading.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: downloadRemoteUpgradePackage
      parameters:
      - description: ID of the remote services gateway connection.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteUpgradePackageDownload'
          description: The request was successful and returned the requested resource.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Occurs if the state of the upgrade package for the given ID is DOWNLOADING, DOWNLOADED, IGNORED; the metadata of the file has been changed in the remote services backend; or the downloaded package already exists on the appliance.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the given ID.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The telemetry manager component is not in the OPERATIONAL state.
      security:
      - BearerAuth: []
      summary: Download the remote upgrade package that is assigned to the product
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/remote-upgrade-packages/{id}/download-status:
    get:
      description: 'Retieves the download progress percentage of the remote upgrade package with the specified ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getRemoteUpgradePackageDownloadProgress
      parameters:
      - description: ID of the remote services gateway connection.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteUpgradePackageDownloadProgress'
          description: The request was successful and returned the requested resource.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The download for the given file ID has not started or the state of the upgrade package for the given ID is IGNORED.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID or this download is canceled.
        '424':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An error occurred in the remote services backend while the download was in progress.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The telemetry manager component is not in the OPERATIONAL state.
      security:
      - BearerAuth: []
      summary: Get remote upgrade package download progress
      tags:
      - Remote Service
      x-ppdm-executable-roles: admin
  /api/v2/report-exports:
    post:
      description: Create a request to export or save a generated report.
      operationId: reportExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportReportParameters'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportReportResponse'
          description: Request accepted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Create request to export report
      tags:
      - Reporting
  /api/v2/report-exports/{id}:
    get:
      description: Download a report file by its ID.
      operationId: getReportExport
      parameters:
      - description: ID returned from the POST /report API
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: ID returned from the POST /report API
        in: query
        name: formatType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Request OK.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Download report file
      tags:
      - Reporting
  /api/v2/report-exports/{id}/status:
    get:
      description: 'Returns report export status. Possible values include: RUNNING, QUEUED, READY. The path parameter id and the query parameter formatType uniquely identifies the report export as the same ID will be used in case of the export to multiple formats.'
      operationId: ReportEportStatusResponse
      parameters:
      - description: ID returned from the POST /report API
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: formatType
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportExportStatusResponse'
          description: Returns the report status.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Get report export status
      tags:
      - Reporting
  /api/v2/reports:
    post:
      description: Creates a long running process to generate the report or report data and returns the run ID.
      operationId: createReportRun
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunReportParameters'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportResponse'
          description: Request accepted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Generate report or report data
      tags:
      - Reporting
  /api/v2/reports/{id}:
    get:
      description: Get a report by providing its ID.
      operationId: getReportById
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - description: The ID of the report.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: 'The output format. Supported values are: json'
        in: query
        name: view
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
          description: 'Returns the report. Most of the fields in the response can be used in the filter and orderby attributes. See documentation for the specific report to learn about supported filter and orderby attributes. '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Get a report
      tags:
      - Reporting
  /api/v2/reports/{id}/status:
    get:
      description: 'Returns report status. Possible values include: running, queued, ready'
      operationId: ReportStatusResponse
      parameters:
      - description: ID returned from the POST /report API
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusResponse'
          description: Returns the report status.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      summary: Get report status
      tags:
      - Reporting
  /api/v2/restore-plans:
    get:
      description: 'Get all restore plans.

        > This endpoint supports execution by the following roles: Administrator, User, Restore Administrator

        '
      operationId: getAllRestorePlans
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlans'
          description: Successfully returned the restore plans.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '416':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is too large to be retrieved.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all restore plans
      tags:
      - Restore Plan
      x-ppdm-executable-roles: admin,readonly,restore_admin
    post:
      description: 'Create a restore plan.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: createRestorePlan
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
        description: Request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlan'
          description: Successfully created the restore plan.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create restore plan
      tags:
      - Restore Plan
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restore-plans/{id}:
    delete:
      description: 'Delete restore plan by ID.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: deleteRestorePlan
      parameters:
      - description: ID of the restore plan.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the restore plan.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested restore plan does not exist.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested restore plan is in running state.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete restore plan by ID
      tags:
      - Restore Plan
      x-ppdm-executable-roles: admin,restore_admin
    get:
      description: 'Get restore plan by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Restore Administrator

        '
      operationId: getRestorePlanById
      parameters:
      - description: ID of the restore plan.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlan'
          description: Successfully returned the restore plan.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested restore plan does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get restore plan by ID
      tags:
      - Restore Plan
      x-ppdm-executable-roles: admin,readonly,restore_admin
    patch:
      description: 'Update restore plan by ID.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: updateRestorePlan
      parameters:
      - description: ID of the restore plan.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
        description: Request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlan'
          description: Successfully updated restore plan.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested restore plan does not exist.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested restore plan is in running state.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update restore plan by ID
      tags:
      - Restore Plan
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-copies:
    get:
      description: 'Retrieves all restored copies by parameters. The restored copies define which copies of an asset are already restored.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getRestoredCopies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoredCopies'
          description: Successfully returned available restored copies.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all restored copies
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,restore_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a restored copy by request body. The restored copies define which copies of an asset already are restored.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: restoreCopy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoredCopy'
        description: The body contains detail information of restored copy to create.
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoredCopy'
          description: Successful operation.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a restored copy
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-copies/{id}:
    get:
      description: 'Retrieves a restored copy by the specified ID. The restored copies define which copies of an asset already are restored. Each restored asset corresponds to a restored copy.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: getRestoredCopy
      parameters:
      - description: The restored copy ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoredCopy'
          description: Successfully returned the requested restored copy.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a restored copy by ID
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-copies/{id}/expiration:
    post:
      description: 'Handles the request to extend, by specifying the number of days, the expiration time of the Live VM/Instant Access session.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: extendLiveSessionExpiration
      parameters:
      - description: The exported copy resource ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmExpirationRequest'
        description: 'VmExpirationRequest - Encapsulates the request to extend Live VM/Instant Access session expiration object.  Currently used as a REST API request object.

          '
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageMountedCopyResponse'
          description: Successfully extend the expiration time.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Extend the expiration time of the Live VM/Instant Access session.
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-copies/{id}/remove:
    post:
      description: 'Unmounts the NAS datastore and cleans up the VM proxy restore session resource.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: unmountAndDeleteRestoreCopy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageMountedCopyResponse'
          description: Successfully removed NAS datastore and restored session resource.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Unmount the NAS datastore and clean up the VM proxy restore session resource
      tags:
      - Recovery and Reuse Management
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-copies/{id}/vmotion:
    post:
      description: 'vMotions a VM that is deployed as an instant access restore to permanent storage. In an instant access restore, the VM is deployed to an NFS share that is attached to a specified ESX host, cluster, or resource pool. This API call migrates the VM from the temporary NFS share to permanent storage.


        The VM configuration files and VMDK files can be migrated to different datastores.


        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: vmotion
      parameters:
      - description: The restored copy resource ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmotionVmConfig'
        description: Vmotion parameter configuration object.  This object is used is as a REST request body in API /api/v2/restored-copies/{id}/vmotion, which requests a vMotion to relocate a VM and its VMDK files from a PowerProtect DD to vCenter datastore.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageMountedCopyResponse'
          description: Successfully Vmotion the VM files.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Vmotion a VM from an instant-access restore to permanent storage
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/restored-files-batch:
    post:
      description: "Establishes a File-Level-Restore (FLR) session. An FLR session is used to restore individual files or directories as opposed to performing an Image-Level-Restore (that is, restoring entire NAS Share(s)).\n\nCalling this API creates Job Group/Job/Task per request. A job is created per Asset and each task represents single/multiple copies the selected files/folders are part of. NAS Pillar then reserves proxy(ies) to run single/multiple restore sessions. \n\nSince the restore operation being executed on proxy is asynchronous operation, so the response from this API contains a PowerProtect Data Manager task ID(JOB). The task API can be called to monitor the progress of the operation.\nCurrently supported for only NAS FLR. In the future VM FLR will use the same API."
      operationId: createNasFLRSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlrRestoreRequest'
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlrRestoreRequest'
          description: FLR for NAS file(s)/folder(s) initiated.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlrRestoreResponse'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Creates FLR session
      tags:
      - NAS Data Management
      x-internal: false
  /api/v2/roles:
    get:
      description: 'Retrieves the list of all the assignable system roles and their descriptions. This list contains information about the role privileges.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getRoles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
          description: Successfully retrieved the list of roles.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all roles
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random
  /api/v2/roles/{roleId}:
    get:
      description: 'Retrieves a role by ID. The role information contains the role description and role privileges. Each local user is assigned a role.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getRole
      parameters:
      - description: Role ID.
        in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Successfully retrieved the specified role.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The specified role was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a role by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
  /api/v2/rules:
    get:
      description: 'Retrieve a list of rules.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get a list of rules
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Create a rule to assign a resource group when a filter matches. The "id" property is created from the action, actionArgs (sorted alphabetically), and filter.id properties.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: postRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulePostBody'
        description: Payload of the rule to create.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create a rule to associate filter to assign a resource group
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/rules/{id}:
    delete:
      description: 'Remove a rule.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: deleteRule
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete a rule
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,backup_admin
    get:
      description: 'Retrieve a rule.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getRule
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get a single rule
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    parameters:
    - description: The ID of the rule.
      in: path
      name: id
      required: true
      schema:
        type: string
    patch:
      description: 'The only property that can be patched is the "name" property. The other fields are used for generating the "id" property and must remain fixed.

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: patchRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulePatchBody'
        description: Payload of the rule to update.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update a rule
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/rules/{id}/run:
    parameters:
    - description: The ID of the rule.
      in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'All filters are either previously created or automatically generated.

        Users create rules to associate a resource group with a filter (either previously created or automatically generated).

        This API is run when assets and resource groups are impacted (discovery, association, and so on.)

        > This endpoint supports execution by the following roles: Administrator, Backup Administrator

        '
      operationId: runRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Forbidden
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Run a single rule
      tags:
      - Asset Management
      x-ppdm-executable-roles: admin,backup_admin
  /api/v2/search-clusters:
    get:
      description: 'Retrieves the available search clusters.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSearchClusters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusters'
          description: Successfully returned all search clusters.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all search clusters
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/search-clusters/{id}:
    get:
      description: 'Retrieves a search cluster by its ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSearchCluster
      parameters:
      - description: The ID of the search cluster to be retrieved.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCluster'
          description: Successfully returned the search cluster.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The search cluster ID does not exist.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get search cluster by ID
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/search-clusters/{id}/config:
    put:
      description: 'Updates the search cluster configuration.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateSearchCluster
      parameters:
      - description: The ID of the search cluster to be updated.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchClusterConfig'
        description: All fields required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusterConfig'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusterConfig'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation as it is not implemented.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update search cluster configuration
      tags:
      - Search Clusters
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/log-bundles:
    post:
      description: 'Collects search cluster log bundles.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createSearchClusterLogBundle
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchClusterLogBundle'
        description: Optional Fields NOT required
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchClusterLogBundle'
                type: array
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusterLogBundle'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Collect search cluster log bundles
      tags:
      - Search Clusters
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/management:
    post:
      description: 'Runs search cluster management request.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: manageSearchCluster
      parameters:
      - description: The ID of the search cluster to be managed.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchClusterManagement'
        description: The management request.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusterManagement'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClusterManagement'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Execute management request
      tags:
      - Search Clusters
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/nodes:
    get:
      description: 'Retrieves all search cluster nodes.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSearchClusterNodes
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNodes'
          description: Successfully returned available nodes.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all search cluster nodes
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Deploys a search cluster node.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createSearchClusterNode
      parameters:
      - description: The ID of the search cluster
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchNode'
        description: Optional fields not required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNode'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNode'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Deploy a search cluster node
      tags:
      - Search Clusters
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/search-clusters/{id}/nodes/{nodeId}:
    delete:
      description: 'Removes a search cluster node.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteSearchClusterNode
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the search cluster node to be removed.
        in: path
        name: nodeId
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNode'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Remove search cluster node by ID
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves a search cluster node by its ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSearchClusterNode
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the search cluster node.
        in: path
        name: nodeId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNode'
          description: Successfully returned the search cluster node.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get search cluster node by ID
      tags:
      - Search Clusters
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/search-clusters/{id}/nodes/{nodeId}/management:
    post:
      description: 'Manages the search cluster node.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: manageSearchClusterNode
      parameters:
      - description: The ID of the search cluster.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the search cluster node to be managed.
        in: path
        name: nodeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchNodeManagement'
        description: All fields required.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNodeManagement'
          description: Successful operation.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchNodeManagement'
          description: The request was accepted for processing.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requested resource was not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Manage search cluster node
      tags:
      - Search Clusters
      x-codegen-request-body-name: model
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-backups:
    get:
      description: 'Retrieves a list of server disaster recovery backups.

        > This endpoint supports execution by the following roles: Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrBackups
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: The default is false. If it is true, it  returns all backups, including failures.
        in: query
        name: full
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrBackups'
          description: OK. Retrieves a list of server disaster recovery backups.
        '400':
          description: Bad request
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery backups
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random
    post:
      description: 'Creates the server disaster recovery backup.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createServerDrBackup
      parameters:
      - description: Name of the component requesting a backup.
        in: query
        name: name
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdrBackup'
        description: Label for backup.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrBackupPostResponse'
          description: OK. Creates the server disaster recovery backup.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create server disaster recovery backup
      tags:
      - Server Disaster Recovery
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-backups/{id}:
    delete:
      description: 'Deletes the server disaster recovery backup based on the specified ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteServerDrBackup
      parameters:
      - description: Server backup ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete server disaster recovery backup by ID
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the server disaster recovery backup by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServerDrBackup
      parameters:
      - description: Server disaster recovery backup ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrBackup'
          description: OK. Retrieves the server disaster recovery backup by ID.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get server disaster recovery backup by ID
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
    parameters:
    - description: Server disaster recovery backup ID sent in request.
      in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Updates the server disaster recovery backup by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateServerDrBackup
      parameters:
      - description: Server disaster recovery backup ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdrBackup'
        description: Server disaster recovery backup request.
        required: false
      responses:
        '200':
          description: OK. Updates the server disaster recovery backup by ID.
        '400':
          description: Bad request.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '404':
          description: Not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update server disaster recovery backup by ID
      tags:
      - Server Disaster Recovery
      x-codegen-request-body-name: SdrBackup
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-configurations:
    get:
      description: 'Retrieves all server disaster recovery configurations. The configurations detail includes the repository filesystem (NFS or DD Boost), repository host, repository path, DD Boost credential ID, type, and backupsEnabled flag. The configurations contain the server disaster recovery type, which specifies the PowerProtect DD system or integrated storage system supports that are currently in the server disaster recovery backup.


        The GET /api/v2/server-disaster-recovery-configurations query produces new output that is collected from the data model. The output includes some of the defined fields that toggle the ability for a component to generate backups. The ability to disable a component''s backup is exposed by the UI, and the user can optionally change the value. A change of the element that is bound to the enable/disable backup for the specific component triggers a PUT /api/v2/server-disaster-recovery-configurations call to update the field in the data model. The change is reflected in the ES index_data_component.

        > This endpoint supports execution by the following roles: Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrConfigurations
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrConfigurations'
          description: OK. Successfully retrieves a list of all server disaster recovery configurations.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: The internal server error that occurs whenever the request handler code raises an exception.
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery configurations
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random
  /api/v2/server-disaster-recovery-configurations/{id}:
    get:
      description: 'Retrieves the server disaster recovery configuration by its ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServerDrConfiguration
      parameters:
      - description: If you specify the ID as "current", you get the current Integrated Storage configuration.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrConfiguration'
          description: OK. Retrieves the server disaster recovery configuration by its ID.
        '204':
          description: No content.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get server disaster recovery configuration by ID
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
    parameters:
    - description: Server disaster recovery backup ID sent in request.
      in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Updates the server disaster recovery configuration by its ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateServerDrConfiguration
      parameters:
      - description: Server disaster recovery Configuration ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdrConfiguration'
        description: Server disaster recovery configuration request.
        required: false
      responses:
        '200':
          description: OK. Updates the server disaster recovery configuration by its ID.
        '201':
          description: Created
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '404':
          description: Not found.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update server disaster recovery configuration by ID
      tags:
      - Server Disaster Recovery
      x-codegen-request-body-name: SdrConfiguration
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-events:
    post:
      description: Create an event notification to initiate a disaster recovery backup.
      operationId: createServerDisasterRecoveryEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SdrEventNotification'
        description: Server disaster recovery event notification information.
      responses:
        '200':
          description: OK. Successfully processed event notification.
        '400':
          description: The request is not valid.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create server disaster recovery event notification
      tags:
      - Server Disaster Recovery
      x-internal: true
  /api/v2/server-disaster-recovery-hosts:
    get:
      description: 'Retrieves a list of all the server disaster recovery hosts. The host info includes id, nodeID, host name, and version.

        The nodeID is used to prepare the system for recovery. This API provides a list of available servers with disaster recovery backups. There could be more than one server.

        > This endpoint supports execution by the following roles: Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getServerDrHosts
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrHosts'
          description: OK. Successfully retrieves a list of all the server disaster recovery hosts.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all server disaster recovery hosts
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
      x-ppdm-pagination: random
  /api/v2/server-disaster-recovery-policy:
    get:
      description: 'Returns current Spring application properties that are currently in operation.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServerDrRecoveryPolicy
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationObject'
          description: OK. Returns the current Spring application properties that are currently in operation.
        '500':
          description: Internal server error.
      security:
      - BearerAuth: []
      summary: Gets the current Spring application properties
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
    patch:
      description: 'Update current Spring application properties and updates records on elastic search.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateServerDrRecoveryPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationObject'
        description: Server disaster recovery Spring application properties.
        required: true
      responses:
        '200':
          description: OK.
        '500':
          description: Internal server error.
      security:
      - BearerAuth: []
      summary: Updates the current Spring application properties
      tags:
      - Recovery and Reuse Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/server-disaster-recovery-status:
    get:
      description: 'Retrieves the restore server disaster recovery status. The status includes action status like starting time, elapsed seconds, state, error, and so on.

        The API is used by the UI to poll and check if restore is complete. Once the status is not active, the user is redirected to the login page.


        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServerDrStatus
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdrAction'
          description: OK. Retrieves the restore server disaster recovery status.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The request is Forbidden.
        '500':
          description: An unexpected error prevented the server from fulfilling your request. The internal server error with this response status code whenever they execute some request handler code that raises an exception.
      security:
      - BearerAuth: []
      summary: Get status of server disaster recovery restore
      tags:
      - Server Disaster Recovery
      x-ppdm-executable-roles: admin
  /api/v2/service-level-agreements:
    get:
      description: 'Retrieves all service level agreements. Each service level agreement contains multiple service level objectives. The service level objective defines a compliance check item for data protection.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getServiceLevelAgreements
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Including summary calculation
        in: query
        name: includingSummary
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelAgreements'
          description: Successfully returned available service level agreements.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all service level agreements
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    post:
      description: 'Creates a service level agreement. The service level agreement contains multiple service level objectives. The service level objective defines a compliance check item for data protection.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: createServiceLevelAgreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelAgreement'
        description: Detailed information about the service level agreement to create.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelAgreement'
          description: Successful operation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelAgreement'
          description: Successfully created the service sevel agreement.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create a service level agreement
      tags:
      - Compliance
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/service-level-agreements/{id}:
    delete:
      description: 'Deletes a service level agreement by ID. The service level agreement contains multiple service level objectives. The service level objective defines a compliance check item for data protection.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: deleteServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the service level agreement.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete a service level agreement by ID
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,restore_admin
    get:
      description: 'Retrieves a service level agreement by ID. The service level agreement contains multiple service level objectives. The service level objective defines a compliance check item for data protection.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Including summary calculation
        in: query
        name: includingSummary
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelAgreement'
          description: Successfully returned the service level agreement.
        '204':
          description: The requested service level agreement does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a service level agreement by ID
      tags:
      - Compliance
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Updates a service level agreement by ID. The service level agreement contains multiple service level objectives. The service level objective defines a compliance check item for data protection.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: updateServiceLevelAgreement
      parameters:
      - description: ID of the service level agreement.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelAgreement'
        description: Detail information of service level agreement to update.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelAgreement'
          description: Successfully updated the service level agreement.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update service level agreement by ID
      tags:
      - Compliance
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/service-level-objectives:
    get:
      description: 'Retrieves all service level objectives. The each service level objective defines one compliance type. The compliance type must follow each service level objective that is required.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServiceLevelObjectives
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelObjectives'
          description: Successfully returned available service level objectives.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all service level objectives
      tags:
      - Compliance
      x-ppdm-executable-roles: admin
  /api/v2/service-level-objectives/{id}:
    get:
      description: 'Retrieves service level objective by ID. The each service level objective defines one compliance type. The compliance type must follow each service level objective that is required.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getServiceLevelObjective
      parameters:
      - description: Service level objective ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLevelObjective'
          description: Successfully returned the service level objective.
        '204':
          description: The requested service level objective does not exist.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a service level objective by ID
      tags:
      - Compliance
      x-ppdm-executable-roles: admin
  /api/v2/sla-metrics:
    get:
      description: Get metrics for Service Level Agreements (SLAs).
      operationId: getSlaMetrics
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlaMetrics'
          description: Successfully returned SLA compliance metrics.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: The requestor is not authorized to perform this operation.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get SLA metrics
      tags:
      - Compliance
  /api/v2/smtp:
    get:
      description: 'Retrieves Simple Mail Transfer Protocol (SMTP) configuration. Returns the list of SMTP setup in the appliance.

        Returns only one SMTP configuration.

        Returns ID, mailserver, mailFrom, mailRecipient, and port.


        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSmtps
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smtps'
          description: Located and returned the available SMTP configuration successfully.
        '400':
          description: Filter syntax is not valid.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all SMTP configuration
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    post:
      description: 'Creates the SMTP configuration, which requires mailserver, mailFrom:admin(email), and mailRecipient:email.

        The email setup on the PowerProtect Data Manager System Settings area enables you to configure SMTP email server information to send emails for resetting local user passwords and customized alert notifications.

        Only one SMTP configuration is allowed.


        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createSmtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Smtp'
        description: Only one SMTP configuration is allowed.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smtp'
          description: Successful operation.
        '201':
          description: Created new SMTP.
        '400':
          description: The submitted SMTP has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Only one SMTP is allowed.
        '404':
          description: Cannot find a SMTP with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Create SMTP configuration
      tags:
      - Appliance Management
      x-codegen-request-body-name: Smtp
      x-ppdm-executable-roles: admin
  /api/v2/smtp/test:
    post:
      description: 'Sends a test email. Requires mailRecipient and mailserver. Includes mailFrom: email.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: testSmtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpTest'
        description: Send a test email.
        required: false
      responses:
        '200':
          description: Test email sent successfully.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Send a test email
      tags:
      - Appliance Management
      x-codegen-request-body-name: Smtp
      x-ppdm-executable-roles: admin
  /api/v2/smtp/{id}:
    delete:
      description: 'Deletes Simple Mail Transfer Protocol (SMTP) configuration by ID. No email is sent once SMTP configuration is deleted.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteSmtp
      parameters:
      - description: SMTP configuration ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smtp'
          description: Successful operation.
        '204':
          description: Deleted the SMTP with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find a SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete SMTP configuration by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves Simple Mail Transfer Protocol (SMTP) configuration by the specified ID.

        The returned information contains the SMTP ID, mailserver, mailFrom, mailRecipient, and port.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getSmtp
      parameters:
      - description: SMTP configuration ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smtp'
          description: Found and returned the SMTP configuration with the specified ID.
        '401':
          description: The requestor is not allowed to perform this operation.
        '404':
          description: Cannot find an SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get SMTP configuration by ID
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    put:
      description: 'Updates SMTP configuration by ID. You can update the mailserver, mailFrom, and mailRecipient.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateSmtp
      parameters:
      - description: SMTP configuration ID sent in request.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Smtp'
        description: Update SMTP configuration.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Smtp'
          description: Successfully updated the SMTP configuration.
        '400':
          description: The submitted SMTP configuration has a syntax error.
        '401':
          description: The requestor is not allowed to perform this operation.
        '403':
          description: Cannot change the SMTP configuration in the current node state.
        '404':
          description: Cannot find an SMTP configuration with the specified ID.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update SMTP configuration by ID
      tags:
      - Appliance Management
      x-codegen-request-body-name: Smtp
      x-ppdm-executable-roles: admin
  /api/v2/storage-system-metrics:
    get:
      description: 'Retrieves a capacity status summary for all **Storage Systems** in the PowerProtect Data Manager including PowerProtect DD systems, PowerProtect systems, and other local or external storage systems.

        This API request belongs to the storage management API.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getStorageSystemMetrics
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystemMetrics'
          description: Successfully returned available capacity status summaries of the storage systems.
          headers: {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get metrics for storage systems
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/storage-systems:
    get:
      description: 'Retrieves all **Storage Systems** in the PowerProtect Data Manager including PowerProtect DD systems, PowerProtect systems, and other local or external storage systems.

        **Storage Systems** are used to store the asset data regarding backing up or replicating assets.

        This API request belongs to the storage management API.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getStorageSystems
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: The asset type the returned storage systems could support.
        in: query
        name: supportedAssetType
        schema:
          enum:
          - VMAX_STORAGE_GROUP
          - VMWARE_VIRTUAL_MACHINE
          - ORACLE_DATABASE
          - MICROSOFT_SQL_DATABASE
          - FILE_SYSTEM
          - KUBERNETES
          - MICROSOFT_EXCHANGE_DATABASE
          - SAP_HANA_DATABASE
          - NAS_SHARE
          - CLOUD_NATIVE_ENTITY
          - CLOUD_DIRECTOR_VAPP
          - POWERSTORE_BLOCK
          - DR
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystems'
          description: Successfully returned available storage systems.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all storage systems
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/storage-systems/{id}:
    get:
      description: 'Retrieves a storage system by ID.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getStorageSystem
      parameters:
      - description: ID of the storage system.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystem'
          description: Successfully returned the storage system.
        '204':
          description: The requested storage system does not exist.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get a storage system by ID
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    put:
      description: 'Updates storage system by ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateStorageSystem
      parameters:
      - description: The storage system ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageSystem'
        description: Detail informationof storage system to update.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageSystem'
          description: Successfully updated the storage system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Update a storage system by ID
      tags:
      - Storage Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin
  /api/v2/storage-systems/{id}/capacities:
    get:
      description: 'Retrieves capacity information for a specified storage system. Capacity data is fetched directly from the PowerProtect DD system.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: getStorageSystemCapacities
      parameters:
      - description: ID of the storage system.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capacities'
          description: Successfully returned capacities for specified storage system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get live capacities for a storage system
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin
  /api/v2/storage-systems/{id}/nfs-exports:
    get:
      description: 'Retrieves the list of NFS export configurations for the specified storage system.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getNfsExport
      parameters:
      - $ref: '#/components/parameters/filter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsExports'
          description: Successfully returned the list of NFS export configurations for the specified storage system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get nfs exports for a storage system
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
    parameters:
    - description: ID of the storage system.
      in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Creates an NFS export configuration for a specified storage system based on the provided NFS export path and clients. If the NFS export configuration already exists for the specified clients, this operation appends new clients.
      operationId: createNfsExports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNfsExportRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsExport'
          description: Successfully returned the list of NFS export configurations for the specified storage system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      summary: Create an NFS export on a storage system
      tags:
      - Storage Management
  /api/v2/storage-systems/{id}/nfs-exports-deletion:
    parameters:
    - description: ID of the storage system.
      in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Deletes NFS export configuration for the specified storage system based on the provided NFS export path.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteNfsExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNfsExportDeletionRequest'
      responses:
        '204':
          description: Successfully deleted NFS export configuration for the specified storage system.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Delete an NFS export for a storage system
      tags:
      - Storage Management
      x-ppdm-executable-roles: admin
  /api/v2/sync-destination-configuration:
    patch:
      description: Update the PowerProtect Data Manager sync configuration.
      operationId: patchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericODataBatchRequestRestModel'
        description: A list of batch data for updating PowerProtect Data Manager system sync configurations.
      responses:
        '202':
          description: Accepted
      summary: Enable or disable the server sync destination
      tags:
      - Storage Management
  /api/v2/sync-instance:
    get:
      description: Get the sync instance configuration.
      operationId: getSyncInstances
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - description: Retrieves a list of sync instances that are defined by the order.
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncInstance'
          description: Successfully returned the sync instance.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      summary: Get the sync instance
      tags:
      - Storage Management
    post:
      description: Trigger metadata synchronization.
      operationId: triggerSyncInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncInstance'
        description: 'Configuration to initiate handshake. '
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSyncInstanceResponse'
          description: The requested resource was created successfully.
        '400':
          description: The request is not valid.
        '401':
          description: The requestor is not authorized to perform this operation.
        '403':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      summary: Trigger metadata synchronization
      tags:
      - Storage Management
      x-codegen-request-body-name: body
  /api/v2/syslogs-configurations:
    get:
      description: 'Retrieves all syslogs configurations.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getSyslogsConfigurations
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogsConfigurations'
          description: Successfully returned available syslogs configurations.
        '400':
          description: Filter syntax is invalid.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get all syslogs configurations
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,readonly
    post:
      description: 'Creates a new syslogs configuration and returns the response containing the syslogs configuration with its ID.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: createSyslogsConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogsConfiguration'
        description: The request body must include a server address (serverAddress) and server port (serverPort).
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogsConfiguration'
          description: The syslogs configuration is created successfully.
        '400':
          description: Syntax error in the submitted syslogs configuration.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Create syslogs configuration
      tags:
      - Log Management
      x-codegen-request-body-name: Syslogs configuration
      x-ppdm-executable-roles: admin
  /api/v2/syslogs-configurations/{id}:
    delete:
      description: 'Deletes a syslogs configuration.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteSyslogsConfiguration
      parameters:
      - description: ID for the syslogs configuration.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The syslogs configuration is deleted successfully.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          description: The syslogs configuration with the specified ID was not found.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Deletes a syslogs configuration
      tags:
      - Log Management
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the syslogs configuration with the specified ID.

        > This endpoint supports execution by the following roles: Administrator, User

        '
      operationId: getSyslogsConfiguration
      parameters:
      - description: ID for the syslogs configuration.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogsConfiguration'
          description: The syslogs configuration with the specified ID was found and returned.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          description: The syslogs configuration with the specified ID was not found.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get syslogs configuration by ID
      tags:
      - Log Management
      x-ppdm-executable-roles: admin,readonly
    patch:
      description: 'Updates the syslogs configuration.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateSyslogsConfiguration
      parameters:
      - description: ID for the syslogs configuration.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogsConfiguration'
        description: The request body contains detailed instructions to patch.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogsConfiguration'
          description: The syslogs configuration is updated successfully.
        '400':
          description: Syntax error in the submitted syslogs configuration.
        '401':
          description: The requestor did not provide valid authentication credentials.
        '403':
          description: The requestor does not have required permissions to access the resource.
        '404':
          description: The syslogs configuration with the specified ID was not found.
        '500':
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Update the syslogs configuration with the specified ID
      tags:
      - Log Management
      x-codegen-request-body-name: Syslogs configuration
      x-ppdm-executable-roles: admin
  /api/v2/system-health-issues:
    get:
      description: 'Get all system health issues.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getSystemHealthIssues
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - $ref: '#/components/parameters/queryState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHealthIssues'
          description: Successfully returned health issues.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get system health issues
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/system-health-score-categories:
    get:
      description: 'Retrieve system health score categories

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator

        '
      operationId: getSystemScoreCategories
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemHealthScoreCategories'
          description: Successfully returned available system health score categories and message
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authenticated to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                type: object
          description: Any server error that prevented the completion of the request.
      security:
      - BearerAuth: []
      summary: Get system health score categories
      tags:
      - Monitoring
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin
  /api/v2/timezones:
    get:
      description: 'Retrieves all supported time zones or a specific time zone if provided.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getTimezones
      parameters:
      - description: Specific Time Zone ID (optional)
        in: query
        name: timezone
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timezones'
          description: Located and returned the available time zones successfully.
        '401':
          description: The requestor is not allowed to perform this operation.
        '500':
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all supported time zones or a specific time zone
      tags:
      - Appliance Management
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/token:
    post:
      description: 'Extends the usage period of the user, as specified by the access token, by renewing the token. The grant_type in the request body must be refresh_token.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: refreshAccessToken
      parameters:
      - description: Authorization token.
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshAccessTokenRequest'
        description: Refresh token.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Successfully renewed the authorization token (also known as access token).
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Renew the access token for extended usage period
      tags:
      - Authentication and Authorization
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
  /api/v2/upgrade-packages:
    get:
      description: 'Retrieves a list of all upgrade packages. This API call checks the upgrade history of the system. If the system has been upgraded multiple times, the list includes the installed upgrade packages. At any time, only one package that has not been installed can exist.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getUpgradePackages
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackages'
          description: Located and returned all upgrade packages successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The filter syntax is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when error occurs.
      security:
      - BearerAuth: []
      summary: Get a list of upgrade packages
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
      x-ppdm-pagination: random
    post:
      description: 'Uploads only one upgrade package at a time. To upload another, install or delete the existing upgrade package.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: uploadUpgradePackage
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: Upgrade package file to be uploaded.
                  format: binary
                  type: string
        description: Request body for uploading a .pkg file as an upgrade package.
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: The create upgrade package request was accepted and is being processed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The uploaded upgrade package is invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: It is not allowed to upload upgrade package in the current state.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unable to parse the request body.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when error occurs.
      security:
      - BearerAuth: []
      summary: Upload an upgrade package to the appliance
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}:
    delete:
      description: 'Deletes an upgrade package that is not installing nor has been installed. Packages in the processing state cannot be deleted.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: deleteUpgradePackage
      responses:
        '204':
          description: The upgrade package is successfully deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The upgrade package cannot be deleted.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when an error occurs.
      security:
      - BearerAuth: []
      summary: Delete an uploaded upgrade package by ID
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
    get:
      description: 'Retrieves the details of an upgrade package by the specified ID, including its state, name, installed date, and so on.

        > This endpoint supports execution by the following roles: Administrator, User, Backup Administrator, Restore Administrator, Security Administrator

        '
      operationId: getUpgradePackage
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Found and returned the upgrade package with the specified ID.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when an error occurs.
      security:
      - BearerAuth: []
      summary: Get upgrade package by ID
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin,readonly,backup_admin,restore_admin,security_admin
    parameters:
    - $ref: '#/components/parameters/upgradePackageId'
    put:
      description: 'Installs upgrade package only if the state of the upgrade package is AVAILABLE or FAILED. To install the upgrade package, set state=INSTALLED in the PUT request body.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: updateUpgradePackage
      parameters:
      - $ref: '#/components/parameters/forceUpgrade'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradePackage'
        description: 'First get the available upgrade package and then change the following properties as below:

          "state": "INSTALLED",

          "lockboxPassphrase": "1234567890abcdef",

          "upgradeToken": "abcdefghijklmn",

          "certificateTrustedByUser": true


          Then use the upgrade package as the request body to trigger the upgrade.'
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Request accepted and is upgrading with the upgrade package of the specified ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The submitted upgrade package has a syntax error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The upgrade package with specified ID is not allowed for upgrade in the current state.
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Received when sending PUT request without query parameter "forceUpgrade=true". The request was failed in validation process.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when error occurs.
      security:
      - BearerAuth: []
      summary: Install the upgrade package
      tags:
      - Upgrade
      x-codegen-request-body-name: UpgradePackage
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/precheck:
    parameters:
    - $ref: '#/components/parameters/upgradePackageId'
    post:
      description: 'Enables you to precheck an upgrade package by the specified ID. The precheck verifies that all components are ready for upgrade.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: precheckUpgradePackage
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Found and return the information of specific package.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: The precheck upgrade package request was accepted and is being processed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The precheck upgrade package is not allowed in the current state.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when an error occurs.
      security:
      - BearerAuth: []
      summary: Precheck upgrade package by ID
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/precheck-cancellation:
    parameters:
    - $ref: '#/components/parameters/upgradePackageId'
    post:
      description: 'Cancel the precheck for an upgrade package by specifying its ID. Use this API when the upgrade package is stopped in the PROCESSING state. When the cancellation completes, the upgrade package state changes to PRECHECK_FAILED.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: cancelPrecheck
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Precheck cancellation request was accepted and is being processed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Upgrade precheck cancellation request is not allowed in the current state.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when an error occurs.
      security:
      - BearerAuth: []
      summary: Cancel the precheck
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/upgrade-packages/{id}/revert:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Revert hotfix upgrade package by id. '
      operationId: revertUpgradePackage
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevertResponse'
          description: The revert upgrade package request was accepted and is being processed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The revert upgrade package request is bad request.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The upgrade package is not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The revert upgrade package request is conflict because other upgrade package operation is running.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Revert hotfix upgrade package
      tags:
      - Upgrade
  /api/v2/upgrade-packages/{id}/upgrade-cancellation:
    parameters:
    - $ref: '#/components/parameters/upgradePackageId'
    post:
      description: 'Cancel the upgrade for an upgrade package by specifying its ID. Use this API when the upgrade package is stopped in the INSTALLED_CORE state. When cancellation is complete, the upgrade package state changes to INSTALLED_WITH_ERRORS.

        > This endpoint supports execution by the following roles: Administrator

        '
      operationId: cancelUpgrade
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackage'
          description: Upgrade cancellation request was accepted and is being processed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Cannot find an upgrade package with the specified ID.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Upgrade cancellation request is not allowed in the current state.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The default response when an error occurs.
      security:
      - BearerAuth: []
      summary: Cancel the upgrade
      tags:
      - Upgrade
      x-ppdm-executable-roles: admin
  /api/v2/user-groups:
    get:
      description: 'Retrieves all user groups, which are identity source group-to-role mappings. These user groups define who has access to the system and the actions they can perform based on their role.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getUserGroups
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Filter the user groups by role ID or role name.
        in: query
        name: role
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroups'
          description: Successfully retrieved all the user groups.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all user groups
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a user group, which is an identity source group-to-role mapping. These user groups define who has access to the system and the actions they can perform based on their role.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: createUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
        description: User Group
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Successfully created the user group.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create a user group
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/user-groups/{userGroupId}:
    delete:
      description: 'Deletes a user group by ID. When the user group is deleted, the users that are defined by the user group no longer have access to the system and can no longer perform actions.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: deleteUserGroup
      parameters:
      - description: User group ID.
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully delete the user group.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user group was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a user group by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,security_admin
    get:
      description: 'Retrieves a user group by ID, which is an identity source group-to-role mapping. User groups define who has access to the system and the actions they can perform based on their role.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getUserGroup
      parameters:
      - description: User group ID.
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Successfully retrieved the specified user group.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user group was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a user group by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
    put:
      description: 'Updates a user group by ID. When the user group is updated, the users that are defined by the user group have updated privileges to perform actions that are defined by their role.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: updateUserGroup
      parameters:
      - description: User group ID.
        in: path
        name: userGroupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroup'
        description: User Group
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: Successfully updated the user group.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user group was not found.
        '409':
          description: Conflict.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a user group by ID
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/users:
    get:
      description: 'Retrieves the list of all local users. The list of user information includes user information such as name, username, and roles.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getUsers
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      - description: Filters the user by role ID or role name.
        in: query
        name: role
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Successfully retrieved the list of users.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get all the local system users
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a user. Once the user is created, the user can access the system and perform actions that are defined by the user role.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully created the user.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The Authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Create a local system user
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/users/{userId}:
    delete:
      description: 'Deletes a user by ID. When the user is deleted, the user can no longer access the system or perform any actions.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: deleteUser
      parameters:
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the specified user.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Delete a local system user by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,security_admin
    get:
      description: 'Retrieves the user that is specified by ID. The list of user information includes information such as name, username, and roles.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getUser
      parameters:
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully retrieved the specified user.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Get a local system user by ID
      tags:
      - User Security Management
      x-ppdm-executable-roles: admin,readonly,security_admin
    put:
      description: 'Updates a user by ID. When updated, the user information is available. If the role changes, the user can perform only those actions that are defined by the role.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: updateUser
      parameters:
      - description: User ID.
        in: path
        name: userId
        required: true
        schema:
          type: string
      - description: Logged in user password to modify sensitive data.
        in: header
        name: x-auth-password
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successfully updated the user properties.
        '400':
          description: The request body is either invalid or is missing the required fields.
        '401':
          description: The authorization token is either invalid or expired.
        '403':
          description: The user does not have the proper privileges to perform the action.
        '404':
          description: The user was not found.
        '409':
          description: Conflict.
        '417':
          description: Expectation failed.
        '422':
          description: Unprocessable entity.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
        '503':
          description: The operation is currently unavailable. The system may currently be in maintenance mode.
      security:
      - BearerAuth: []
      summary: Update a local system user by ID
      tags:
      - User Security Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/vib-details:
    get:
      description: Returns the list of vSphere Installation Bundles and their details.
      operationId: get-api-v2-vib-details
      parameters:
      - in: query
        name: parentResourceId
        schema:
          type: string
      - description: Parent Resource Type ESX or ESX Cluster
        in: query
        name: parentResourceType
        schema:
          type: string
      - in: query
        name: resourceId
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VSphereInstallationBundle'
                type: array
          description: Successfully returned the available vSphere Installation Bundle details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Get all vSphere Installation Bundles
      tags:
      - vSphere Installation Bundle
  /api/v2/vib-install-batch:
    post:
      description: Install VIBs by selecting the ESX, ESX Cluster or vCenter as target
      operationId: post-api-v2-vib-install-batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VibOperationBatchRequest'
        required: false
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VibOperationBatchResponse'
          description: The request was accepted and returned multiple results.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: 'The requestor is not authorized to perform this operation.  '
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Install vSphere Installation Bundle
      tags:
      - vSphere Installation Bundle
      x-codegen-request-body-name: body
  /api/v2/vib-uninstall-batch:
    post:
      description: Uninstall VIBs by selecting the ESX, ESX Cluster or vCenter as target
      operationId: post-api-v2-vib-uninstall-batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VibOperationBatchRequest'
        required: false
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VibOperationBatchResponse'
          description: The request was accepted and returned multiple results.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Uninstall vSphere Installation Bundle
      tags:
      - vSphere Installation Bundle
      x-codegen-request-body-name: body
  /api/v2/vib-upgrade-batch:
    post:
      description: Updates the vSphere Installation Bundles (VIBs) by selecting the ESXi or ESXi cluster as the target.
      operationId: post-api-v2-vib-upgrade-batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VibOperationBatchRequest'
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VibOperationBatchResponse'
          description: The request was accepted and returned multiple results.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update the vSphere Installation Bundle (VIB)
      tags:
      - vSphere Installation Bundle
      x-codegen-request-body-name: body
  /api/v2/vm-agent-installation:
    post:
      description: 'Initiates agent installation on selected VM asset.

        > This endpoint supports execution by the following roles: Administrator, Restore Administrator

        '
      operationId: initiateAgentInstallationOnVm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmAgentInstallationRequest'
        description: Request payload to initiate agent installation on VM.
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmAgentInstallationResponse'
          description: Successfully triggered the agent installation process on VM.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request is not valid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not authorized to perform this operation.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The requestor is not allowed to perform this operation.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error prevented the server from fulfilling your request.
      security:
      - BearerAuth: []
      summary: Initiate agent installation on VM asset
      tags:
      - Asset Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,restore_admin
  /api/v2/whitelist:
    get:
      description: 'Retrieves all whitelist entries. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator


        > This endpoint supports pagination with types: random

        '
      operationId: getWhitelists
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/orderby'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelists'
          description: Successfully retrieved the whitelist entries.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Get all the whitelist entries
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,readonly,security_admin
      x-ppdm-pagination: random
    post:
      description: 'Creates a whitelist entry. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration. Approved hosts can be approved for a user-defined period.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: createWhitelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Whitelist'
        description: Whitelist
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully retrieved the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Create a whitelist entry
      tags:
      - Whitelist Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/whitelist/automatic:
    get:
      description: 'Retrieves the automatic whitelist element, if available. If the automatic whitelist is not set, HTTP 404 is returned. If the automatic whitelist is set, HTTP 200 is returned with the corresponding automatic whitelist element. The ID of the automatic whitelist element is always the same.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getAutomaticWhitelist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully retrieved the automatic whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The automatic whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Get automatic whitelist
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,readonly,security_admin
    post:
      description: 'Enables automatic whitelist by creating whitelist entry. IP address must be set to 0.0.0.0 and state must be set to AUTOMATIC in the payload. The expiresAt property specifies when the automatic whitelist should expire.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: enableAutomaticWhitelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Whitelist'
        description: Whitelist Automatic
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully enabled the automatic whitelist feature.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Enable automatic whitelist
      tags:
      - Whitelist Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
  /api/v2/whitelist/{id}:
    delete:
      description: 'Deletes a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: deleteWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Delete a whitelist entry
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,security_admin
    get:
      description: 'Retrieves a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: Administrator, User, Security Administrator

        '
      operationId: getWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully retrieved the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Get a whitelist entry
      tags:
      - Whitelist Management
      x-ppdm-executable-roles: admin,readonly,security_admin
    patch:
      description: 'Updates specific properties in the whitelist by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: patchWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Whitelist'
        description: Whitelist
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully updated the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Patch a whitelist entry
      tags:
      - Whitelist Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
    put:
      description: 'Updates a whitelist entry by the specified ID. The whitelist defines which hosts are either pending, approved, or rejected for application agent registration.

        > This endpoint supports execution by the following roles: Administrator, Security Administrator

        '
      operationId: updateWhitelist
      parameters:
      - description: Whitelist ID.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Whitelist'
        description: Whitelist.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whitelist'
          description: Successfully updated the whitelist entry.
        '401':
          description: The authorization token is either invalid or expired.
        '404':
          description: The whitelist entry was not found.
        '500':
          description: An internal server error occurred. Please contact the system administrator.
      security:
      - BearerAuth: []
      summary: Update a whitelist entry
      tags:
      - Whitelist Management
      x-codegen-request-body-name: body
      x-ppdm-executable-roles: admin,security_admin
servers:
- url: https://localhost:8443
tags:
- name: Agent Update Session
- name: Appliance Management
- name: Application Data Management
- name: Asset Management
- name: Asset Metadata
- name: Authentication and Authorization
- name: Cloud Disaster Recovery
- name: Compliance
- name: Copy Management
- name: Credentials Management
- name: Discovery
- name: File Level Restore
- name: Installation
- name: Inventory Source Management
- name: Kubernetes Data Management
- name: Licenses Management
- name: Location Management
- name: Log Management
- name: Monitoring
- name: NAS Data Management
- name: Protection Policies
- name: Public
- name: Recovery and Reuse Management
- name: Remote Service
- name: Reporting
- name: Resource Details
- name: Resource Metrics
- name: Restore Plan
- name: Search Clusters
- name: Secrets Manager
- name: Server Disaster Recovery
- name: Storage Management
- name: Telemetry Setting
- name: Upgrade
- name: User Security Management
- name: Virtual Machine Data Management
- name: vSphere Installation Bundle
- name: Whitelist Management
x-version: 2.14.0
